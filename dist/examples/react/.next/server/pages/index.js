/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./components/Content.tsx":
/*!********************************!*\
  !*** ./components/Content.tsx ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! near-api-js */ \"near-api-js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _contexts_WalletSelectorContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contexts/WalletSelectorContext */ \"./contexts/WalletSelectorContext.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ \"./constants.ts\");\n/* harmony import */ var _SignIn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SignIn */ \"./components/SignIn.tsx\");\n/* harmony import */ var _Form__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Form */ \"./components/Form.tsx\");\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Messages */ \"./components/Messages.tsx\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Form__WEBPACK_IMPORTED_MODULE_5__]);\n_Form__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar _jsxFileName = \"/Users/campv/Documents/Projects/wallet-selector/examples/react/components/Content.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\nconst SUGGESTED_DONATION = \"0\";\nconst BOATLOAD_OF_GAS = near_api_js__WEBPACK_IMPORTED_MODULE_1__.utils.format.parseNearAmount(\"0.00000000003\");\n\nconst Content = () => {\n  const {\n    selector,\n    modal,\n    accounts,\n    accountId\n  } = (0,_contexts_WalletSelectorContext__WEBPACK_IMPORTED_MODULE_2__.useWalletSelector)();\n  const {\n    0: account,\n    1: setAccount\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const {\n    0: messages,\n    1: setMessages\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const getAccount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async () => {\n    if (!accountId) {\n      return null;\n    }\n\n    const {\n      network\n    } = selector.options;\n    const provider = new near_api_js__WEBPACK_IMPORTED_MODULE_1__.providers.JsonRpcProvider({\n      url: network.nodeUrl\n    });\n    return provider.query({\n      request_type: \"view_account\",\n      finality: \"final\",\n      account_id: accountId\n    }).then(data => _objectSpread(_objectSpread({}, data), {}, {\n      account_id: accountId\n    }));\n  }, [accountId, selector.options]);\n  const getMessages = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    const {\n      network\n    } = selector.options;\n    const provider = new near_api_js__WEBPACK_IMPORTED_MODULE_1__.providers.JsonRpcProvider({\n      url: network.nodeUrl\n    });\n    return provider.query({\n      request_type: \"call_function\",\n      account_id: _constants__WEBPACK_IMPORTED_MODULE_3__.CONTRACT_ID,\n      method_name: \"getMessages\",\n      args_base64: \"\",\n      finality: \"optimistic\"\n    }).then(res => JSON.parse(Buffer.from(res.result).toString()));\n  }, [selector]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    // TODO: don't just fetch once; subscribe!\n    getMessages().then(setMessages);\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!accountId) {\n      return setAccount(null);\n    }\n\n    setLoading(true);\n    getAccount().then(nextAccount => {\n      setAccount(nextAccount);\n      setLoading(false);\n    });\n  }, [accountId, getAccount]);\n\n  const handleSignIn = () => {\n    modal.show();\n  };\n\n  const handleSignOut = async () => {\n    const wallet = await selector.wallet();\n    wallet.signOut().catch(err => {\n      console.log(\"Failed to sign out\");\n      console.error(err);\n    });\n  };\n\n  const handleSwitchWallet = () => {\n    modal.show();\n  };\n\n  const handleSwitchAccount = () => {\n    const currentIndex = accounts.findIndex(x => x.accountId === accountId);\n    const nextIndex = currentIndex < accounts.length - 1 ? currentIndex + 1 : 0;\n    const nextAccountId = accounts[nextIndex].accountId;\n    selector.setActiveAccount(nextAccountId);\n    alert(\"Switched account to \" + nextAccountId);\n  };\n\n  const addMessages = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (message, donation, multiple) => {\n    const {\n      contract\n    } = selector.store.getState();\n    const wallet = await selector.wallet();\n\n    if (!multiple) {\n      return wallet.signAndSendTransaction({\n        signerId: accountId,\n        actions: [{\n          type: \"FunctionCall\",\n          params: {\n            methodName: \"addMessage\",\n            args: {\n              text: message\n            },\n            gas: BOATLOAD_OF_GAS,\n            deposit: near_api_js__WEBPACK_IMPORTED_MODULE_1__.utils.format.parseNearAmount(donation)\n          }\n        }]\n      }).catch(err => {\n        alert(\"Failed to add message\");\n        console.log(\"Failed to add message\");\n        throw err;\n      });\n    }\n\n    const transactions = [];\n\n    for (let i = 0; i < 2; i += 1) {\n      transactions.push({\n        signerId: accountId,\n        receiverId: contract.contractId,\n        actions: [{\n          type: \"FunctionCall\",\n          params: {\n            methodName: \"addMessage\",\n            args: {\n              text: `${message} (${i + 1}/2)`\n            },\n            gas: BOATLOAD_OF_GAS,\n            deposit: near_api_js__WEBPACK_IMPORTED_MODULE_1__.utils.format.parseNearAmount(donation)\n          }\n        }]\n      });\n    }\n\n    return wallet.signAndSendTransactions({\n      transactions\n    }).catch(err => {\n      alert(\"Failed to add messages exception \" + err);\n      console.log(\"Failed to add messages\");\n      throw err;\n    });\n  }, [selector, accountId]);\n\n  const handleVerifyOwner = async () => {\n    const wallet = await selector.wallet();\n\n    try {\n      const owner = await wallet.verifyOwner({\n        message: \"test message for verification\"\n      });\n\n      if (owner) {\n        alert(`Signature for verification: ${JSON.stringify(owner)}`);\n      }\n    } catch (err) {\n      const message = err instanceof Error ? err.message : \"Something went wrong\";\n      alert(message);\n    }\n  };\n\n  const handleSubmit = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async e => {\n    e.preventDefault(); // TODO: Fix the typing so that target.elements exists..\n    // @ts-ignore.\n\n    const {\n      fieldset,\n      message,\n      donation,\n      multiple\n    } = e.target.elements;\n    fieldset.disabled = true;\n    return addMessages(message.value, donation.value || \"0\", multiple.checked).then(() => {\n      return getMessages().then(nextMessages => {\n        setMessages(nextMessages);\n        message.value = \"\";\n        donation.value = SUGGESTED_DONATION;\n        fieldset.disabled = false;\n        message.focus();\n      }).catch(err => {\n        alert(\"Failed to refresh messages\");\n        console.log(\"Failed to refresh messages\");\n        throw err;\n      });\n    }).catch(err => {\n      console.error(err);\n      fieldset.disabled = false;\n    });\n  }, [addMessages, getMessages]);\n\n  if (loading) {\n    return null;\n  }\n\n  if (!account) {\n    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(\"div\", {\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(\"button\", {\n          onClick: handleSignIn,\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, undefined)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(_SignIn__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, undefined);\n  }\n\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(\"div\", {\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(\"button\", {\n        onClick: handleSignOut,\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(\"button\", {\n        onClick: handleSwitchWallet,\n        children: \"Switch Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(\"button\", {\n        onClick: handleVerifyOwner,\n        children: \"Verify Owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, undefined), accounts.length > 1 && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(\"button\", {\n        onClick: handleSwitchAccount,\n        children: \"Switch Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(_Form__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n      account: account,\n      onSubmit: e => handleSubmit(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(_Messages__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, undefined)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, undefined);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Content);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Content.tsx\n");

/***/ }),

/***/ "./components/Form.tsx":
/*!*****************************!*\
  !*** ./components/Form.tsx ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! big.js */ \"big.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([big_js__WEBPACK_IMPORTED_MODULE_1__]);\nbig_js__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar _jsxFileName = \"/Users/campv/Documents/Projects/wallet-selector/examples/react/components/Form.tsx\";\n\n\n\n\nconst Form = ({\n  account,\n  onSubmit\n}) => {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"form\", {\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"fieldset\", {\n      id: \"fieldset\",\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"p\", {\n        children: [\"Sign the guest book, \", account.account_id, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"p\", {\n        className: \"highlight\",\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"input\", {\n          autoComplete: \"off\",\n          autoFocus: true,\n          id: \"message\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"p\", {\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"label\", {\n          htmlFor: \"donation\",\n          children: \"Donation (optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"input\", {\n          autoComplete: \"off\",\n          defaultValue: \"0\",\n          id: \"donation\",\n          max: (0,big_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(account.amount).div(10 ** 24).toString(),\n          min: \"0\",\n          step: \"0.01\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"span\", {\n          title: \"NEAR Tokens\",\n          children: \"\\u24C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"p\", {\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"label\", {\n          htmlFor: \"multiple\",\n          children: \"Multiple Transactions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"input\", {\n          id: \"multiple\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"button\", {\n        type: \"submit\",\n        children: \"Sign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, undefined)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, undefined);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Form);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0Zvcm0udHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOzs7QUFTQSxNQUFNRSxJQUF5QixHQUFHLENBQUM7RUFBRUMsT0FBRjtFQUFXQztBQUFYLENBQUQsS0FBMkI7RUFDM0Qsb0JBQ0U7SUFBTSxRQUFRLEVBQUVBLFFBQWhCO0lBQUEsdUJBQ0U7TUFBVSxFQUFFLEVBQUMsVUFBYjtNQUFBLHdCQUNFO1FBQUEsb0NBQXlCRCxPQUFPLENBQUNFLFVBQWpDO01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQSxhQURGLGVBRUU7UUFBRyxTQUFTLEVBQUMsV0FBYjtRQUFBLHdCQUNFO1VBQU8sT0FBTyxFQUFDLFNBQWY7VUFBQTtRQUFBO1VBQUE7VUFBQTtVQUFBO1FBQUEsYUFERixlQUVFO1VBQU8sWUFBWSxFQUFDLEtBQXBCO1VBQTBCLFNBQVMsTUFBbkM7VUFBb0MsRUFBRSxFQUFDLFNBQXZDO1VBQWlELFFBQVE7UUFBekQ7VUFBQTtVQUFBO1VBQUE7UUFBQSxhQUZGO01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQSxhQUZGLGVBTUU7UUFBQSx3QkFDRTtVQUFPLE9BQU8sRUFBQyxVQUFmO1VBQUE7UUFBQTtVQUFBO1VBQUE7VUFBQTtRQUFBLGFBREYsZUFFRTtVQUNFLFlBQVksRUFBQyxLQURmO1VBRUUsWUFBWSxFQUFFLEdBRmhCO1VBR0UsRUFBRSxFQUFDLFVBSEw7VUFJRSxHQUFHLEVBQUVKLGtEQUFHLENBQUNFLE9BQU8sQ0FBQ0csTUFBVCxDQUFILENBQ0ZDLEdBREUsQ0FDRSxNQUFNLEVBRFIsRUFFRkMsUUFGRSxFQUpQO1VBT0UsR0FBRyxFQUFDLEdBUE47VUFRRSxJQUFJLEVBQUMsTUFSUDtVQVNFLElBQUksRUFBQztRQVRQO1VBQUE7VUFBQTtVQUFBO1FBQUEsYUFGRixlQWFFO1VBQU0sS0FBSyxFQUFDLGFBQVo7VUFBQTtRQUFBO1VBQUE7VUFBQTtVQUFBO1FBQUEsYUFiRjtNQUFBO1FBQUE7UUFBQTtRQUFBO01BQUEsYUFORixlQXFCRTtRQUFBLHdCQUNFO1VBQU8sT0FBTyxFQUFDLFVBQWY7VUFBQTtRQUFBO1VBQUE7VUFBQTtVQUFBO1FBQUEsYUFERixlQUVFO1VBQU8sRUFBRSxFQUFDLFVBQVY7VUFBcUIsSUFBSSxFQUFDO1FBQTFCO1VBQUE7VUFBQTtVQUFBO1FBQUEsYUFGRjtNQUFBO1FBQUE7UUFBQTtRQUFBO01BQUEsYUFyQkYsZUF5QkU7UUFBUSxJQUFJLEVBQUMsUUFBYjtRQUFBO01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQSxhQXpCRjtJQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7RUFERjtJQUFBO0lBQUE7SUFBQTtFQUFBLGFBREY7QUErQkQsQ0FoQ0Q7O0FBa0NBLGlFQUFlTixJQUFmLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL0Zvcm0udHN4P2VlZDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZvcm1FdmVudEhhbmRsZXIgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBCaWcgZnJvbSBcImJpZy5qc1wiO1xuXG5pbXBvcnQgdHlwZSB7IEFjY291bnQgfSBmcm9tIFwiLi4vaW50ZXJmYWNlc1wiO1xuXG5pbnRlcmZhY2UgRm9ybVByb3BzIHtcbiAgYWNjb3VudDogQWNjb3VudDtcbiAgb25TdWJtaXQ6IEZvcm1FdmVudEhhbmRsZXI7XG59XG5cbmNvbnN0IEZvcm06IFJlYWN0LkZDPEZvcm1Qcm9wcz4gPSAoeyBhY2NvdW50LCBvblN1Ym1pdCB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGZvcm0gb25TdWJtaXQ9e29uU3VibWl0fT5cbiAgICAgIDxmaWVsZHNldCBpZD1cImZpZWxkc2V0XCI+XG4gICAgICAgIDxwPlNpZ24gdGhlIGd1ZXN0IGJvb2ssIHthY2NvdW50LmFjY291bnRfaWR9ITwvcD5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwiaGlnaGxpZ2h0XCI+XG4gICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJtZXNzYWdlXCI+TWVzc2FnZTo8L2xhYmVsPlxuICAgICAgICAgIDxpbnB1dCBhdXRvQ29tcGxldGU9XCJvZmZcIiBhdXRvRm9jdXMgaWQ9XCJtZXNzYWdlXCIgcmVxdWlyZWQgLz5cbiAgICAgICAgPC9wPlxuICAgICAgICA8cD5cbiAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImRvbmF0aW9uXCI+RG9uYXRpb24gKG9wdGlvbmFsKTo8L2xhYmVsPlxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgYXV0b0NvbXBsZXRlPVwib2ZmXCJcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17XCIwXCJ9XG4gICAgICAgICAgICBpZD1cImRvbmF0aW9uXCJcbiAgICAgICAgICAgIG1heD17QmlnKGFjY291bnQuYW1vdW50KVxuICAgICAgICAgICAgICAuZGl2KDEwICoqIDI0KVxuICAgICAgICAgICAgICAudG9TdHJpbmcoKX1cbiAgICAgICAgICAgIG1pbj1cIjBcIlxuICAgICAgICAgICAgc3RlcD1cIjAuMDFcIlxuICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8c3BhbiB0aXRsZT1cIk5FQVIgVG9rZW5zXCI+4pODPC9zcGFuPlxuICAgICAgICA8L3A+XG4gICAgICAgIDxwPlxuICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwibXVsdGlwbGVcIj5NdWx0aXBsZSBUcmFuc2FjdGlvbnM6PC9sYWJlbD5cbiAgICAgICAgICA8aW5wdXQgaWQ9XCJtdWx0aXBsZVwiIHR5cGU9XCJjaGVja2JveFwiIC8+XG4gICAgICAgIDwvcD5cbiAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCI+U2lnbjwvYnV0dG9uPlxuICAgICAgPC9maWVsZHNldD5cbiAgICA8L2Zvcm0+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBGb3JtO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiQmlnIiwiRm9ybSIsImFjY291bnQiLCJvblN1Ym1pdCIsImFjY291bnRfaWQiLCJhbW91bnQiLCJkaXYiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/Form.tsx\n");

/***/ }),

/***/ "./components/Messages.tsx":
/*!*********************************!*\
  !*** ./components/Messages.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\nvar _jsxFileName = \"/Users/campv/Documents/Projects/wallet-selector/examples/react/components/Messages.tsx\";\n\n\n\n\nconst Messages = ({\n  messages\n}) => {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"h2\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, undefined), messages.map((message, i) =>\n    /*#__PURE__*/\n    // TODO: format as cards, add timestamp\n    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n      className: message.premium ? \"is-premium\" : \"\",\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"strong\", {\n        children: message.sender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, undefined), \":\", /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 45\n      }, undefined), message.text]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, undefined))]\n  }, void 0, true);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Messages);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL01lc3NhZ2VzLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztBQU9BLE1BQU1DLFFBQWlDLEdBQUcsQ0FBQztFQUFFQztBQUFGLENBQUQsS0FBa0I7RUFDMUQsb0JBQ0U7SUFBQSx3QkFDRTtNQUFBO0lBQUE7TUFBQTtNQUFBO01BQUE7SUFBQSxhQURGLEVBRUdBLFFBQVEsQ0FBQ0MsR0FBVCxDQUFhLENBQUNDLE9BQUQsRUFBVUMsQ0FBVjtJQUFBO0lBQ1o7SUFDQTtNQUFXLFNBQVMsRUFBRUQsT0FBTyxDQUFDRSxPQUFSLEdBQWtCLFlBQWxCLEdBQWlDLEVBQXZEO01BQUEsd0JBQ0U7UUFBQSxVQUFTRixPQUFPLENBQUNHO01BQWpCO1FBQUE7UUFBQTtRQUFBO01BQUEsYUFERixvQkFDb0M7UUFBQTtRQUFBO1FBQUE7TUFBQSxhQURwQyxFQUVHSCxPQUFPLENBQUNJLElBRlg7SUFBQSxHQUFRSCxDQUFSO01BQUE7TUFBQTtNQUFBO0lBQUEsYUFGRCxDQUZIO0VBQUEsZ0JBREY7QUFZRCxDQWJEOztBQWVBLGlFQUFlSixRQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9NZXNzYWdlcy50c3g/NGZjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHlwZSB7IE1lc3NhZ2UgfSBmcm9tIFwiLi4vaW50ZXJmYWNlc1wiO1xuXG5pbnRlcmZhY2UgTWVzc2FnZXNQcm9wcyB7XG4gIG1lc3NhZ2VzOiBBcnJheTxNZXNzYWdlPjtcbn1cblxuY29uc3QgTWVzc2FnZXM6IFJlYWN0LkZDPE1lc3NhZ2VzUHJvcHM+ID0gKHsgbWVzc2FnZXMgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8aDI+TWVzc2FnZXM8L2gyPlxuICAgICAge21lc3NhZ2VzLm1hcCgobWVzc2FnZSwgaSkgPT4gKFxuICAgICAgICAvLyBUT0RPOiBmb3JtYXQgYXMgY2FyZHMsIGFkZCB0aW1lc3RhbXBcbiAgICAgICAgPHAga2V5PXtpfSBjbGFzc05hbWU9e21lc3NhZ2UucHJlbWl1bSA/IFwiaXMtcHJlbWl1bVwiIDogXCJcIn0+XG4gICAgICAgICAgPHN0cm9uZz57bWVzc2FnZS5zZW5kZXJ9PC9zdHJvbmc+OjxiciAvPlxuICAgICAgICAgIHttZXNzYWdlLnRleHR9XG4gICAgICAgIDwvcD5cbiAgICAgICkpfVxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVzc2FnZXM7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJNZXNzYWdlcyIsIm1lc3NhZ2VzIiwibWFwIiwibWVzc2FnZSIsImkiLCJwcmVtaXVtIiwic2VuZGVyIiwidGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/Messages.tsx\n");

/***/ }),

/***/ "./components/SignIn.tsx":
/*!*******************************!*\
  !*** ./components/SignIn.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\nvar _jsxFileName = \"/Users/campv/Documents/Projects/wallet-selector/examples/react/components/SignIn.tsx\";\n\n\n\nconst SignIn = () => {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n      children: \"This app demonstrates a key element of NEAR\\u2019s UX: once an app has permission to make calls on behalf of a user (that is, once a user signs in), the app can make calls to the blockchain for them without prompting extra confirmation. So you\\u2019ll see that if you don\\u2019t include a donation, your message gets posted right to the guest book.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n      children: \"But if you do add a donation, then NEAR will double-check that you\\u2019re ok with sending money to this app.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n      children: \"Go ahead and sign in to try it out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, undefined)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, undefined);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SignIn);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1NpZ25Jbi50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7OztBQUVBLE1BQU1FLE1BQWdCLEdBQUcsTUFBTTtFQUM3QixvQkFDRSw4REFBQywyQ0FBRDtJQUFBLHdCQUNFO01BQUE7SUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBLGFBREYsZUFRRTtNQUFBO0lBQUE7TUFBQTtNQUFBO01BQUE7SUFBQSxhQVJGLGVBWUU7TUFBQTtJQUFBO01BQUE7TUFBQTtNQUFBO0lBQUEsYUFaRjtFQUFBO0lBQUE7SUFBQTtJQUFBO0VBQUEsYUFERjtBQWdCRCxDQWpCRDs7QUFtQkEsaUVBQWVBLE1BQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL1NpZ25Jbi50c3g/Mjc1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuY29uc3QgU2lnbkluOiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8cD5cbiAgICAgICAgVGhpcyBhcHAgZGVtb25zdHJhdGVzIGEga2V5IGVsZW1lbnQgb2YgTkVBUuKAmXMgVVg6IG9uY2UgYW4gYXBwIGhhc1xuICAgICAgICBwZXJtaXNzaW9uIHRvIG1ha2UgY2FsbHMgb24gYmVoYWxmIG9mIGEgdXNlciAodGhhdCBpcywgb25jZSBhIHVzZXIgc2lnbnNcbiAgICAgICAgaW4pLCB0aGUgYXBwIGNhbiBtYWtlIGNhbGxzIHRvIHRoZSBibG9ja2NoYWluIGZvciB0aGVtIHdpdGhvdXQgcHJvbXB0aW5nXG4gICAgICAgIGV4dHJhIGNvbmZpcm1hdGlvbi4gU28geW914oCZbGwgc2VlIHRoYXQgaWYgeW91IGRvbuKAmXQgaW5jbHVkZSBhIGRvbmF0aW9uLFxuICAgICAgICB5b3VyIG1lc3NhZ2UgZ2V0cyBwb3N0ZWQgcmlnaHQgdG8gdGhlIGd1ZXN0IGJvb2suXG4gICAgICA8L3A+XG4gICAgICA8cD5cbiAgICAgICAgQnV0IGlmIHlvdSBkbyBhZGQgYSBkb25hdGlvbiwgdGhlbiBORUFSIHdpbGwgZG91YmxlLWNoZWNrIHRoYXQgeW914oCZcmUgb2tcbiAgICAgICAgd2l0aCBzZW5kaW5nIG1vbmV5IHRvIHRoaXMgYXBwLlxuICAgICAgPC9wPlxuICAgICAgPHA+R28gYWhlYWQgYW5kIHNpZ24gaW4gdG8gdHJ5IGl0IG91dCE8L3A+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNpZ25JbjtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIkZyYWdtZW50IiwiU2lnbkluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/SignIn.tsx\n");

/***/ }),

/***/ "./constants.ts":
/*!**********************!*\
  !*** ./constants.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONTRACT_ID\": () => (/* binding */ CONTRACT_ID)\n/* harmony export */ });\nconst CONTRACT_ID = \"guest-book.testnet\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb25zdGFudHMudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFdBQVcsR0FBRyxvQkFBcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb25zdGFudHMudHM/ZGQ0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgQ09OVFJBQ1RfSUQgPSBcImd1ZXN0LWJvb2sudGVzdG5ldFwiO1xuIl0sIm5hbWVzIjpbIkNPTlRSQUNUX0lEIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./constants.ts\n");

/***/ }),

/***/ "./contexts/WalletSelectorContext.tsx":
/*!********************************************!*\
  !*** ./contexts/WalletSelectorContext.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WalletSelectorContextProvider\": () => (/* binding */ WalletSelectorContextProvider),\n/* harmony export */   \"useWalletSelector\": () => (/* binding */ useWalletSelector)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"rxjs\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rxjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @near-wallet-selector/core */ \"../../packages/core/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_modal_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @near-wallet-selector/modal-ui */ \"../../dist/packages/modal-ui/index.js\");\n/* harmony import */ var _near_wallet_selector_default_wallets__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @near-wallet-selector/default-wallets */ \"../../packages/default-wallets/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_near_wallet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @near-wallet-selector/near-wallet */ \"../../packages/near-wallet/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_sender__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @near-wallet-selector/sender */ \"../../packages/sender/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_math_wallet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @near-wallet-selector/math-wallet */ \"../../packages/math-wallet/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_nightly__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @near-wallet-selector/nightly */ \"../../packages/nightly/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_meteor_wallet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @near-wallet-selector/meteor-wallet */ \"../../packages/meteor-wallet/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_nightly_connect__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @near-wallet-selector/nightly-connect */ \"../../packages/nightly-connect/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_nearfi__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @near-wallet-selector/nearfi */ \"../../packages/nearfi/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_wallet_connect__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @near-wallet-selector/wallet-connect */ \"../../packages/wallet-connect/src/index.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../constants */ \"./constants.ts\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__);\nvar _jsxFileName = \"/Users/campv/Documents/Projects/wallet-selector/examples/react/contexts/WalletSelectorContext.tsx\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst WalletSelectorContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst WalletSelectorContextProvider = ({\n  children\n}) => {\n  const {\n    0: selector,\n    1: setSelector\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const {\n    0: modal,\n    1: setModal\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const {\n    0: accounts,\n    1: setAccounts\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const init = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async () => {\n    const _selector = await (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_2__.setupWalletSelector)({\n      network: \"testnet\",\n      debug: true,\n      modules: [...(await (0,_near_wallet_selector_default_wallets__WEBPACK_IMPORTED_MODULE_4__.setupDefaultWallets)()), (0,_near_wallet_selector_near_wallet__WEBPACK_IMPORTED_MODULE_5__.setupNearWallet)(), (0,_near_wallet_selector_sender__WEBPACK_IMPORTED_MODULE_6__.setupSender)(), (0,_near_wallet_selector_nearfi__WEBPACK_IMPORTED_MODULE_11__.setupNearFi)(), (0,_near_wallet_selector_math_wallet__WEBPACK_IMPORTED_MODULE_7__.setupMathWallet)(), (0,_near_wallet_selector_nightly__WEBPACK_IMPORTED_MODULE_8__.setupNightly)(), (0,_near_wallet_selector_meteor_wallet__WEBPACK_IMPORTED_MODULE_9__.setupMeteorWallet)(), (0,_near_wallet_selector_wallet_connect__WEBPACK_IMPORTED_MODULE_12__.setupWalletConnect)({\n        projectId: \"test...\",\n        metadata: {\n          name: \"NEAR Wallet Selector\",\n          description: \"Example dApp used by NEAR Wallet Selector\",\n          url: \"https://github.com/near/wallet-selector\",\n          icons: [\"https://avatars.githubusercontent.com/u/37784886\"]\n        }\n      }), (0,_near_wallet_selector_nightly_connect__WEBPACK_IMPORTED_MODULE_10__.setupNightlyConnect)({\n        url: \"wss://ncproxy.nightly.app/app\",\n        appMetadata: {\n          additionalInfo: \"\",\n          application: \"NEAR Wallet Selector\",\n          description: \"Example dApp used by NEAR Wallet Selector\",\n          icon: \"https://near.org/wp-content/uploads/2020/09/cropped-favicon-192x192.png\"\n        }\n      })]\n    });\n\n    const _modal = (0,_near_wallet_selector_modal_ui__WEBPACK_IMPORTED_MODULE_3__.setupModal)(_selector, {\n      contractId: _constants__WEBPACK_IMPORTED_MODULE_13__.CONTRACT_ID\n    });\n\n    const state = _selector.store.getState();\n\n    setAccounts(state.accounts);\n    window.selector = _selector;\n    window.modal = _modal;\n    setSelector(_selector);\n    setModal(_modal);\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    init().catch(err => {\n      console.error(err);\n      alert(\"Failed to initialise wallet selector\");\n    });\n  }, [init]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!selector) {\n      return;\n    }\n\n    const subscription = selector.store.observable.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(state => state.accounts), (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.distinctUntilChanged)()).subscribe(nextAccounts => {\n      console.log(\"Accounts Update\", nextAccounts);\n      setAccounts(nextAccounts);\n    });\n    return () => subscription.unsubscribe();\n  }, [selector]);\n\n  if (!selector || !modal) {\n    return null;\n  }\n\n  const accountId = accounts.find(account => account.active)?.accountId || null;\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxDEV)(WalletSelectorContext.Provider, {\n    value: {\n      selector,\n      modal,\n      accounts,\n      accountId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, undefined);\n};\nfunction useWalletSelector() {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(WalletSelectorContext);\n\n  if (!context) {\n    throw new Error(\"useWalletSelector must be used within a WalletSelectorContextProvider\");\n  }\n\n  return context;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./contexts/WalletSelectorContext.tsx\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _contexts_WalletSelectorContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contexts/WalletSelectorContext */ \"./contexts/WalletSelectorContext.tsx\");\n/* harmony import */ var _components_Content__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Content */ \"./components/Content.tsx\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_components_Content__WEBPACK_IMPORTED_MODULE_2__]);\n_components_Content__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar _jsxFileName = \"/Users/campv/Documents/Projects/wallet-selector/examples/react/pages/index.tsx\";\n\n\n\n\n\nconst Home = () => {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(\"h1\", {\n      children: \"NEAR Guest Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_contexts_WalletSelectorContext__WEBPACK_IMPORTED_MODULE_1__.WalletSelectorContextProvider, {\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components_Content__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, undefined)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, undefined);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Home);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUNBO0FBQ0E7OztBQUVBLE1BQU1HLElBQWMsR0FBRyxNQUFNO0VBQzNCLG9CQUNFLDhEQUFDLDJDQUFEO0lBQUEsd0JBQ0U7TUFBQTtJQUFBO01BQUE7TUFBQTtNQUFBO0lBQUEsYUFERixlQUVFLDhEQUFDLDBGQUFEO01BQUEsdUJBQ0UsOERBQUMsMkRBQUQ7UUFBQTtRQUFBO1FBQUE7TUFBQTtJQURGO01BQUE7TUFBQTtNQUFBO0lBQUEsYUFGRjtFQUFBO0lBQUE7SUFBQTtJQUFBO0VBQUEsYUFERjtBQVFELENBVEQ7O0FBV0EsaUVBQWVBLElBQWYsRSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3BhZ2VzL2luZGV4LnRzeD8wN2ZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTmV4dFBhZ2UgfSBmcm9tIFwibmV4dFwiO1xuaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFdhbGxldFNlbGVjdG9yQ29udGV4dFByb3ZpZGVyIH0gZnJvbSBcIi4uL2NvbnRleHRzL1dhbGxldFNlbGVjdG9yQ29udGV4dFwiO1xuaW1wb3J0IENvbnRlbnQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ29udGVudFwiO1xuXG5jb25zdCBIb21lOiBOZXh0UGFnZSA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8aDE+TkVBUiBHdWVzdCBCb29rPC9oMT5cbiAgICAgIDxXYWxsZXRTZWxlY3RvckNvbnRleHRQcm92aWRlcj5cbiAgICAgICAgPENvbnRlbnQgLz5cbiAgICAgIDwvV2FsbGV0U2VsZWN0b3JDb250ZXh0UHJvdmlkZXI+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEhvbWU7XG4iXSwibmFtZXMiOlsiRnJhZ21lbnQiLCJXYWxsZXRTZWxlY3RvckNvbnRleHRQcm92aWRlciIsIkNvbnRlbnQiLCJIb21lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "../../packages/core/src/index.ts":
/*!****************************************!*\
  !*** ../../packages/core/src/index.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getActiveAccount\": () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_1__.getActiveAccount),\n/* harmony export */   \"setupWalletSelector\": () => (/* reexport safe */ _lib_wallet_selector__WEBPACK_IMPORTED_MODULE_0__.setupWalletSelector),\n/* harmony export */   \"waitFor\": () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_1__.waitFor)\n/* harmony export */ });\n/* harmony import */ var _lib_wallet_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/wallet-selector */ \"../../packages/core/src/lib/wallet-selector.ts\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/helpers */ \"../../packages/core/src/lib/helpers/index.ts\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFNQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9pbmRleC50cz8zYjk3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIHtcbiAgV2FsbGV0U2VsZWN0b3IsXG4gIFdhbGxldFNlbGVjdG9yUGFyYW1zLFxuICBXYWxsZXRTZWxlY3RvckV2ZW50cyxcbiAgV2FsbGV0U2VsZWN0b3JTdG9yZSxcbn0gZnJvbSBcIi4vbGliL3dhbGxldC1zZWxlY3Rvci50eXBlc1wiO1xuZXhwb3J0IHsgc2V0dXBXYWxsZXRTZWxlY3RvciB9IGZyb20gXCIuL2xpYi93YWxsZXQtc2VsZWN0b3JcIjtcblxuZXhwb3J0IHR5cGUgeyBOZXR3b3JrLCBOZXR3b3JrSWQgfSBmcm9tIFwiLi9saWIvb3B0aW9ucy50eXBlc1wiO1xuZXhwb3J0IHR5cGUge1xuICBTdWJzY3JpcHRpb24sXG4gIFN0b3JhZ2VTZXJ2aWNlLFxuICBKc29uU3RvcmFnZVNlcnZpY2UsXG59IGZyb20gXCIuL2xpYi9zZXJ2aWNlc1wiO1xuZXhwb3J0IHR5cGUgeyBPcHRpb25hbCB9IGZyb20gXCIuL2xpYi91dGlscy50eXBlc1wiO1xuXG5leHBvcnQgdHlwZSB7XG4gIFdhbGxldFNlbGVjdG9yU3RhdGUsXG4gIENvbnRyYWN0U3RhdGUsXG4gIE1vZHVsZVN0YXRlLFxuICBBY2NvdW50U3RhdGUsXG59IGZyb20gXCIuL2xpYi9zdG9yZS50eXBlc1wiO1xuXG5leHBvcnQgdHlwZSB7XG4gIFdhbGxldE1vZHVsZUZhY3RvcnksXG4gIFdhbGxldE1vZHVsZSxcbiAgV2FsbGV0QmVoYXZpb3VyRmFjdG9yeSxcbiAgV2FsbGV0QmVoYXZpb3VyT3B0aW9ucyxcbiAgV2FsbGV0LFxuICBXYWxsZXRUeXBlLFxuICBXYWxsZXRNZXRhZGF0YSxcbiAgV2FsbGV0RXZlbnRzLFxuICBTaWduSW5QYXJhbXMsXG4gIEJyb3dzZXJXYWxsZXRNZXRhZGF0YSxcbiAgQnJvd3NlcldhbGxldEJlaGF2aW91cixcbiAgQnJvd3NlcldhbGxldCxcbiAgSW5qZWN0ZWRXYWxsZXRNZXRhZGF0YSxcbiAgSW5qZWN0ZWRXYWxsZXRCZWhhdmlvdXIsXG4gIEluamVjdGVkV2FsbGV0LFxuICBIYXJkd2FyZVdhbGxldE1ldGFkYXRhLFxuICBIYXJkd2FyZVdhbGxldFNpZ25JblBhcmFtcyxcbiAgSGFyZHdhcmVXYWxsZXRCZWhhdmlvdXIsXG4gIEhhcmR3YXJlV2FsbGV0LFxuICBIYXJkd2FyZVdhbGxldEFjY291bnQsXG4gIEJyaWRnZVdhbGxldE1ldGFkYXRhLFxuICBCcmlkZ2VXYWxsZXRCZWhhdmlvdXIsXG4gIEJyaWRnZVdhbGxldCxcbiAgVmVyaWZpZWRPd25lcixcbiAgVmVyaWZ5T3duZXJQYXJhbXMsXG4gIEFjY291bnQsXG4gIFRyYW5zYWN0aW9uLFxuICBBY3Rpb24sXG4gIEFjdGlvblR5cGUsXG4gIENyZWF0ZUFjY291bnRBY3Rpb24sXG4gIERlcGxveUNvbnRyYWN0QWN0aW9uLFxuICBGdW5jdGlvbkNhbGxBY3Rpb24sXG4gIFRyYW5zZmVyQWN0aW9uLFxuICBTdGFrZUFjdGlvbixcbiAgQWRkS2V5QWN0aW9uLFxuICBEZWxldGVLZXlBY3Rpb24sXG4gIERlbGV0ZUFjY291bnRBY3Rpb24sXG4gIEFkZEtleVBlcm1pc3Npb24sXG59IGZyb20gXCIuL2xpYi93YWxsZXRcIjtcblxuZXhwb3J0IHR5cGUgeyBGaW5hbEV4ZWN1dGlvbk91dGNvbWUgfSBmcm9tIFwibmVhci1hcGktanMvbGliL3Byb3ZpZGVyc1wiO1xuXG5leHBvcnQgeyB3YWl0Rm9yLCBnZXRBY3RpdmVBY2NvdW50IH0gZnJvbSBcIi4vbGliL2hlbHBlcnNcIjtcbiJdLCJuYW1lcyI6WyJzZXR1cFdhbGxldFNlbGVjdG9yIiwid2FpdEZvciIsImdldEFjdGl2ZUFjY291bnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../packages/core/src/index.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/constants.ts":
/*!************************************************!*\
  !*** ../../packages/core/src/lib/constants.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONTRACT\": () => (/* binding */ CONTRACT),\n/* harmony export */   \"PACKAGE_NAME\": () => (/* binding */ PACKAGE_NAME),\n/* harmony export */   \"PENDING_CONTRACT\": () => (/* binding */ PENDING_CONTRACT),\n/* harmony export */   \"PENDING_SELECTED_WALLET_ID\": () => (/* binding */ PENDING_SELECTED_WALLET_ID),\n/* harmony export */   \"SELECTED_WALLET_ID\": () => (/* binding */ SELECTED_WALLET_ID)\n/* harmony export */ });\nconst PACKAGE_NAME = \"near-wallet-selector\";\nconst CONTRACT = \"contract\";\nconst PENDING_CONTRACT = \"contract:pending\";\nconst SELECTED_WALLET_ID = `selectedWalletId`;\nconst PENDING_SELECTED_WALLET_ID = `selectedWalletId:pending`;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL2NvbnN0YW50cy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLE1BQU1BLFlBQVksR0FBRyxzQkFBckI7QUFFQSxNQUFNQyxRQUFRLEdBQUcsVUFBakI7QUFDQSxNQUFNQyxnQkFBZ0IsR0FBRyxrQkFBekI7QUFFQSxNQUFNQyxrQkFBa0IsR0FBSSxrQkFBNUI7QUFDQSxNQUFNQywwQkFBMEIsR0FBSSwwQkFBcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL2NvbnN0YW50cy50cz8xNTQ5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBQQUNLQUdFX05BTUUgPSBcIm5lYXItd2FsbGV0LXNlbGVjdG9yXCI7XG5cbmV4cG9ydCBjb25zdCBDT05UUkFDVCA9IFwiY29udHJhY3RcIjtcbmV4cG9ydCBjb25zdCBQRU5ESU5HX0NPTlRSQUNUID0gXCJjb250cmFjdDpwZW5kaW5nXCI7XG5cbmV4cG9ydCBjb25zdCBTRUxFQ1RFRF9XQUxMRVRfSUQgPSBgc2VsZWN0ZWRXYWxsZXRJZGA7XG5leHBvcnQgY29uc3QgUEVORElOR19TRUxFQ1RFRF9XQUxMRVRfSUQgPSBgc2VsZWN0ZWRXYWxsZXRJZDpwZW5kaW5nYDtcbiJdLCJuYW1lcyI6WyJQQUNLQUdFX05BTUUiLCJDT05UUkFDVCIsIlBFTkRJTkdfQ09OVFJBQ1QiLCJTRUxFQ1RFRF9XQUxMRVRfSUQiLCJQRU5ESU5HX1NFTEVDVEVEX1dBTExFVF9JRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/constants.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/helpers/getActiveAccount.ts":
/*!***************************************************************!*\
  !*** ../../packages/core/src/lib/helpers/getActiveAccount.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getActiveAccount\": () => (/* binding */ getActiveAccount)\n/* harmony export */ });\nconst getActiveAccount = state => {\n  return state.accounts.find(account => account.active) || null;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL2hlbHBlcnMvZ2V0QWN0aXZlQWNjb3VudC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBRU8sTUFBTUEsZ0JBQWdCLEdBQzNCQyxLQUQ4QixJQUVOO0VBQ3hCLE9BQU9BLEtBQUssQ0FBQ0MsUUFBTixDQUFlQyxJQUFmLENBQXFCQyxPQUFELElBQWFBLE9BQU8sQ0FBQ0MsTUFBekMsS0FBb0QsSUFBM0Q7QUFDRCxDQUpNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi9oZWxwZXJzL2dldEFjdGl2ZUFjY291bnQudHM/MmQyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEFjY291bnRTdGF0ZSwgV2FsbGV0U2VsZWN0b3JTdGF0ZSB9IGZyb20gXCIuLi9zdG9yZS50eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgZ2V0QWN0aXZlQWNjb3VudCA9IChcbiAgc3RhdGU6IFdhbGxldFNlbGVjdG9yU3RhdGVcbik6IEFjY291bnRTdGF0ZSB8IG51bGwgPT4ge1xuICByZXR1cm4gc3RhdGUuYWNjb3VudHMuZmluZCgoYWNjb3VudCkgPT4gYWNjb3VudC5hY3RpdmUpIHx8IG51bGw7XG59O1xuIl0sIm5hbWVzIjpbImdldEFjdGl2ZUFjY291bnQiLCJzdGF0ZSIsImFjY291bnRzIiwiZmluZCIsImFjY291bnQiLCJhY3RpdmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/helpers/getActiveAccount.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/helpers/index.ts":
/*!****************************************************!*\
  !*** ../../packages/core/src/lib/helpers/index.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _waitFor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./waitFor */ \"../../packages/core/src/lib/helpers/waitFor.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _waitFor__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _waitFor__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _getActiveAccount__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getActiveAccount */ \"../../packages/core/src/lib/helpers/getActiveAccount.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _getActiveAccount__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _getActiveAccount__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL2hlbHBlcnMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL2hlbHBlcnMvaW5kZXgudHM/ZDQ4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi93YWl0Rm9yXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nZXRBY3RpdmVBY2NvdW50XCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/helpers/index.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/helpers/waitFor.ts":
/*!******************************************************!*\
  !*** ../../packages/core/src/lib/helpers/waitFor.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"waitFor\": () => (/* binding */ waitFor)\n/* harmony export */ });\nconst wait = ms => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n\nconst poll = async (cb, interval, remaining) => {\n  const result = cb();\n\n  if (result) {\n    return result;\n  }\n\n  if (!remaining) {\n    throw new Error(\"Exceeded timeout\");\n  }\n\n  return wait(interval).then(() => poll(cb, interval, remaining - 1));\n};\n\nconst waitFor = async (cb, opts = {}) => {\n  const {\n    timeout = 200,\n    interval = 50\n  } = opts;\n  return Promise.race([wait(timeout).then(() => {\n    throw new Error(\"Exceeded timeout\");\n  }), poll(cb, interval, Math.floor(timeout / interval))]);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL2hlbHBlcnMvd2FpdEZvci50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsSUFBSSxHQUFJQyxFQUFELElBQWdCO0VBQzNCLE9BQU8sSUFBSUMsT0FBSixDQUFhQyxPQUFELElBQWFDLFVBQVUsQ0FBQ0QsT0FBRCxFQUFVRixFQUFWLENBQW5DLENBQVA7QUFDRCxDQUZEOztBQUlBLE1BQU1JLElBQUksR0FBRyxPQUNYQyxFQURXLEVBRVhDLFFBRlcsRUFHWEMsU0FIVyxLQUlVO0VBQ3JCLE1BQU1DLE1BQU0sR0FBR0gsRUFBRSxFQUFqQjs7RUFFQSxJQUFJRyxNQUFKLEVBQVk7SUFDVixPQUFPQSxNQUFQO0VBQ0Q7O0VBRUQsSUFBSSxDQUFDRCxTQUFMLEVBQWdCO0lBQ2QsTUFBTSxJQUFJRSxLQUFKLENBQVUsa0JBQVYsQ0FBTjtFQUNEOztFQUVELE9BQU9WLElBQUksQ0FBQ08sUUFBRCxDQUFKLENBQWVJLElBQWYsQ0FBb0IsTUFBTU4sSUFBSSxDQUFDQyxFQUFELEVBQUtDLFFBQUwsRUFBZUMsU0FBUyxHQUFHLENBQTNCLENBQTlCLENBQVA7QUFDRCxDQWhCRDs7QUFrQk8sTUFBTUksT0FBTyxHQUFHLE9BQ3JCTixFQURxQixFQUVyQk8sSUFBNkMsR0FBRyxFQUYzQixLQUdsQjtFQUNILE1BQU07SUFBRUMsT0FBTyxHQUFHLEdBQVo7SUFBaUJQLFFBQVEsR0FBRztFQUE1QixJQUFtQ00sSUFBekM7RUFFQSxPQUFPWCxPQUFPLENBQUNhLElBQVIsQ0FBYSxDQUNsQmYsSUFBSSxDQUFDYyxPQUFELENBQUosQ0FBY0gsSUFBZCxDQUFtQixNQUFNO0lBQ3ZCLE1BQU0sSUFBSUQsS0FBSixDQUFVLGtCQUFWLENBQU47RUFDRCxDQUZELENBRGtCLEVBSWxCTCxJQUFJLENBQUNDLEVBQUQsRUFBS0MsUUFBTCxFQUFlUyxJQUFJLENBQUNDLEtBQUwsQ0FBV0gsT0FBTyxHQUFHUCxRQUFyQixDQUFmLENBSmMsQ0FBYixDQUFQO0FBTUQsQ0FaTSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvaGVscGVycy93YWl0Rm9yLnRzP2I0MzkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgd2FpdCA9IChtczogbnVtYmVyKSA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCBtcykpO1xufTtcblxuY29uc3QgcG9sbCA9IGFzeW5jIChcbiAgY2I6ICgpID0+IGJvb2xlYW4sXG4gIGludGVydmFsOiBudW1iZXIsXG4gIHJlbWFpbmluZzogbnVtYmVyXG4pOiBQcm9taXNlPGJvb2xlYW4+ID0+IHtcbiAgY29uc3QgcmVzdWx0ID0gY2IoKTtcblxuICBpZiAocmVzdWx0KSB7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIGlmICghcmVtYWluaW5nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRXhjZWVkZWQgdGltZW91dFwiKTtcbiAgfVxuXG4gIHJldHVybiB3YWl0KGludGVydmFsKS50aGVuKCgpID0+IHBvbGwoY2IsIGludGVydmFsLCByZW1haW5pbmcgLSAxKSk7XG59O1xuXG5leHBvcnQgY29uc3Qgd2FpdEZvciA9IGFzeW5jIChcbiAgY2I6ICgpID0+IGJvb2xlYW4sXG4gIG9wdHM6IHsgdGltZW91dD86IG51bWJlcjsgaW50ZXJ2YWw/OiBudW1iZXIgfSA9IHt9XG4pID0+IHtcbiAgY29uc3QgeyB0aW1lb3V0ID0gMjAwLCBpbnRlcnZhbCA9IDUwIH0gPSBvcHRzO1xuXG4gIHJldHVybiBQcm9taXNlLnJhY2UoW1xuICAgIHdhaXQodGltZW91dCkudGhlbigoKSA9PiB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFeGNlZWRlZCB0aW1lb3V0XCIpO1xuICAgIH0pLFxuICAgIHBvbGwoY2IsIGludGVydmFsLCBNYXRoLmZsb29yKHRpbWVvdXQgLyBpbnRlcnZhbCkpLFxuICBdKTtcbn07XG4iXSwibmFtZXMiOlsid2FpdCIsIm1zIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0IiwicG9sbCIsImNiIiwiaW50ZXJ2YWwiLCJyZW1haW5pbmciLCJyZXN1bHQiLCJFcnJvciIsInRoZW4iLCJ3YWl0Rm9yIiwib3B0cyIsInRpbWVvdXQiLCJyYWNlIiwiTWF0aCIsImZsb29yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/helpers/waitFor.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/options.ts":
/*!**********************************************!*\
  !*** ../../packages/core/src/lib/options.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNetworkPreset\": () => (/* binding */ getNetworkPreset),\n/* harmony export */   \"resolveNetwork\": () => (/* binding */ resolveNetwork),\n/* harmony export */   \"resolveOptions\": () => (/* binding */ resolveOptions)\n/* harmony export */ });\n/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services */ \"../../packages/core/src/lib/services/index.ts\");\n\nconst getNetworkPreset = networkId => {\n  switch (networkId) {\n    case \"mainnet\":\n      return {\n        networkId,\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        helperUrl: \"https://helper.mainnet.near.org\",\n        explorerUrl: \"https://explorer.near.org\",\n        indexerUrl: \"https://api.kitwallet.app\"\n      };\n\n    case \"testnet\":\n      return {\n        networkId,\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n        explorerUrl: \"https://explorer.testnet.near.org\",\n        indexerUrl: \"https://testnet-api.kitwallet.app\"\n      };\n\n    default:\n      throw Error(`Failed to find config for: '${networkId}'`);\n  }\n};\nconst resolveNetwork = network => {\n  return typeof network === \"string\" ? getNetworkPreset(network) : network;\n};\nconst resolveOptions = params => {\n  const options = {\n    network: resolveNetwork(params.network),\n    debug: params.debug || false\n  };\n  return {\n    options,\n    storage: params.storage || new _services__WEBPACK_IMPORTED_MODULE_0__.WebStorageService()\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL29wdGlvbnMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBO0FBRU8sTUFBTUMsZ0JBQWdCLEdBQUlDLFNBQUQsSUFBbUM7RUFDakUsUUFBUUEsU0FBUjtJQUNFLEtBQUssU0FBTDtNQUNFLE9BQU87UUFDTEEsU0FESztRQUVMQyxPQUFPLEVBQUUsOEJBRko7UUFHTEMsU0FBUyxFQUFFLGlDQUhOO1FBSUxDLFdBQVcsRUFBRSwyQkFKUjtRQUtMQyxVQUFVLEVBQUU7TUFMUCxDQUFQOztJQU9GLEtBQUssU0FBTDtNQUNFLE9BQU87UUFDTEosU0FESztRQUVMQyxPQUFPLEVBQUUsOEJBRko7UUFHTEMsU0FBUyxFQUFFLGlDQUhOO1FBSUxDLFdBQVcsRUFBRSxtQ0FKUjtRQUtMQyxVQUFVLEVBQUU7TUFMUCxDQUFQOztJQU9GO01BQ0UsTUFBTUMsS0FBSyxDQUFFLCtCQUE4QkwsU0FBVSxHQUExQyxDQUFYO0VBbEJKO0FBb0JELENBckJNO0FBdUJBLE1BQU1NLGNBQWMsR0FBSUMsT0FBRCxJQUEyQztFQUN2RSxPQUFPLE9BQU9BLE9BQVAsS0FBbUIsUUFBbkIsR0FBOEJSLGdCQUFnQixDQUFDUSxPQUFELENBQTlDLEdBQTBEQSxPQUFqRTtBQUNELENBRk07QUFJQSxNQUFNQyxjQUFjLEdBQUlDLE1BQUQsSUFBa0M7RUFDOUQsTUFBTUMsT0FBZ0IsR0FBRztJQUN2QkgsT0FBTyxFQUFFRCxjQUFjLENBQUNHLE1BQU0sQ0FBQ0YsT0FBUixDQURBO0lBRXZCSSxLQUFLLEVBQUVGLE1BQU0sQ0FBQ0UsS0FBUCxJQUFnQjtFQUZBLENBQXpCO0VBS0EsT0FBTztJQUNMRCxPQURLO0lBRUxFLE9BQU8sRUFBRUgsTUFBTSxDQUFDRyxPQUFQLElBQWtCLElBQUlkLHdEQUFKO0VBRnRCLENBQVA7QUFJRCxDQVZNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi9vcHRpb25zLnRzPzk4YzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBXYWxsZXRTZWxlY3RvclBhcmFtcyB9IGZyb20gXCIuL3dhbGxldC1zZWxlY3Rvci50eXBlc1wiO1xuaW1wb3J0IHR5cGUgeyBPcHRpb25zLCBOZXR3b3JrLCBOZXR3b3JrSWQgfSBmcm9tIFwiLi9vcHRpb25zLnR5cGVzXCI7XG5pbXBvcnQgeyBXZWJTdG9yYWdlU2VydmljZSB9IGZyb20gXCIuL3NlcnZpY2VzXCI7XG5cbmV4cG9ydCBjb25zdCBnZXROZXR3b3JrUHJlc2V0ID0gKG5ldHdvcmtJZDogTmV0d29ya0lkKTogTmV0d29yayA9PiB7XG4gIHN3aXRjaCAobmV0d29ya0lkKSB7XG4gICAgY2FzZSBcIm1haW5uZXRcIjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5ldHdvcmtJZCxcbiAgICAgICAgbm9kZVVybDogXCJodHRwczovL3JwYy5tYWlubmV0Lm5lYXIub3JnXCIsXG4gICAgICAgIGhlbHBlclVybDogXCJodHRwczovL2hlbHBlci5tYWlubmV0Lm5lYXIub3JnXCIsXG4gICAgICAgIGV4cGxvcmVyVXJsOiBcImh0dHBzOi8vZXhwbG9yZXIubmVhci5vcmdcIixcbiAgICAgICAgaW5kZXhlclVybDogXCJodHRwczovL2FwaS5raXR3YWxsZXQuYXBwXCIsXG4gICAgICB9O1xuICAgIGNhc2UgXCJ0ZXN0bmV0XCI6XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuZXR3b3JrSWQsXG4gICAgICAgIG5vZGVVcmw6IFwiaHR0cHM6Ly9ycGMudGVzdG5ldC5uZWFyLm9yZ1wiLFxuICAgICAgICBoZWxwZXJVcmw6IFwiaHR0cHM6Ly9oZWxwZXIudGVzdG5ldC5uZWFyLm9yZ1wiLFxuICAgICAgICBleHBsb3JlclVybDogXCJodHRwczovL2V4cGxvcmVyLnRlc3RuZXQubmVhci5vcmdcIixcbiAgICAgICAgaW5kZXhlclVybDogXCJodHRwczovL3Rlc3RuZXQtYXBpLmtpdHdhbGxldC5hcHBcIixcbiAgICAgIH07XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IEVycm9yKGBGYWlsZWQgdG8gZmluZCBjb25maWcgZm9yOiAnJHtuZXR3b3JrSWR9J2ApO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgcmVzb2x2ZU5ldHdvcmsgPSAobmV0d29yazogTmV0d29ya0lkIHwgTmV0d29yayk6IE5ldHdvcmsgPT4ge1xuICByZXR1cm4gdHlwZW9mIG5ldHdvcmsgPT09IFwic3RyaW5nXCIgPyBnZXROZXR3b3JrUHJlc2V0KG5ldHdvcmspIDogbmV0d29yaztcbn07XG5cbmV4cG9ydCBjb25zdCByZXNvbHZlT3B0aW9ucyA9IChwYXJhbXM6IFdhbGxldFNlbGVjdG9yUGFyYW1zKSA9PiB7XG4gIGNvbnN0IG9wdGlvbnM6IE9wdGlvbnMgPSB7XG4gICAgbmV0d29yazogcmVzb2x2ZU5ldHdvcmsocGFyYW1zLm5ldHdvcmspLFxuICAgIGRlYnVnOiBwYXJhbXMuZGVidWcgfHwgZmFsc2UsXG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBvcHRpb25zLFxuICAgIHN0b3JhZ2U6IHBhcmFtcy5zdG9yYWdlIHx8IG5ldyBXZWJTdG9yYWdlU2VydmljZSgpLFxuICB9O1xufTtcbiJdLCJuYW1lcyI6WyJXZWJTdG9yYWdlU2VydmljZSIsImdldE5ldHdvcmtQcmVzZXQiLCJuZXR3b3JrSWQiLCJub2RlVXJsIiwiaGVscGVyVXJsIiwiZXhwbG9yZXJVcmwiLCJpbmRleGVyVXJsIiwiRXJyb3IiLCJyZXNvbHZlTmV0d29yayIsIm5ldHdvcmsiLCJyZXNvbHZlT3B0aW9ucyIsInBhcmFtcyIsIm9wdGlvbnMiLCJkZWJ1ZyIsInN0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/options.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/services/event-emitter/event-emitter.service.ts":
/*!***********************************************************************************!*\
  !*** ../../packages/core/src/lib/services/event-emitter/event-emitter.service.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EventEmitter\": () => (/* binding */ EventEmitter)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass EventEmitter {\n  constructor() {\n    _defineProperty(this, \"emitter\", new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter());\n  }\n\n  on(eventName, callback) {\n    this.emitter.on(eventName, callback);\n    return {\n      remove: () => this.emitter.off(eventName, callback)\n    };\n  }\n\n  off(eventName, callback) {\n    this.emitter.off(eventName, callback);\n  }\n\n  emit(eventName, event) {\n    this.emitter.emit(eventName, event);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL2V2ZW50LWVtaXR0ZXIvZXZlbnQtZW1pdHRlci5zZXJ2aWNlLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFHTyxNQUFNQSxZQUFOLENBRVA7RUFBQTtJQUFBLGlDQUNvQixJQUFJQyxnREFBSixFQURwQjtFQUFBOztFQUdFQyxFQUFFLENBQ0FDLFNBREEsRUFFQUMsUUFGQSxFQUdjO0lBQ2QsS0FBS0MsT0FBTCxDQUFhSCxFQUFiLENBQWdCQyxTQUFoQixFQUFxQ0MsUUFBckM7SUFFQSxPQUFPO01BQ0xFLE1BQU0sRUFBRSxNQUFNLEtBQUtELE9BQUwsQ0FBYUUsR0FBYixDQUFpQkosU0FBakIsRUFBc0NDLFFBQXRDO0lBRFQsQ0FBUDtFQUdEOztFQUVERyxHQUFHLENBQ0RKLFNBREMsRUFFREMsUUFGQyxFQUdEO0lBQ0EsS0FBS0MsT0FBTCxDQUFhRSxHQUFiLENBQWlCSixTQUFqQixFQUFzQ0MsUUFBdEM7RUFDRDs7RUFFREksSUFBSSxDQUE2QkwsU0FBN0IsRUFBK0NNLEtBQS9DLEVBQXFFO0lBQ3ZFLEtBQUtKLE9BQUwsQ0FBYUcsSUFBYixDQUFrQkwsU0FBbEIsRUFBdUNNLEtBQXZDO0VBQ0Q7O0FBdkJIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi9zZXJ2aWNlcy9ldmVudC1lbWl0dGVyL2V2ZW50LWVtaXR0ZXIuc2VydmljZS50cz9iODNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciBhcyBORXZlbnRFbWl0dGVyIH0gZnJvbSBcImV2ZW50c1wiO1xuaW1wb3J0IHR5cGUgeyBFdmVudEVtaXR0ZXJTZXJ2aWNlLCBTdWJzY3JpcHRpb24gfSBmcm9tIFwiLi9ldmVudC1lbWl0dGVyLnR5cGVzXCI7XG5cbmV4cG9ydCBjbGFzcyBFdmVudEVtaXR0ZXI8RXZlbnRzIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4+XG4gIGltcGxlbWVudHMgRXZlbnRFbWl0dGVyU2VydmljZTxFdmVudHM+XG57XG4gIHByaXZhdGUgZW1pdHRlciA9IG5ldyBORXZlbnRFbWl0dGVyKCk7XG5cbiAgb248RXZlbnQgZXh0ZW5kcyBrZXlvZiBFdmVudHM+KFxuICAgIGV2ZW50TmFtZTogRXZlbnQsXG4gICAgY2FsbGJhY2s6IChldmVudDogRXZlbnRzW0V2ZW50XSkgPT4gdm9pZFxuICApOiBTdWJzY3JpcHRpb24ge1xuICAgIHRoaXMuZW1pdHRlci5vbihldmVudE5hbWUgYXMgc3RyaW5nLCBjYWxsYmFjayk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgcmVtb3ZlOiAoKSA9PiB0aGlzLmVtaXR0ZXIub2ZmKGV2ZW50TmFtZSBhcyBzdHJpbmcsIGNhbGxiYWNrKSxcbiAgICB9O1xuICB9XG5cbiAgb2ZmPEV2ZW50IGV4dGVuZHMga2V5b2YgRXZlbnRzPihcbiAgICBldmVudE5hbWU6IEV2ZW50LFxuICAgIGNhbGxiYWNrOiAoZXZlbnQ6IEV2ZW50c1tFdmVudF0pID0+IHZvaWRcbiAgKSB7XG4gICAgdGhpcy5lbWl0dGVyLm9mZihldmVudE5hbWUgYXMgc3RyaW5nLCBjYWxsYmFjayk7XG4gIH1cblxuICBlbWl0PEV2ZW50IGV4dGVuZHMga2V5b2YgRXZlbnRzPihldmVudE5hbWU6IEV2ZW50LCBldmVudDogRXZlbnRzW0V2ZW50XSkge1xuICAgIHRoaXMuZW1pdHRlci5lbWl0KGV2ZW50TmFtZSBhcyBzdHJpbmcsIGV2ZW50KTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkV2ZW50RW1pdHRlciIsIk5FdmVudEVtaXR0ZXIiLCJvbiIsImV2ZW50TmFtZSIsImNhbGxiYWNrIiwiZW1pdHRlciIsInJlbW92ZSIsIm9mZiIsImVtaXQiLCJldmVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/services/event-emitter/event-emitter.service.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/services/event-emitter/event-emitter.types.ts":
/*!*********************************************************************************!*\
  !*** ../../packages/core/src/lib/services/event-emitter/event-emitter.types.ts ***!
  \*********************************************************************************/
/***/ (() => {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL2V2ZW50LWVtaXR0ZXIvZXZlbnQtZW1pdHRlci50eXBlcy50cy5qcyIsIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvc2VydmljZXMvZXZlbnQtZW1pdHRlci9ldmVudC1lbWl0dGVyLnR5cGVzLnRzP2IyODkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBTdWJzY3JpcHRpb24ge1xuICByZW1vdmU6ICgpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXZlbnRFbWl0dGVyU2VydmljZTxFdmVudHMgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPj4ge1xuICBvbjxFdmVudE5hbWUgZXh0ZW5kcyBrZXlvZiBFdmVudHM+KFxuICAgIGV2ZW50TmFtZTogRXZlbnROYW1lLFxuICAgIGNhbGxiYWNrOiAoZXZlbnQ6IEV2ZW50c1tFdmVudE5hbWVdKSA9PiB2b2lkXG4gICk6IFN1YnNjcmlwdGlvbjtcblxuICBvZmY8RXZlbnROYW1lIGV4dGVuZHMga2V5b2YgRXZlbnRzPihcbiAgICBldmVudE5hbWU6IEV2ZW50TmFtZSxcbiAgICBjYWxsYmFjazogKGV2ZW50OiBFdmVudHNbRXZlbnROYW1lXSkgPT4gdm9pZFxuICApOiB2b2lkO1xuXG4gIGVtaXQ8RXZlbnROYW1lIGV4dGVuZHMga2V5b2YgRXZlbnRzPihcbiAgICBldmVudE5hbWU6IEV2ZW50TmFtZSxcbiAgICBldmVudDogRXZlbnRzW0V2ZW50TmFtZV1cbiAgKTogdm9pZDtcbn1cbiJdLCJtYXBwaW5ncyI6IiJ9\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/services/event-emitter/event-emitter.types.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/services/index.ts":
/*!*****************************************************!*\
  !*** ../../packages/core/src/lib/services/index.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _provider_provider_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider/provider.service */ \"../../packages/core/src/lib/services/provider/provider.service.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _provider_provider_service__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _provider_provider_service__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _provider_provider_service_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider/provider.service.types */ \"../../packages/core/src/lib/services/provider/provider.service.types.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _provider_provider_service_types__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _provider_provider_service_types__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _storage_storage_service_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./storage/storage.service.types */ \"../../packages/core/src/lib/services/storage/storage.service.types.ts\");\n/* harmony import */ var _storage_storage_service_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_storage_storage_service_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _storage_storage_service_types__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _storage_storage_service_types__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _storage_json_storage_service_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./storage/json-storage.service.types */ \"../../packages/core/src/lib/services/storage/json-storage.service.types.ts\");\n/* harmony import */ var _storage_json_storage_service_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_storage_json_storage_service_types__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _storage_json_storage_service_types__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _storage_json_storage_service_types__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _storage_json_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./storage/json-storage.service */ \"../../packages/core/src/lib/services/storage/json-storage.service.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _storage_json_storage_service__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _storage_json_storage_service__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _storage_web_storage_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./storage/web-storage.service */ \"../../packages/core/src/lib/services/storage/web-storage.service.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _storage_web_storage_service__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _storage_web_storage_service__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _logger_logger_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./logger/logger.service */ \"../../packages/core/src/lib/services/logger/logger.service.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _logger_logger_service__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _logger_logger_service__WEBPACK_IMPORTED_MODULE_6__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _logger_logger_service_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./logger/logger.service.types */ \"../../packages/core/src/lib/services/logger/logger.service.types.ts\");\n/* harmony import */ var _logger_logger_service_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_logger_logger_service_types__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _logger_logger_service_types__WEBPACK_IMPORTED_MODULE_7__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _logger_logger_service_types__WEBPACK_IMPORTED_MODULE_7__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _wallet_modules_wallet_modules_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./wallet-modules/wallet-modules.service */ \"../../packages/core/src/lib/services/wallet-modules/wallet-modules.service.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _wallet_modules_wallet_modules_service__WEBPACK_IMPORTED_MODULE_8__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _wallet_modules_wallet_modules_service__WEBPACK_IMPORTED_MODULE_8__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _event_emitter_event_emitter_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./event-emitter/event-emitter.service */ \"../../packages/core/src/lib/services/event-emitter/event-emitter.service.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _event_emitter_event_emitter_service__WEBPACK_IMPORTED_MODULE_9__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _event_emitter_event_emitter_service__WEBPACK_IMPORTED_MODULE_9__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _event_emitter_event_emitter_types__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./event-emitter/event-emitter.types */ \"../../packages/core/src/lib/services/event-emitter/event-emitter.types.ts\");\n/* harmony import */ var _event_emitter_event_emitter_types__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_event_emitter_event_emitter_types__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _event_emitter_event_emitter_types__WEBPACK_IMPORTED_MODULE_10__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _event_emitter_event_emitter_types__WEBPACK_IMPORTED_MODULE_10__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvc2VydmljZXMvaW5kZXgudHM/MmNlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9wcm92aWRlci9wcm92aWRlci5zZXJ2aWNlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wcm92aWRlci9wcm92aWRlci5zZXJ2aWNlLnR5cGVzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zdG9yYWdlL3N0b3JhZ2Uuc2VydmljZS50eXBlc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc3RvcmFnZS9qc29uLXN0b3JhZ2Uuc2VydmljZS50eXBlc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc3RvcmFnZS9qc29uLXN0b3JhZ2Uuc2VydmljZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vc3RvcmFnZS93ZWItc3RvcmFnZS5zZXJ2aWNlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9sb2dnZXIvbG9nZ2VyLnNlcnZpY2VcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2xvZ2dlci9sb2dnZXIuc2VydmljZS50eXBlc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vd2FsbGV0LW1vZHVsZXMvd2FsbGV0LW1vZHVsZXMuc2VydmljZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vZXZlbnQtZW1pdHRlci9ldmVudC1lbWl0dGVyLnNlcnZpY2VcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2V2ZW50LWVtaXR0ZXIvZXZlbnQtZW1pdHRlci50eXBlc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/services/index.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/services/logger/logger.service.ts":
/*!*********************************************************************!*\
  !*** ../../packages/core/src/lib/services/logger/logger.service.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Logger\": () => (/* binding */ Logger),\n/* harmony export */   \"logger\": () => (/* binding */ logger)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass Logger {\n  constructor(namespace) {\n    _defineProperty(this, \"namespace\", void 0);\n\n    this.namespace = namespace;\n  }\n\n  emit(method, ...params) {\n    if (!Logger.debug) {\n      return;\n    }\n\n    if (this.namespace && method !== \"error\") {\n      // eslint-disable-next-line no-console\n      console[method](this.namespace, ...params);\n      return;\n    } // eslint-disable-next-line no-console\n\n\n    console[method](...params);\n  }\n\n  log(...params) {\n    this.emit(\"log\", ...params);\n  }\n\n  info(...params) {\n    this.emit(\"info\", ...params);\n  }\n\n  warn(...params) {\n    this.emit(\"warn\", ...params);\n  }\n\n  error(...params) {\n    this.emit(\"error\", ...params);\n  }\n\n}\n\n_defineProperty(Logger, \"debug\", false);\n\nconst logger = new Logger();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL2xvZ2dlci9sb2dnZXIuc2VydmljZS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSU8sTUFBTUEsTUFBTixDQUFzQztFQUszQ0MsV0FBVyxDQUFDQyxTQUFELEVBQXFCO0lBQUE7O0lBQzlCLEtBQUtBLFNBQUwsR0FBaUJBLFNBQWpCO0VBQ0Q7O0VBRU9DLElBQUksQ0FBQ0MsTUFBRCxFQUEwQixHQUFHQyxNQUE3QixFQUFxRDtJQUMvRCxJQUFJLENBQUNMLE1BQU0sQ0FBQ00sS0FBWixFQUFtQjtNQUNqQjtJQUNEOztJQUVELElBQUksS0FBS0osU0FBTCxJQUFrQkUsTUFBTSxLQUFLLE9BQWpDLEVBQTBDO01BQ3hDO01BQ0FHLE9BQU8sQ0FBQ0gsTUFBRCxDQUFQLENBQWdCLEtBQUtGLFNBQXJCLEVBQWdDLEdBQUdHLE1BQW5DO01BRUE7SUFDRCxDQVY4RCxDQVkvRDs7O0lBQ0FFLE9BQU8sQ0FBQ0gsTUFBRCxDQUFQLENBQWdCLEdBQUdDLE1BQW5CO0VBQ0Q7O0VBRURHLEdBQUcsQ0FBQyxHQUFHSCxNQUFKLEVBQTRCO0lBQzdCLEtBQUtGLElBQUwsQ0FBVSxLQUFWLEVBQWlCLEdBQUdFLE1BQXBCO0VBQ0Q7O0VBRURJLElBQUksQ0FBQyxHQUFHSixNQUFKLEVBQTRCO0lBQzlCLEtBQUtGLElBQUwsQ0FBVSxNQUFWLEVBQWtCLEdBQUdFLE1BQXJCO0VBQ0Q7O0VBRURLLElBQUksQ0FBQyxHQUFHTCxNQUFKLEVBQTRCO0lBQzlCLEtBQUtGLElBQUwsQ0FBVSxNQUFWLEVBQWtCLEdBQUdFLE1BQXJCO0VBQ0Q7O0VBRURNLEtBQUssQ0FBQyxHQUFHTixNQUFKLEVBQTRCO0lBQy9CLEtBQUtGLElBQUwsQ0FBVSxPQUFWLEVBQW1CLEdBQUdFLE1BQXRCO0VBQ0Q7O0FBdkMwQzs7Z0JBQWhDTCxpQkFDSTs7QUF5Q1YsTUFBTVksTUFBTSxHQUFHLElBQUlaLE1BQUosRUFBZiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvc2VydmljZXMvbG9nZ2VyL2xvZ2dlci5zZXJ2aWNlLnRzP2U2MDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBMb2dnZXJTZXJ2aWNlIH0gZnJvbSBcIi4vbG9nZ2VyLnNlcnZpY2UudHlwZXNcIjtcblxudHlwZSBTdXBwb3J0ZWRNZXRob2QgPSBcImxvZ1wiIHwgXCJpbmZvXCIgfCBcIndhcm5cIiB8IFwiZXJyb3JcIjtcblxuZXhwb3J0IGNsYXNzIExvZ2dlciBpbXBsZW1lbnRzIExvZ2dlclNlcnZpY2Uge1xuICBzdGF0aWMgZGVidWcgPSBmYWxzZTtcblxuICBuYW1lc3BhY2U/OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IobmFtZXNwYWNlPzogc3RyaW5nKSB7XG4gICAgdGhpcy5uYW1lc3BhY2UgPSBuYW1lc3BhY2U7XG4gIH1cblxuICBwcml2YXRlIGVtaXQobWV0aG9kOiBTdXBwb3J0ZWRNZXRob2QsIC4uLnBhcmFtczogQXJyYXk8dW5rbm93bj4pIHtcbiAgICBpZiAoIUxvZ2dlci5kZWJ1Zykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLm5hbWVzcGFjZSAmJiBtZXRob2QgIT09IFwiZXJyb3JcIikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGVbbWV0aG9kXSh0aGlzLm5hbWVzcGFjZSwgLi4ucGFyYW1zKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgY29uc29sZVttZXRob2RdKC4uLnBhcmFtcyk7XG4gIH1cblxuICBsb2coLi4ucGFyYW1zOiBBcnJheTx1bmtub3duPikge1xuICAgIHRoaXMuZW1pdChcImxvZ1wiLCAuLi5wYXJhbXMpO1xuICB9XG5cbiAgaW5mbyguLi5wYXJhbXM6IEFycmF5PHVua25vd24+KSB7XG4gICAgdGhpcy5lbWl0KFwiaW5mb1wiLCAuLi5wYXJhbXMpO1xuICB9XG5cbiAgd2FybiguLi5wYXJhbXM6IEFycmF5PHVua25vd24+KSB7XG4gICAgdGhpcy5lbWl0KFwid2FyblwiLCAuLi5wYXJhbXMpO1xuICB9XG5cbiAgZXJyb3IoLi4ucGFyYW1zOiBBcnJheTx1bmtub3duPikge1xuICAgIHRoaXMuZW1pdChcImVycm9yXCIsIC4uLnBhcmFtcyk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGxvZ2dlciA9IG5ldyBMb2dnZXIoKTtcbiJdLCJuYW1lcyI6WyJMb2dnZXIiLCJjb25zdHJ1Y3RvciIsIm5hbWVzcGFjZSIsImVtaXQiLCJtZXRob2QiLCJwYXJhbXMiLCJkZWJ1ZyIsImNvbnNvbGUiLCJsb2ciLCJpbmZvIiwid2FybiIsImVycm9yIiwibG9nZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/services/logger/logger.service.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/services/logger/logger.service.types.ts":
/*!***************************************************************************!*\
  !*** ../../packages/core/src/lib/services/logger/logger.service.types.ts ***!
  \***************************************************************************/
/***/ (() => {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL2xvZ2dlci9sb2dnZXIuc2VydmljZS50eXBlcy50cy5qcyIsIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvc2VydmljZXMvbG9nZ2VyL2xvZ2dlci5zZXJ2aWNlLnR5cGVzLnRzPzdmYjgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBMb2dnZXJTZXJ2aWNlIHtcbiAgbG9nKC4uLnBhcmFtczogQXJyYXk8dW5rbm93bj4pOiB2b2lkO1xuICBpbmZvKC4uLnBhcmFtczogQXJyYXk8dW5rbm93bj4pOiB2b2lkO1xuICB3YXJuKC4uLnBhcmFtczogQXJyYXk8dW5rbm93bj4pOiB2b2lkO1xuICBlcnJvciguLi5wYXJhbXM6IEFycmF5PHVua25vd24+KTogdm9pZDtcbn1cbiJdLCJtYXBwaW5ncyI6IiJ9\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/services/logger/logger.service.types.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/services/provider/provider.service.ts":
/*!*************************************************************************!*\
  !*** ../../packages/core/src/lib/services/provider/provider.service.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Provider\": () => (/* binding */ Provider)\n/* harmony export */ });\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! near-api-js */ \"near-api-js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_0__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass Provider {\n  constructor(url) {\n    _defineProperty(this, \"provider\", void 0);\n\n    this.provider = new near_api_js__WEBPACK_IMPORTED_MODULE_0__.providers.JsonRpcProvider({\n      url\n    });\n  }\n\n  query(params) {\n    return this.provider.query(params);\n  }\n\n  viewAccessKey({\n    accountId,\n    publicKey\n  }) {\n    return this.query({\n      request_type: \"view_access_key\",\n      finality: \"final\",\n      account_id: accountId,\n      public_key: publicKey\n    });\n  }\n\n  block(reference) {\n    return this.provider.block(reference);\n  }\n\n  sendTransaction(signedTransaction) {\n    return this.provider.sendTransaction(signedTransaction);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL3Byb3ZpZGVyL3Byb3ZpZGVyLnNlcnZpY2UudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQWFPLE1BQU1DLFFBQU4sQ0FBMEM7RUFHL0NDLFdBQVcsQ0FBQ0MsR0FBRCxFQUFjO0lBQUE7O0lBQ3ZCLEtBQUtDLFFBQUwsR0FBZ0IsSUFBSUosa0VBQUosQ0FBOEI7TUFBRUc7SUFBRixDQUE5QixDQUFoQjtFQUNEOztFQUVERyxLQUFLLENBQXFDQyxNQUFyQyxFQUEwRDtJQUM3RCxPQUFPLEtBQUtILFFBQUwsQ0FBY0UsS0FBZCxDQUE4QkMsTUFBOUIsQ0FBUDtFQUNEOztFQUVEQyxhQUFhLENBQUM7SUFBRUMsU0FBRjtJQUFhQztFQUFiLENBQUQsRUFBZ0Q7SUFDM0QsT0FBTyxLQUFLSixLQUFMLENBQTBCO01BQy9CSyxZQUFZLEVBQUUsaUJBRGlCO01BRS9CQyxRQUFRLEVBQUUsT0FGcUI7TUFHL0JDLFVBQVUsRUFBRUosU0FIbUI7TUFJL0JLLFVBQVUsRUFBRUo7SUFKbUIsQ0FBMUIsQ0FBUDtFQU1EOztFQUVESyxLQUFLLENBQUNDLFNBQUQsRUFBNEI7SUFDL0IsT0FBTyxLQUFLWixRQUFMLENBQWNXLEtBQWQsQ0FBb0JDLFNBQXBCLENBQVA7RUFDRDs7RUFFREMsZUFBZSxDQUFDQyxpQkFBRCxFQUF1QztJQUNwRCxPQUFPLEtBQUtkLFFBQUwsQ0FBY2EsZUFBZCxDQUE4QkMsaUJBQTlCLENBQVA7RUFDRDs7QUExQjhDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi9zZXJ2aWNlcy9wcm92aWRlci9wcm92aWRlci5zZXJ2aWNlLnRzP2ZmNTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJvdmlkZXJzIH0gZnJvbSBcIm5lYXItYXBpLWpzXCI7XG5pbXBvcnQgdHlwZSB7XG4gIEFjY2Vzc0tleVZpZXcsXG4gIEJsb2NrUmVmZXJlbmNlLFxuICBRdWVyeVJlc3BvbnNlS2luZCxcbn0gZnJvbSBcIm5lYXItYXBpLWpzL2xpYi9wcm92aWRlcnMvcHJvdmlkZXJcIjtcbmltcG9ydCB7IFNpZ25lZFRyYW5zYWN0aW9uIH0gZnJvbSBcIm5lYXItYXBpLWpzL2xpYi90cmFuc2FjdGlvblwiO1xuaW1wb3J0IHR5cGUge1xuICBQcm92aWRlclNlcnZpY2UsXG4gIFF1ZXJ5UGFyYW1zLFxuICBWaWV3QWNjZXNzS2V5UGFyYW1zLFxufSBmcm9tIFwiLi9wcm92aWRlci5zZXJ2aWNlLnR5cGVzXCI7XG5cbmV4cG9ydCBjbGFzcyBQcm92aWRlciBpbXBsZW1lbnRzIFByb3ZpZGVyU2VydmljZSB7XG4gIHByaXZhdGUgcHJvdmlkZXI6IHByb3ZpZGVycy5Kc29uUnBjUHJvdmlkZXI7XG5cbiAgY29uc3RydWN0b3IodXJsOiBzdHJpbmcpIHtcbiAgICB0aGlzLnByb3ZpZGVyID0gbmV3IHByb3ZpZGVycy5Kc29uUnBjUHJvdmlkZXIoeyB1cmwgfSk7XG4gIH1cblxuICBxdWVyeTxSZXNwb25zZSBleHRlbmRzIFF1ZXJ5UmVzcG9uc2VLaW5kPihwYXJhbXM6IFF1ZXJ5UGFyYW1zKSB7XG4gICAgcmV0dXJuIHRoaXMucHJvdmlkZXIucXVlcnk8UmVzcG9uc2U+KHBhcmFtcyk7XG4gIH1cblxuICB2aWV3QWNjZXNzS2V5KHsgYWNjb3VudElkLCBwdWJsaWNLZXkgfTogVmlld0FjY2Vzc0tleVBhcmFtcykge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5PEFjY2Vzc0tleVZpZXc+KHtcbiAgICAgIHJlcXVlc3RfdHlwZTogXCJ2aWV3X2FjY2Vzc19rZXlcIixcbiAgICAgIGZpbmFsaXR5OiBcImZpbmFsXCIsXG4gICAgICBhY2NvdW50X2lkOiBhY2NvdW50SWQsXG4gICAgICBwdWJsaWNfa2V5OiBwdWJsaWNLZXksXG4gICAgfSk7XG4gIH1cblxuICBibG9jayhyZWZlcmVuY2U6IEJsb2NrUmVmZXJlbmNlKSB7XG4gICAgcmV0dXJuIHRoaXMucHJvdmlkZXIuYmxvY2socmVmZXJlbmNlKTtcbiAgfVxuXG4gIHNlbmRUcmFuc2FjdGlvbihzaWduZWRUcmFuc2FjdGlvbjogU2lnbmVkVHJhbnNhY3Rpb24pIHtcbiAgICByZXR1cm4gdGhpcy5wcm92aWRlci5zZW5kVHJhbnNhY3Rpb24oc2lnbmVkVHJhbnNhY3Rpb24pO1xuICB9XG59XG4iXSwibmFtZXMiOlsicHJvdmlkZXJzIiwiUHJvdmlkZXIiLCJjb25zdHJ1Y3RvciIsInVybCIsInByb3ZpZGVyIiwiSnNvblJwY1Byb3ZpZGVyIiwicXVlcnkiLCJwYXJhbXMiLCJ2aWV3QWNjZXNzS2V5IiwiYWNjb3VudElkIiwicHVibGljS2V5IiwicmVxdWVzdF90eXBlIiwiZmluYWxpdHkiLCJhY2NvdW50X2lkIiwicHVibGljX2tleSIsImJsb2NrIiwicmVmZXJlbmNlIiwic2VuZFRyYW5zYWN0aW9uIiwic2lnbmVkVHJhbnNhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/services/provider/provider.service.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/services/provider/provider.service.types.ts":
/*!*******************************************************************************!*\
  !*** ../../packages/core/src/lib/services/provider/provider.service.types.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "../../packages/core/src/lib/services/storage/json-storage.service.ts":
/*!****************************************************************************!*\
  !*** ../../packages/core/src/lib/services/storage/json-storage.service.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"JsonStorage\": () => (/* binding */ JsonStorage)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst KEY_DELIMITER = \":\";\nclass JsonStorage {\n  constructor(storage, namespace) {\n    _defineProperty(this, \"storage\", void 0);\n\n    _defineProperty(this, \"namespace\", void 0);\n\n    this.storage = storage;\n    this.namespace = Array.isArray(namespace) ? namespace.join(KEY_DELIMITER) : namespace;\n  }\n\n  resolveKey(key) {\n    return [this.namespace, key].join(KEY_DELIMITER);\n  }\n\n  getItem(key) {\n    return this.storage.getItem(this.resolveKey(key)).then(item => {\n      return typeof item === \"string\" ? JSON.parse(item) : null;\n    });\n  }\n\n  setItem(key, value) {\n    return this.storage.setItem(this.resolveKey(key), JSON.stringify(value));\n  }\n\n  removeItem(key) {\n    return this.storage.removeItem(this.resolveKey(key));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL3N0b3JhZ2UvanNvbi1zdG9yYWdlLnNlcnZpY2UudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0EsTUFBTUEsYUFBYSxHQUFHLEdBQXRCO0FBRU8sTUFBTUMsV0FBTixDQUFnRDtFQUlyREMsV0FBVyxDQUFDQyxPQUFELEVBQTBCQyxTQUExQixFQUE2RDtJQUFBOztJQUFBOztJQUN0RSxLQUFLRCxPQUFMLEdBQWVBLE9BQWY7SUFDQSxLQUFLQyxTQUFMLEdBQWlCQyxLQUFLLENBQUNDLE9BQU4sQ0FBY0YsU0FBZCxJQUNiQSxTQUFTLENBQUNHLElBQVYsQ0FBZVAsYUFBZixDQURhLEdBRWJJLFNBRko7RUFHRDs7RUFFT0ksVUFBVSxDQUFDQyxHQUFELEVBQWM7SUFDOUIsT0FBTyxDQUFDLEtBQUtMLFNBQU4sRUFBaUJLLEdBQWpCLEVBQXNCRixJQUF0QixDQUEyQlAsYUFBM0IsQ0FBUDtFQUNEOztFQUVEVSxPQUFPLENBQVFELEdBQVIsRUFBNEM7SUFDakQsT0FBTyxLQUFLTixPQUFMLENBQWFPLE9BQWIsQ0FBcUIsS0FBS0YsVUFBTCxDQUFnQkMsR0FBaEIsQ0FBckIsRUFBMkNFLElBQTNDLENBQWlEQyxJQUFELElBQVU7TUFDL0QsT0FBTyxPQUFPQSxJQUFQLEtBQWdCLFFBQWhCLEdBQTRCQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0YsSUFBWCxDQUE1QixHQUF5RCxJQUFoRTtJQUNELENBRk0sQ0FBUDtFQUdEOztFQUVERyxPQUFPLENBQVFOLEdBQVIsRUFBcUJPLEtBQXJCLEVBQWtEO0lBQ3ZELE9BQU8sS0FBS2IsT0FBTCxDQUFhWSxPQUFiLENBQXFCLEtBQUtQLFVBQUwsQ0FBZ0JDLEdBQWhCLENBQXJCLEVBQTJDSSxJQUFJLENBQUNJLFNBQUwsQ0FBZUQsS0FBZixDQUEzQyxDQUFQO0VBQ0Q7O0VBRURFLFVBQVUsQ0FBQ1QsR0FBRCxFQUE2QjtJQUNyQyxPQUFPLEtBQUtOLE9BQUwsQ0FBYWUsVUFBYixDQUF3QixLQUFLVixVQUFMLENBQWdCQyxHQUFoQixDQUF4QixDQUFQO0VBQ0Q7O0FBM0JvRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvc2VydmljZXMvc3RvcmFnZS9qc29uLXN0b3JhZ2Uuc2VydmljZS50cz80NTE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgU3RvcmFnZVNlcnZpY2UgfSBmcm9tIFwiLi9zdG9yYWdlLnNlcnZpY2UudHlwZXNcIjtcbmltcG9ydCB0eXBlIHsgSnNvblN0b3JhZ2VTZXJ2aWNlIH0gZnJvbSBcIi4vanNvbi1zdG9yYWdlLnNlcnZpY2UudHlwZXNcIjtcblxuY29uc3QgS0VZX0RFTElNSVRFUiA9IFwiOlwiO1xuXG5leHBvcnQgY2xhc3MgSnNvblN0b3JhZ2UgaW1wbGVtZW50cyBKc29uU3RvcmFnZVNlcnZpY2Uge1xuICBzdG9yYWdlOiBTdG9yYWdlU2VydmljZTtcbiAgbmFtZXNwYWNlOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3Ioc3RvcmFnZTogU3RvcmFnZVNlcnZpY2UsIG5hbWVzcGFjZTogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPikge1xuICAgIHRoaXMuc3RvcmFnZSA9IHN0b3JhZ2U7XG4gICAgdGhpcy5uYW1lc3BhY2UgPSBBcnJheS5pc0FycmF5KG5hbWVzcGFjZSlcbiAgICAgID8gbmFtZXNwYWNlLmpvaW4oS0VZX0RFTElNSVRFUilcbiAgICAgIDogbmFtZXNwYWNlO1xuICB9XG5cbiAgcHJpdmF0ZSByZXNvbHZlS2V5KGtleTogc3RyaW5nKSB7XG4gICAgcmV0dXJuIFt0aGlzLm5hbWVzcGFjZSwga2V5XS5qb2luKEtFWV9ERUxJTUlURVIpO1xuICB9XG5cbiAgZ2V0SXRlbTxWYWx1ZT4oa2V5OiBzdHJpbmcpOiBQcm9taXNlPFZhbHVlIHwgbnVsbD4ge1xuICAgIHJldHVybiB0aGlzLnN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnJlc29sdmVLZXkoa2V5KSkudGhlbigoaXRlbSkgPT4ge1xuICAgICAgcmV0dXJuIHR5cGVvZiBpdGVtID09PSBcInN0cmluZ1wiID8gKEpTT04ucGFyc2UoaXRlbSkgYXMgVmFsdWUpIDogbnVsbDtcbiAgICB9KTtcbiAgfVxuXG4gIHNldEl0ZW08VmFsdWU+KGtleTogc3RyaW5nLCB2YWx1ZTogVmFsdWUpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gdGhpcy5zdG9yYWdlLnNldEl0ZW0odGhpcy5yZXNvbHZlS2V5KGtleSksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XG4gIH1cblxuICByZW1vdmVJdGVtKGtleTogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuIHRoaXMuc3RvcmFnZS5yZW1vdmVJdGVtKHRoaXMucmVzb2x2ZUtleShrZXkpKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIktFWV9ERUxJTUlURVIiLCJKc29uU3RvcmFnZSIsImNvbnN0cnVjdG9yIiwic3RvcmFnZSIsIm5hbWVzcGFjZSIsIkFycmF5IiwiaXNBcnJheSIsImpvaW4iLCJyZXNvbHZlS2V5Iiwia2V5IiwiZ2V0SXRlbSIsInRoZW4iLCJpdGVtIiwiSlNPTiIsInBhcnNlIiwic2V0SXRlbSIsInZhbHVlIiwic3RyaW5naWZ5IiwicmVtb3ZlSXRlbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/services/storage/json-storage.service.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/services/storage/json-storage.service.types.ts":
/*!**********************************************************************************!*\
  !*** ../../packages/core/src/lib/services/storage/json-storage.service.types.ts ***!
  \**********************************************************************************/
/***/ (() => {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL3N0b3JhZ2UvanNvbi1zdG9yYWdlLnNlcnZpY2UudHlwZXMudHMuanMiLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL3N0b3JhZ2UvanNvbi1zdG9yYWdlLnNlcnZpY2UudHlwZXMudHM/NzdjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIEpzb25TdG9yYWdlU2VydmljZSB7XG4gIGdldEl0ZW08VmFsdWU+KGtleTogc3RyaW5nKTogUHJvbWlzZTxWYWx1ZSB8IG51bGw+O1xuICBzZXRJdGVtPFZhbHVlPihrZXk6IHN0cmluZywgdmFsdWU6IFZhbHVlKTogUHJvbWlzZTx2b2lkPjtcbiAgcmVtb3ZlSXRlbShrZXk6IHN0cmluZyk6IFByb21pc2U8dm9pZD47XG59XG4iXSwibWFwcGluZ3MiOiIifQ==\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/services/storage/json-storage.service.types.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/services/storage/storage.service.types.ts":
/*!*****************************************************************************!*\
  !*** ../../packages/core/src/lib/services/storage/storage.service.types.ts ***!
  \*****************************************************************************/
/***/ (() => {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL3N0b3JhZ2Uvc3RvcmFnZS5zZXJ2aWNlLnR5cGVzLnRzLmpzIiwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi9zZXJ2aWNlcy9zdG9yYWdlL3N0b3JhZ2Uuc2VydmljZS50eXBlcy50cz9kN2YwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZVNlcnZpY2Uge1xuICBnZXRJdGVtKGtleTogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmcgfCBudWxsPjtcbiAgc2V0SXRlbShrZXk6IHN0cmluZywgdmFsdWU6IHN0cmluZyk6IFByb21pc2U8dm9pZD47XG4gIHJlbW92ZUl0ZW0oa2V5OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xufVxuIl0sIm1hcHBpbmdzIjoiIn0=\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/services/storage/storage.service.types.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/services/storage/web-storage.service.ts":
/*!***************************************************************************!*\
  !*** ../../packages/core/src/lib/services/storage/web-storage.service.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WebStorageService\": () => (/* binding */ WebStorageService)\n/* harmony export */ });\nclass WebStorageService {\n  getItem(key) {\n    return new Promise(resolve => {\n      const value = localStorage.getItem(key);\n      resolve(value);\n    });\n  }\n\n  setItem(key, value) {\n    return new Promise(resolve => {\n      localStorage.setItem(key, value);\n      resolve();\n    });\n  }\n\n  removeItem(key) {\n    return new Promise(resolve => {\n      localStorage.removeItem(key);\n      resolve();\n    });\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL3N0b3JhZ2Uvd2ViLXN0b3JhZ2Uuc2VydmljZS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBRU8sTUFBTUEsaUJBQU4sQ0FBa0Q7RUFDdkRDLE9BQU8sQ0FBQ0MsR0FBRCxFQUFzQztJQUMzQyxPQUFPLElBQUlDLE9BQUosQ0FBYUMsT0FBRCxJQUFhO01BQzlCLE1BQU1DLEtBQUssR0FBR0MsWUFBWSxDQUFDTCxPQUFiLENBQXFCQyxHQUFyQixDQUFkO01BRUFFLE9BQU8sQ0FBQ0MsS0FBRCxDQUFQO0lBQ0QsQ0FKTSxDQUFQO0VBS0Q7O0VBRURFLE9BQU8sQ0FBQ0wsR0FBRCxFQUFjRyxLQUFkLEVBQTRDO0lBQ2pELE9BQU8sSUFBSUYsT0FBSixDQUFhQyxPQUFELElBQWE7TUFDOUJFLFlBQVksQ0FBQ0MsT0FBYixDQUFxQkwsR0FBckIsRUFBMEJHLEtBQTFCO01BRUFELE9BQU87SUFDUixDQUpNLENBQVA7RUFLRDs7RUFFREksVUFBVSxDQUFDTixHQUFELEVBQTZCO0lBQ3JDLE9BQU8sSUFBSUMsT0FBSixDQUFhQyxPQUFELElBQWE7TUFDOUJFLFlBQVksQ0FBQ0UsVUFBYixDQUF3Qk4sR0FBeEI7TUFFQUUsT0FBTztJQUNSLENBSk0sQ0FBUDtFQUtEOztBQXZCc0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3NlcnZpY2VzL3N0b3JhZ2Uvd2ViLXN0b3JhZ2Uuc2VydmljZS50cz8zZDljIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgU3RvcmFnZVNlcnZpY2UgfSBmcm9tIFwiLi9zdG9yYWdlLnNlcnZpY2UudHlwZXNcIjtcblxuZXhwb3J0IGNsYXNzIFdlYlN0b3JhZ2VTZXJ2aWNlIGltcGxlbWVudHMgU3RvcmFnZVNlcnZpY2Uge1xuICBnZXRJdGVtKGtleTogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmcgfCBudWxsPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSk7XG5cbiAgICAgIHJlc29sdmUodmFsdWUpO1xuICAgIH0pO1xuICB9XG5cbiAgc2V0SXRlbShrZXk6IHN0cmluZywgdmFsdWU6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCB2YWx1ZSk7XG5cbiAgICAgIHJlc29sdmUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJlbW92ZUl0ZW0oa2V5OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG5cbiAgICAgIHJlc29sdmUoKTtcbiAgICB9KTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIldlYlN0b3JhZ2VTZXJ2aWNlIiwiZ2V0SXRlbSIsImtleSIsIlByb21pc2UiLCJyZXNvbHZlIiwidmFsdWUiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwicmVtb3ZlSXRlbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/services/storage/web-storage.service.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/services/wallet-modules/wallet-modules.service.ts":
/*!*************************************************************************************!*\
  !*** ../../packages/core/src/lib/services/wallet-modules/wallet-modules.service.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WalletModules\": () => (/* binding */ WalletModules)\n/* harmony export */ });\n/* harmony import */ var _event_emitter_event_emitter_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../event-emitter/event-emitter.service */ \"../../packages/core/src/lib/services/event-emitter/event-emitter.service.ts\");\n/* harmony import */ var _logger_logger_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger/logger.service */ \"../../packages/core/src/lib/services/logger/logger.service.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ \"../../packages/core/src/lib/constants.ts\");\n/* harmony import */ var _storage_json_storage_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../storage/json-storage.service */ \"../../packages/core/src/lib/services/storage/json-storage.service.ts\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nclass WalletModules {\n  constructor({\n    factories,\n    storage,\n    options,\n    store,\n    emitter,\n    provider\n  }) {\n    _defineProperty(this, \"factories\", void 0);\n\n    _defineProperty(this, \"storage\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"store\", void 0);\n\n    _defineProperty(this, \"emitter\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"modules\", void 0);\n\n    _defineProperty(this, \"instances\", void 0);\n\n    this.factories = factories;\n    this.storage = storage;\n    this.options = options;\n    this.store = store;\n    this.emitter = emitter;\n    this.provider = provider;\n    this.modules = [];\n    this.instances = {};\n  }\n\n  async validateWallet(id) {\n    let accounts = [];\n    const wallet = await this.getWallet(id);\n\n    if (wallet) {\n      // Ensure our persistent state aligns with the selected wallet.\n      // For example a wallet is selected, but it returns no accounts (not signed in).\n      accounts = await wallet.getAccounts().catch(err => {\n        _logger_logger_service__WEBPACK_IMPORTED_MODULE_1__.logger.log(`Failed to validate ${wallet.id} during setup`);\n        _logger_logger_service__WEBPACK_IMPORTED_MODULE_1__.logger.error(err);\n        return [];\n      });\n    }\n\n    return accounts;\n  }\n\n  async resolveStorageState() {\n    const jsonStorage = new _storage_json_storage_service__WEBPACK_IMPORTED_MODULE_3__.JsonStorage(this.storage, _constants__WEBPACK_IMPORTED_MODULE_2__.PACKAGE_NAME);\n    const pendingSelectedWalletId = await jsonStorage.getItem(_constants__WEBPACK_IMPORTED_MODULE_2__.PENDING_SELECTED_WALLET_ID);\n    const pendingContract = await jsonStorage.getItem(_constants__WEBPACK_IMPORTED_MODULE_2__.PENDING_CONTRACT);\n\n    if (pendingSelectedWalletId && pendingContract) {\n      const accounts = await this.validateWallet(pendingSelectedWalletId);\n      await jsonStorage.removeItem(_constants__WEBPACK_IMPORTED_MODULE_2__.PENDING_SELECTED_WALLET_ID);\n      await jsonStorage.removeItem(_constants__WEBPACK_IMPORTED_MODULE_2__.PENDING_CONTRACT);\n\n      if (accounts.length) {\n        const {\n          selectedWalletId\n        } = this.store.getState();\n        const selectedWallet = await this.getWallet(selectedWalletId);\n\n        if (selectedWallet && pendingSelectedWalletId !== selectedWalletId) {\n          await selectedWallet.signOut().catch(err => {\n            _logger_logger_service__WEBPACK_IMPORTED_MODULE_1__.logger.log(\"Failed to sign out existing wallet\");\n            _logger_logger_service__WEBPACK_IMPORTED_MODULE_1__.logger.error(err);\n          });\n        }\n\n        return {\n          accounts,\n          contract: pendingContract,\n          selectedWalletId: pendingSelectedWalletId\n        };\n      }\n    }\n\n    const {\n      contract,\n      selectedWalletId\n    } = this.store.getState();\n    const accounts = await this.validateWallet(selectedWalletId);\n\n    if (!accounts.length) {\n      return {\n        accounts: [],\n        contract: null,\n        selectedWalletId: null\n      };\n    }\n\n    return {\n      accounts,\n      contract,\n      selectedWalletId\n    };\n  }\n\n  async signOutWallet(walletId) {\n    const wallet = await this.getWallet(walletId);\n    await wallet.signOut().catch(err => {\n      _logger_logger_service__WEBPACK_IMPORTED_MODULE_1__.logger.log(`Failed to sign out ${wallet.id}`);\n      _logger_logger_service__WEBPACK_IMPORTED_MODULE_1__.logger.error(err); // At least clean up state on our side.\n\n      this.onWalletSignedOut(wallet.id);\n    });\n  }\n\n  async onWalletSignedIn(walletId, {\n    accounts,\n    contractId,\n    methodNames\n  }) {\n    const {\n      selectedWalletId\n    } = this.store.getState();\n    const jsonStorage = new _storage_json_storage_service__WEBPACK_IMPORTED_MODULE_3__.JsonStorage(this.storage, _constants__WEBPACK_IMPORTED_MODULE_2__.PACKAGE_NAME);\n    const contract = {\n      contractId,\n      methodNames\n    };\n\n    if (!accounts.length) {\n      const module = this.getModule(walletId); // We can't guarantee the user will actually sign in with browser wallets.\n      // Best we can do is set in storage and validate on init.\n\n      if (module.type === \"browser\") {\n        await jsonStorage.setItem(_constants__WEBPACK_IMPORTED_MODULE_2__.PENDING_SELECTED_WALLET_ID, walletId);\n        await jsonStorage.setItem(_constants__WEBPACK_IMPORTED_MODULE_2__.PENDING_CONTRACT, contract);\n      }\n\n      return;\n    }\n\n    if (selectedWalletId && selectedWalletId !== walletId) {\n      await this.signOutWallet(selectedWalletId);\n    }\n\n    this.store.dispatch({\n      type: \"WALLET_CONNECTED\",\n      payload: {\n        walletId,\n        contract,\n        accounts\n      }\n    });\n  }\n\n  onWalletSignedOut(walletId) {\n    this.store.dispatch({\n      type: \"WALLET_DISCONNECTED\",\n      payload: {\n        walletId\n      }\n    });\n  }\n\n  setupWalletEmitter(module) {\n    const emitter = new _event_emitter_event_emitter_service__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();\n    emitter.on(\"signedOut\", () => {\n      this.onWalletSignedOut(module.id);\n    });\n    emitter.on(\"signedIn\", event => {\n      this.onWalletSignedIn(module.id, event);\n    });\n    emitter.on(\"accountsChanged\", async ({\n      accounts\n    }) => {\n      if (!accounts.length) {\n        return this.signOutWallet(module.id);\n      }\n\n      this.store.dispatch({\n        type: \"ACCOUNTS_CHANGED\",\n        payload: {\n          walletId: module.id,\n          accounts\n        }\n      });\n    });\n    emitter.on(\"networkChanged\", ({\n      networkId\n    }) => {\n      this.emitter.emit(\"networkChanged\", {\n        walletId: module.id,\n        networkId\n      });\n    });\n    return emitter;\n  }\n\n  decorateWallet(wallet) {\n    const _signIn = wallet.signIn;\n    const _signOut = wallet.signOut;\n\n    wallet.signIn = async params => {\n      const accounts = await _signIn(params);\n      const {\n        contractId,\n        methodNames = []\n      } = params;\n      await this.onWalletSignedIn(wallet.id, {\n        accounts,\n        contractId,\n        methodNames\n      });\n      return accounts;\n    };\n\n    wallet.signOut = async () => {\n      await _signOut();\n      this.onWalletSignedOut(wallet.id);\n    };\n\n    return wallet;\n  }\n\n  async setupInstance(module) {\n    if (!module.metadata.available) {\n      const message = module.type === \"injected\" ? \"not installed\" : \"not available\";\n      throw Error(`${module.metadata.name} is ${message}`);\n    }\n\n    const wallet = _objectSpread({\n      id: module.id,\n      type: module.type,\n      metadata: module.metadata\n    }, await module.init({\n      id: module.id,\n      type: module.type,\n      metadata: module.metadata,\n      options: this.options,\n      store: this.store.toReadOnly(),\n      provider: this.provider,\n      emitter: this.setupWalletEmitter(module),\n      logger: new _logger_logger_service__WEBPACK_IMPORTED_MODULE_1__.Logger(module.id),\n      storage: new _storage_json_storage_service__WEBPACK_IMPORTED_MODULE_3__.JsonStorage(this.storage, [_constants__WEBPACK_IMPORTED_MODULE_2__.PACKAGE_NAME, module.id])\n    }));\n\n    return this.decorateWallet(wallet);\n  }\n\n  getModule(id) {\n    return this.modules.find(x => x.id === id);\n  }\n\n  async getWallet(id) {\n    const module = this.getModule(id);\n\n    if (!module) {\n      return null;\n    }\n\n    const {\n      selectedWalletId\n    } = this.store.getState(); // If user uninstalled/removed a wallet which was previously signed in with\n    // best we can do is clean up state on our side.\n\n    if (!module.metadata.available && selectedWalletId) {\n      this.onWalletSignedOut(selectedWalletId);\n      return null;\n    }\n\n    return await module.wallet();\n  }\n\n  async setup() {\n    const modules = [];\n\n    for (let i = 0; i < this.factories.length; i += 1) {\n      const module = await this.factories[i]({\n        options: this.options\n      }).catch(err => {\n        _logger_logger_service__WEBPACK_IMPORTED_MODULE_1__.logger.log(\"Failed to setup module\");\n        _logger_logger_service__WEBPACK_IMPORTED_MODULE_1__.logger.error(err);\n        return null;\n      }); // Filter out wallets that aren't available.\n\n      if (!module) {\n        continue;\n      } // Skip duplicated module.\n\n\n      if (modules.some(x => x.id === module.id)) {\n        continue;\n      }\n\n      modules.push({\n        id: module.id,\n        type: module.type,\n        metadata: module.metadata,\n        wallet: async () => {\n          let instance = this.instances[module.id];\n\n          if (instance) {\n            return instance;\n          }\n\n          instance = await this.setupInstance(module);\n          this.instances[module.id] = instance;\n          return instance;\n        }\n      });\n    }\n\n    this.modules = modules;\n    const {\n      accounts,\n      contract,\n      selectedWalletId\n    } = await this.resolveStorageState();\n    this.store.dispatch({\n      type: \"SETUP_WALLET_MODULES\",\n      payload: {\n        modules,\n        accounts,\n        contract,\n        selectedWalletId\n      }\n    });\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/services/wallet-modules/wallet-modules.service.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/store.ts":
/*!********************************************!*\
  !*** ../../packages/core/src/lib/store.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createStore\": () => (/* binding */ createStore)\n/* harmony export */ });\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"rxjs\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rxjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services */ \"../../packages/core/src/lib/services/index.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"../../packages/core/src/lib/constants.ts\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nconst reducer = (state, action) => {\n  _services__WEBPACK_IMPORTED_MODULE_1__.logger.log(\"Store Action\", action);\n\n  switch (action.type) {\n    case \"SETUP_WALLET_MODULES\":\n      {\n        const {\n          modules,\n          accounts,\n          contract,\n          selectedWalletId\n        } = action.payload;\n        const accountStates = accounts.map((account, i) => {\n          return _objectSpread(_objectSpread({}, account), {}, {\n            active: i === 0\n          });\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          modules,\n          accounts: accountStates,\n          contract,\n          selectedWalletId\n        });\n      }\n\n    case \"WALLET_CONNECTED\":\n      {\n        const {\n          walletId,\n          contract,\n          accounts\n        } = action.payload;\n\n        if (!accounts.length) {\n          return state;\n        }\n\n        const activeAccountIndex = state.accounts.findIndex(account => account.active);\n        const accountStates = accounts.map((account, i) => {\n          return _objectSpread(_objectSpread({}, account), {}, {\n            active: i === (activeAccountIndex > -1 ? activeAccountIndex : 0)\n          });\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          contract,\n          accounts: accountStates,\n          selectedWalletId: walletId\n        });\n      }\n\n    case \"WALLET_DISCONNECTED\":\n      {\n        const {\n          walletId\n        } = action.payload;\n\n        if (walletId !== state.selectedWalletId) {\n          return state;\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          contract: null,\n          accounts: [],\n          selectedWalletId: null\n        });\n      }\n\n    case \"ACCOUNTS_CHANGED\":\n      {\n        const {\n          walletId,\n          accounts\n        } = action.payload;\n\n        if (walletId !== state.selectedWalletId) {\n          return state;\n        }\n\n        const activeAccount = state.accounts.find(account => account.active);\n        const isActiveAccountRemoved = !accounts.some(account => account.accountId === activeAccount?.accountId);\n        const accountStates = accounts.map((account, i) => {\n          return _objectSpread(_objectSpread({}, account), {}, {\n            active: isActiveAccountRemoved ? i === 0 : account.accountId === activeAccount?.accountId\n          });\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          accounts: accountStates\n        });\n      }\n\n    case \"SET_ACTIVE_ACCOUNT\":\n      {\n        const {\n          accountId\n        } = action.payload;\n        const accountStates = state.accounts.map(account => {\n          return _objectSpread(_objectSpread({}, account), {}, {\n            active: account.accountId === accountId\n          });\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          accounts: accountStates\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst createStore = async storage => {\n  const jsonStorage = new _services__WEBPACK_IMPORTED_MODULE_1__.JsonStorage(storage, _constants__WEBPACK_IMPORTED_MODULE_2__.PACKAGE_NAME);\n  const initialState = {\n    modules: [],\n    accounts: [],\n    contract: await jsonStorage.getItem(_constants__WEBPACK_IMPORTED_MODULE_2__.CONTRACT),\n    selectedWalletId: await jsonStorage.getItem(_constants__WEBPACK_IMPORTED_MODULE_2__.SELECTED_WALLET_ID)\n  };\n  const state$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(initialState);\n  const actions$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.Subject();\n  actions$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.scan)(reducer, initialState)).subscribe(state$);\n\n  const syncStorage = async (prevState, state, storageKey, property) => {\n    if (state[property] === prevState[property]) {\n      return;\n    }\n\n    if (state[property]) {\n      await jsonStorage.setItem(storageKey, state[property]);\n      return;\n    }\n\n    await jsonStorage.removeItem(storageKey);\n  };\n\n  let prevState = state$.getValue();\n  state$.subscribe(state => {\n    syncStorage(prevState, state, _constants__WEBPACK_IMPORTED_MODULE_2__.SELECTED_WALLET_ID, \"selectedWalletId\");\n    syncStorage(prevState, state, _constants__WEBPACK_IMPORTED_MODULE_2__.CONTRACT, \"contract\");\n    prevState = state;\n  });\n  return {\n    observable: state$,\n    getState: () => state$.getValue(),\n    dispatch: action => actions$.next(action),\n    toReadOnly: () => ({\n      getState: () => state$.getValue(),\n      observable: state$.asObservable()\n    })\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/store.ts\n");

/***/ }),

/***/ "../../packages/core/src/lib/wallet-selector.ts":
/*!******************************************************!*\
  !*** ../../packages/core/src/lib/wallet-selector.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupWalletSelector\": () => (/* binding */ setupWalletSelector)\n/* harmony export */ });\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./options */ \"../../packages/core/src/lib/options.ts\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store */ \"../../packages/core/src/lib/store.ts\");\n/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services */ \"../../packages/core/src/lib/services/index.ts\");\n\n\n\nlet walletSelectorInstance = null;\nconst setupWalletSelector = async params => {\n  const {\n    options,\n    storage\n  } = (0,_options__WEBPACK_IMPORTED_MODULE_0__.resolveOptions)(params);\n  _services__WEBPACK_IMPORTED_MODULE_2__.Logger.debug = options.debug;\n  const emitter = new _services__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();\n  const store = await (0,_store__WEBPACK_IMPORTED_MODULE_1__.createStore)(storage);\n  const walletModules = new _services__WEBPACK_IMPORTED_MODULE_2__.WalletModules({\n    factories: params.modules,\n    storage,\n    options,\n    store,\n    emitter,\n    provider: new _services__WEBPACK_IMPORTED_MODULE_2__.Provider(options.network.nodeUrl)\n  });\n  await walletModules.setup();\n\n  if (!walletSelectorInstance) {\n    walletSelectorInstance = {\n      options,\n      store: store.toReadOnly(),\n      wallet: async id => {\n        const {\n          selectedWalletId\n        } = store.getState();\n        const wallet = await walletModules.getWallet(id || selectedWalletId);\n\n        if (!wallet) {\n          if (id) {\n            throw new Error(\"Invalid wallet id\");\n          }\n\n          throw new Error(\"No wallet selected\");\n        }\n\n        return wallet;\n      },\n      setActiveAccount: accountId => {\n        const {\n          accounts\n        } = store.getState();\n\n        if (!accounts.some(account => account.accountId === accountId)) {\n          throw new Error(\"Invalid account id\");\n        }\n\n        store.dispatch({\n          type: \"SET_ACTIVE_ACCOUNT\",\n          payload: {\n            accountId\n          }\n        });\n      },\n\n      isSignedIn() {\n        const {\n          accounts\n        } = store.getState();\n        return Boolean(accounts.length);\n      },\n\n      on: (eventName, callback) => {\n        return emitter.on(eventName, callback);\n      },\n      off: (eventName, callback) => {\n        emitter.off(eventName, callback);\n      }\n    };\n  }\n\n  return walletSelectorInstance;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3dhbGxldC1zZWxlY3Rvci50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQU1BO0FBR0EsSUFBSU0sc0JBQTZDLEdBQUcsSUFBcEQ7QUFFTyxNQUFNQyxtQkFBbUIsR0FBRyxNQUNqQ0MsTUFEaUMsSUFFTDtFQUM1QixNQUFNO0lBQUVDLE9BQUY7SUFBV0M7RUFBWCxJQUF1QlYsd0RBQWMsQ0FBQ1EsTUFBRCxDQUEzQztFQUNBTCxtREFBQSxHQUFlTSxPQUFPLENBQUNFLEtBQXZCO0VBRUEsTUFBTUMsT0FBTyxHQUFHLElBQUlWLG1EQUFKLEVBQWhCO0VBQ0EsTUFBTVcsS0FBSyxHQUFHLE1BQU1aLG1EQUFXLENBQUNTLE9BQUQsQ0FBL0I7RUFDQSxNQUFNSSxhQUFhLEdBQUcsSUFBSVQsb0RBQUosQ0FBa0I7SUFDdENVLFNBQVMsRUFBRVAsTUFBTSxDQUFDUSxPQURvQjtJQUV0Q04sT0FGc0M7SUFHdENELE9BSHNDO0lBSXRDSSxLQUpzQztJQUt0Q0QsT0FMc0M7SUFNdENLLFFBQVEsRUFBRSxJQUFJYiwrQ0FBSixDQUFhSyxPQUFPLENBQUNTLE9BQVIsQ0FBZ0JDLE9BQTdCO0VBTjRCLENBQWxCLENBQXRCO0VBU0EsTUFBTUwsYUFBYSxDQUFDTSxLQUFkLEVBQU47O0VBRUEsSUFBSSxDQUFDZCxzQkFBTCxFQUE2QjtJQUMzQkEsc0JBQXNCLEdBQUc7TUFDdkJHLE9BRHVCO01BRXZCSSxLQUFLLEVBQUVBLEtBQUssQ0FBQ1EsVUFBTixFQUZnQjtNQUd2QkMsTUFBTSxFQUFFLE1BQTBDQyxFQUExQyxJQUEwRDtRQUNoRSxNQUFNO1VBQUVDO1FBQUYsSUFBdUJYLEtBQUssQ0FBQ1ksUUFBTixFQUE3QjtRQUNBLE1BQU1ILE1BQU0sR0FBRyxNQUFNUixhQUFhLENBQUNZLFNBQWQsQ0FDbkJILEVBQUUsSUFBSUMsZ0JBRGEsQ0FBckI7O1FBSUEsSUFBSSxDQUFDRixNQUFMLEVBQWE7VUFDWCxJQUFJQyxFQUFKLEVBQVE7WUFDTixNQUFNLElBQUlJLEtBQUosQ0FBVSxtQkFBVixDQUFOO1VBQ0Q7O1VBRUQsTUFBTSxJQUFJQSxLQUFKLENBQVUsb0JBQVYsQ0FBTjtRQUNEOztRQUVELE9BQU9MLE1BQVA7TUFDRCxDQWxCc0I7TUFtQnZCTSxnQkFBZ0IsRUFBR0MsU0FBRCxJQUF1QjtRQUN2QyxNQUFNO1VBQUVDO1FBQUYsSUFBZWpCLEtBQUssQ0FBQ1ksUUFBTixFQUFyQjs7UUFFQSxJQUFJLENBQUNLLFFBQVEsQ0FBQ0MsSUFBVCxDQUFlQyxPQUFELElBQWFBLE9BQU8sQ0FBQ0gsU0FBUixLQUFzQkEsU0FBakQsQ0FBTCxFQUFrRTtVQUNoRSxNQUFNLElBQUlGLEtBQUosQ0FBVSxvQkFBVixDQUFOO1FBQ0Q7O1FBRURkLEtBQUssQ0FBQ29CLFFBQU4sQ0FBZTtVQUNiQyxJQUFJLEVBQUUsb0JBRE87VUFFYkMsT0FBTyxFQUFFO1lBQUVOO1VBQUY7UUFGSSxDQUFmO01BSUQsQ0E5QnNCOztNQStCdkJPLFVBQVUsR0FBRztRQUNYLE1BQU07VUFBRU47UUFBRixJQUFlakIsS0FBSyxDQUFDWSxRQUFOLEVBQXJCO1FBRUEsT0FBT1ksT0FBTyxDQUFDUCxRQUFRLENBQUNRLE1BQVYsQ0FBZDtNQUNELENBbkNzQjs7TUFvQ3ZCQyxFQUFFLEVBQUUsQ0FBQ0MsU0FBRCxFQUFZQyxRQUFaLEtBQXlCO1FBQzNCLE9BQU83QixPQUFPLENBQUMyQixFQUFSLENBQVdDLFNBQVgsRUFBc0JDLFFBQXRCLENBQVA7TUFDRCxDQXRDc0I7TUF1Q3ZCQyxHQUFHLEVBQUUsQ0FBQ0YsU0FBRCxFQUFZQyxRQUFaLEtBQXlCO1FBQzVCN0IsT0FBTyxDQUFDOEIsR0FBUixDQUFZRixTQUFaLEVBQXVCQyxRQUF2QjtNQUNEO0lBekNzQixDQUF6QjtFQTJDRDs7RUFFRCxPQUFPbkMsc0JBQVA7QUFDRCxDQWxFTSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvd2FsbGV0LXNlbGVjdG9yLnRzPzRiMDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVzb2x2ZU9wdGlvbnMgfSBmcm9tIFwiLi9vcHRpb25zXCI7XG5pbXBvcnQgeyBjcmVhdGVTdG9yZSB9IGZyb20gXCIuL3N0b3JlXCI7XG5pbXBvcnQgdHlwZSB7XG4gIFdhbGxldFNlbGVjdG9yLFxuICBXYWxsZXRTZWxlY3RvckV2ZW50cyxcbiAgV2FsbGV0U2VsZWN0b3JQYXJhbXMsXG59IGZyb20gXCIuL3dhbGxldC1zZWxlY3Rvci50eXBlc1wiO1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBMb2dnZXIsIFByb3ZpZGVyLCBXYWxsZXRNb2R1bGVzIH0gZnJvbSBcIi4vc2VydmljZXNcIjtcbmltcG9ydCB0eXBlIHsgV2FsbGV0IH0gZnJvbSBcIi4vd2FsbGV0XCI7XG5cbmxldCB3YWxsZXRTZWxlY3Rvckluc3RhbmNlOiBXYWxsZXRTZWxlY3RvciB8IG51bGwgPSBudWxsO1xuXG5leHBvcnQgY29uc3Qgc2V0dXBXYWxsZXRTZWxlY3RvciA9IGFzeW5jIChcbiAgcGFyYW1zOiBXYWxsZXRTZWxlY3RvclBhcmFtc1xuKTogUHJvbWlzZTxXYWxsZXRTZWxlY3Rvcj4gPT4ge1xuICBjb25zdCB7IG9wdGlvbnMsIHN0b3JhZ2UgfSA9IHJlc29sdmVPcHRpb25zKHBhcmFtcyk7XG4gIExvZ2dlci5kZWJ1ZyA9IG9wdGlvbnMuZGVidWc7XG5cbiAgY29uc3QgZW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXI8V2FsbGV0U2VsZWN0b3JFdmVudHM+KCk7XG4gIGNvbnN0IHN0b3JlID0gYXdhaXQgY3JlYXRlU3RvcmUoc3RvcmFnZSk7XG4gIGNvbnN0IHdhbGxldE1vZHVsZXMgPSBuZXcgV2FsbGV0TW9kdWxlcyh7XG4gICAgZmFjdG9yaWVzOiBwYXJhbXMubW9kdWxlcyxcbiAgICBzdG9yYWdlLFxuICAgIG9wdGlvbnMsXG4gICAgc3RvcmUsXG4gICAgZW1pdHRlcixcbiAgICBwcm92aWRlcjogbmV3IFByb3ZpZGVyKG9wdGlvbnMubmV0d29yay5ub2RlVXJsKSxcbiAgfSk7XG5cbiAgYXdhaXQgd2FsbGV0TW9kdWxlcy5zZXR1cCgpO1xuXG4gIGlmICghd2FsbGV0U2VsZWN0b3JJbnN0YW5jZSkge1xuICAgIHdhbGxldFNlbGVjdG9ySW5zdGFuY2UgPSB7XG4gICAgICBvcHRpb25zLFxuICAgICAgc3RvcmU6IHN0b3JlLnRvUmVhZE9ubHkoKSxcbiAgICAgIHdhbGxldDogYXN5bmMgPFZhcmlhdGlvbiBleHRlbmRzIFdhbGxldCA9IFdhbGxldD4oaWQ/OiBzdHJpbmcpID0+IHtcbiAgICAgICAgY29uc3QgeyBzZWxlY3RlZFdhbGxldElkIH0gPSBzdG9yZS5nZXRTdGF0ZSgpO1xuICAgICAgICBjb25zdCB3YWxsZXQgPSBhd2FpdCB3YWxsZXRNb2R1bGVzLmdldFdhbGxldDxWYXJpYXRpb24+KFxuICAgICAgICAgIGlkIHx8IHNlbGVjdGVkV2FsbGV0SWRcbiAgICAgICAgKTtcblxuICAgICAgICBpZiAoIXdhbGxldCkge1xuICAgICAgICAgIGlmIChpZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB3YWxsZXQgaWRcIik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gd2FsbGV0IHNlbGVjdGVkXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHdhbGxldDtcbiAgICAgIH0sXG4gICAgICBzZXRBY3RpdmVBY2NvdW50OiAoYWNjb3VudElkOiBzdHJpbmcpID0+IHtcbiAgICAgICAgY29uc3QgeyBhY2NvdW50cyB9ID0gc3RvcmUuZ2V0U3RhdGUoKTtcblxuICAgICAgICBpZiAoIWFjY291bnRzLnNvbWUoKGFjY291bnQpID0+IGFjY291bnQuYWNjb3VudElkID09PSBhY2NvdW50SWQpKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhY2NvdW50IGlkXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3RvcmUuZGlzcGF0Y2goe1xuICAgICAgICAgIHR5cGU6IFwiU0VUX0FDVElWRV9BQ0NPVU5UXCIsXG4gICAgICAgICAgcGF5bG9hZDogeyBhY2NvdW50SWQgfSxcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgaXNTaWduZWRJbigpIHtcbiAgICAgICAgY29uc3QgeyBhY2NvdW50cyB9ID0gc3RvcmUuZ2V0U3RhdGUoKTtcblxuICAgICAgICByZXR1cm4gQm9vbGVhbihhY2NvdW50cy5sZW5ndGgpO1xuICAgICAgfSxcbiAgICAgIG9uOiAoZXZlbnROYW1lLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICByZXR1cm4gZW1pdHRlci5vbihldmVudE5hbWUsIGNhbGxiYWNrKTtcbiAgICAgIH0sXG4gICAgICBvZmY6IChldmVudE5hbWUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGVtaXR0ZXIub2ZmKGV2ZW50TmFtZSwgY2FsbGJhY2spO1xuICAgICAgfSxcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHdhbGxldFNlbGVjdG9ySW5zdGFuY2U7XG59O1xuIl0sIm5hbWVzIjpbInJlc29sdmVPcHRpb25zIiwiY3JlYXRlU3RvcmUiLCJFdmVudEVtaXR0ZXIiLCJMb2dnZXIiLCJQcm92aWRlciIsIldhbGxldE1vZHVsZXMiLCJ3YWxsZXRTZWxlY3Rvckluc3RhbmNlIiwic2V0dXBXYWxsZXRTZWxlY3RvciIsInBhcmFtcyIsIm9wdGlvbnMiLCJzdG9yYWdlIiwiZGVidWciLCJlbWl0dGVyIiwic3RvcmUiLCJ3YWxsZXRNb2R1bGVzIiwiZmFjdG9yaWVzIiwibW9kdWxlcyIsInByb3ZpZGVyIiwibmV0d29yayIsIm5vZGVVcmwiLCJzZXR1cCIsInRvUmVhZE9ubHkiLCJ3YWxsZXQiLCJpZCIsInNlbGVjdGVkV2FsbGV0SWQiLCJnZXRTdGF0ZSIsImdldFdhbGxldCIsIkVycm9yIiwic2V0QWN0aXZlQWNjb3VudCIsImFjY291bnRJZCIsImFjY291bnRzIiwic29tZSIsImFjY291bnQiLCJkaXNwYXRjaCIsInR5cGUiLCJwYXlsb2FkIiwiaXNTaWduZWRJbiIsIkJvb2xlYW4iLCJsZW5ndGgiLCJvbiIsImV2ZW50TmFtZSIsImNhbGxiYWNrIiwib2ZmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../packages/core/src/lib/wallet-selector.ts\n");

/***/ }),

/***/ "../../packages/default-wallets/src/index.ts":
/*!***************************************************!*\
  !*** ../../packages/default-wallets/src/index.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupDefaultWallets": () => (/* reexport safe */ _lib_default_wallets__WEBPACK_IMPORTED_MODULE_0__.setupDefaultWallets)
/* harmony export */ });
/* harmony import */ var _lib_default_wallets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/default-wallets */ "../../packages/default-wallets/src/lib/default-wallets.ts");


/***/ }),

/***/ "../../packages/default-wallets/src/lib/default-wallets.ts":
/*!*****************************************************************!*\
  !*** ../../packages/default-wallets/src/lib/default-wallets.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupDefaultWallets\": () => (/* binding */ setupDefaultWallets)\n/* harmony export */ });\n/* harmony import */ var _near_wallet_selector_my_near_wallet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @near-wallet-selector/my-near-wallet */ \"../../packages/my-near-wallet/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_ledger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @near-wallet-selector/ledger */ \"../../packages/ledger/src/index.ts\");\n\n\nconst setupDefaultWallets = async () => {\n  return [(0,_near_wallet_selector_my_near_wallet__WEBPACK_IMPORTED_MODULE_0__.setupMyNearWallet)(), (0,_near_wallet_selector_ledger__WEBPACK_IMPORTED_MODULE_1__.setupLedger)()];\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvZGVmYXVsdC13YWxsZXRzL3NyYy9saWIvZGVmYXVsdC13YWxsZXRzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFHTyxNQUFNRSxtQkFBbUIsR0FBRyxZQUU5QjtFQUNILE9BQU8sQ0FBQ0YsdUZBQWlCLEVBQWxCLEVBQXNCQyx5RUFBVyxFQUFqQyxDQUFQO0FBQ0QsQ0FKTSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9wYWNrYWdlcy9kZWZhdWx0LXdhbGxldHMvc3JjL2xpYi9kZWZhdWx0LXdhbGxldHMudHM/NGUzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZXR1cE15TmVhcldhbGxldCB9IGZyb20gXCJAbmVhci13YWxsZXQtc2VsZWN0b3IvbXktbmVhci13YWxsZXRcIjtcbmltcG9ydCB7IHNldHVwTGVkZ2VyIH0gZnJvbSBcIkBuZWFyLXdhbGxldC1zZWxlY3Rvci9sZWRnZXJcIjtcbmltcG9ydCB0eXBlIHsgV2FsbGV0TW9kdWxlRmFjdG9yeSB9IGZyb20gXCJAbmVhci13YWxsZXQtc2VsZWN0b3IvY29yZVwiO1xuXG5leHBvcnQgY29uc3Qgc2V0dXBEZWZhdWx0V2FsbGV0cyA9IGFzeW5jICgpOiBQcm9taXNlPFxuICBBcnJheTxXYWxsZXRNb2R1bGVGYWN0b3J5PlxuPiA9PiB7XG4gIHJldHVybiBbc2V0dXBNeU5lYXJXYWxsZXQoKSwgc2V0dXBMZWRnZXIoKV07XG59O1xuIl0sIm5hbWVzIjpbInNldHVwTXlOZWFyV2FsbGV0Iiwic2V0dXBMZWRnZXIiLCJzZXR1cERlZmF1bHRXYWxsZXRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../packages/default-wallets/src/lib/default-wallets.ts\n");

/***/ }),

/***/ "../../packages/ledger/src/index.ts":
/*!******************************************!*\
  !*** ../../packages/ledger/src/index.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupLedger": () => (/* reexport safe */ _lib_ledger__WEBPACK_IMPORTED_MODULE_0__.setupLedger)
/* harmony export */ });
/* harmony import */ var _lib_ledger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/ledger */ "../../packages/ledger/src/lib/ledger.ts");


/***/ }),

/***/ "../../packages/ledger/src/lib/ledger-client.ts":
/*!******************************************************!*\
  !*** ../../packages/ledger/src/lib/ledger-client.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CLA\": () => (/* binding */ CLA),\n/* harmony export */   \"INS_GET_APP_VERSION\": () => (/* binding */ INS_GET_APP_VERSION),\n/* harmony export */   \"INS_GET_PUBLIC_KEY\": () => (/* binding */ INS_GET_PUBLIC_KEY),\n/* harmony export */   \"INS_SIGN\": () => (/* binding */ INS_SIGN),\n/* harmony export */   \"LedgerClient\": () => (/* binding */ LedgerClient),\n/* harmony export */   \"P1_IGNORE\": () => (/* binding */ P1_IGNORE),\n/* harmony export */   \"P1_LAST\": () => (/* binding */ P1_LAST),\n/* harmony export */   \"P1_MORE\": () => (/* binding */ P1_MORE),\n/* harmony export */   \"P2_IGNORE\": () => (/* binding */ P2_IGNORE),\n/* harmony export */   \"isLedgerSupported\": () => (/* binding */ isLedgerSupported),\n/* harmony export */   \"networkId\": () => (/* binding */ networkId),\n/* harmony export */   \"parseDerivationPath\": () => (/* binding */ parseDerivationPath)\n/* harmony export */ });\n/* harmony import */ var _ledgerhq_hw_transport_webhid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ledgerhq/hw-transport-webhid */ \"@ledgerhq/hw-transport-webhid\");\n/* harmony import */ var _ledgerhq_hw_transport_webhid__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ledgerhq_hw_transport_webhid__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! near-api-js */ \"near-api-js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_1__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n // Further reading regarding APDU Ledger API:\n// - https://gist.github.com/Wollac/49f0c4e318e42f463b8306298dfb4f4a\n// - https://github.com/LedgerHQ/app-near/blob/master/workdir/app-near/src/constants.h\n\nconst CLA = 0x80; // Always the same for Ledger.\n\nconst INS_SIGN = 0x02; // Sign\n\nconst INS_GET_PUBLIC_KEY = 0x04; // Get Public Key\n\nconst INS_GET_APP_VERSION = 0x06; // Get App Version\n\nconst P1_LAST = 0x80; // End of Bytes to Sign (finalize)\n\nconst P1_MORE = 0x00; // More bytes coming\n\nconst P1_IGNORE = 0x00;\nconst P2_IGNORE = 0x00; // Converts BIP32-compliant derivation path to a Buffer.\n// More info here: https://github.com/LedgerHQ/ledger-live-common/blob/master/docs/derivation.md\n\nfunction parseDerivationPath(derivationPath) {\n  const parts = derivationPath.split(\"/\");\n  return Buffer.concat(parts.map(part => {\n    return part.endsWith(`'`) ? Math.abs(parseInt(part.slice(0, -1))) | 0x80000000 : Math.abs(parseInt(part));\n  }).map(i32 => {\n    return Buffer.from([i32 >> 24 & 0xff, i32 >> 16 & 0xff, i32 >> 8 & 0xff, i32 & 0xff]);\n  }));\n} // TODO: Understand what this is exactly. What's so special about 87?\n\nconst networkId = \"W\".charCodeAt(0);\n// Not using TransportWebHID.isSupported as it's chosen to use a Promise...\nconst isLedgerSupported = () => {\n  return !!window.navigator?.hid;\n};\nclass LedgerClient {\n  constructor() {\n    _defineProperty(this, \"transport\", null);\n\n    _defineProperty(this, \"isConnected\", () => {\n      return Boolean(this.transport);\n    });\n\n    _defineProperty(this, \"connect\", async () => {\n      this.transport = await _ledgerhq_hw_transport_webhid__WEBPACK_IMPORTED_MODULE_0___default().create();\n\n      const handleDisconnect = () => {\n        this.transport?.off(\"disconnect\", handleDisconnect);\n        this.transport = null;\n      };\n\n      this.transport.on(\"disconnect\", handleDisconnect);\n    });\n\n    _defineProperty(this, \"disconnect\", async () => {\n      if (!this.transport) {\n        throw new Error(\"Device not connected\");\n      }\n\n      await this.transport.close();\n      this.transport = null;\n    });\n\n    _defineProperty(this, \"setScrambleKey\", key => {\n      if (!this.transport) {\n        throw new Error(\"Device not connected\");\n      }\n\n      this.transport.setScrambleKey(key);\n    });\n\n    _defineProperty(this, \"on\", (event, callback) => {\n      if (!this.transport) {\n        throw new Error(\"Device not connected\");\n      }\n\n      this.transport.on(event, callback);\n      return {\n        remove: () => this.transport?.off(event, callback)\n      };\n    });\n\n    _defineProperty(this, \"off\", (event, callback) => {\n      if (!this.transport) {\n        throw new Error(\"Device not connected\");\n      }\n\n      this.transport.off(event, callback);\n    });\n\n    _defineProperty(this, \"getVersion\", async () => {\n      if (!this.transport) {\n        throw new Error(\"Device not connected\");\n      }\n\n      const res = await this.transport.send(CLA, INS_GET_APP_VERSION, P1_IGNORE, P2_IGNORE);\n      const [major, minor, patch] = Array.from(res);\n      return `${major}.${minor}.${patch}`;\n    });\n\n    _defineProperty(this, \"getPublicKey\", async ({\n      derivationPath\n    }) => {\n      if (!this.transport) {\n        throw new Error(\"Device not connected\");\n      }\n\n      const res = await this.transport.send(CLA, INS_GET_PUBLIC_KEY, P2_IGNORE, networkId, parseDerivationPath(derivationPath));\n      return near_api_js__WEBPACK_IMPORTED_MODULE_1__.utils.serialize.base_encode(res.subarray(0, -2));\n    });\n\n    _defineProperty(this, \"sign\", async ({\n      data,\n      derivationPath\n    }) => {\n      if (!this.transport) {\n        throw new Error(\"Device not connected\");\n      } // NOTE: getVersion call resets state to avoid starting from partially filled buffer\n\n\n      await this.getVersion(); // 128 - 5 service bytes\n\n      const CHUNK_SIZE = 123;\n      const allData = Buffer.concat([parseDerivationPath(derivationPath), Buffer.from(data)]);\n\n      for (let offset = 0; offset < allData.length; offset += CHUNK_SIZE) {\n        const isLastChunk = offset + CHUNK_SIZE >= allData.length;\n        const response = await this.transport.send(CLA, INS_SIGN, isLastChunk ? P1_LAST : P1_MORE, P2_IGNORE, Buffer.from(allData.subarray(offset, offset + CHUNK_SIZE)));\n\n        if (isLastChunk) {\n          return Buffer.from(response.subarray(0, -2));\n        }\n      }\n\n      throw new Error(\"Invalid data or derivation path\");\n    });\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../packages/ledger/src/lib/ledger-client.ts\n");

/***/ }),

/***/ "../../packages/ledger/src/lib/ledger.ts":
/*!***********************************************!*\
  !*** ../../packages/ledger/src/lib/ledger.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"STORAGE_ACCOUNTS\": () => (/* binding */ STORAGE_ACCOUNTS),\n/* harmony export */   \"setupLedger\": () => (/* binding */ setupLedger)\n/* harmony export */ });\n/* harmony import */ var is_mobile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-mobile */ \"is-mobile\");\n/* harmony import */ var is_mobile__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(is_mobile__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var near_api_js_lib_utils_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! near-api-js/lib/utils/errors */ \"near-api-js/lib/utils/errors\");\n/* harmony import */ var near_api_js_lib_utils_errors__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(near_api_js_lib_utils_errors__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @near-wallet-selector/wallet-utils */ \"../../packages/wallet-utils/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @near-wallet-selector/core */ \"../../packages/core/src/index.ts\");\n/* harmony import */ var _ledger_client__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ledger-client */ \"../../packages/ledger/src/lib/ledger-client.ts\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! near-api-js */ \"near-api-js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nconst STORAGE_ACCOUNTS = \"accounts\";\n\nconst setupLedgerState = async storage => {\n  const accounts = await storage.getItem(STORAGE_ACCOUNTS);\n  return {\n    client: new _ledger_client__WEBPACK_IMPORTED_MODULE_4__.LedgerClient(),\n    subscriptions: [],\n    accounts: accounts || []\n  };\n};\n\nconst Ledger = async ({\n  options,\n  store,\n  provider,\n  logger,\n  storage,\n  metadata\n}) => {\n  const _state = await setupLedgerState(storage);\n\n  const signer = {\n    createKey: () => {\n      throw new Error(\"Not implemented\");\n    },\n    getPublicKey: async accountId => {\n      const account = _state.accounts.find(a => a.accountId === accountId);\n\n      if (!account) {\n        throw new Error(\"Failed to find public key for account\");\n      }\n\n      return near_api_js__WEBPACK_IMPORTED_MODULE_5__.utils.PublicKey.from(account.publicKey);\n    },\n    signMessage: async (message, accountId) => {\n      const account = _state.accounts.find(a => a.accountId === accountId);\n\n      if (!account) {\n        throw new Error(\"Failed to find account for signing\");\n      }\n\n      const signature = await _state.client.sign({\n        data: message,\n        derivationPath: account.derivationPath\n      });\n      return {\n        signature,\n        publicKey: near_api_js__WEBPACK_IMPORTED_MODULE_5__.utils.PublicKey.from(account.publicKey)\n      };\n    }\n  };\n\n  const getAccounts = () => {\n    return _state.accounts.map(x => ({\n      accountId: x.accountId\n    }));\n  };\n\n  const cleanup = () => {\n    _state.subscriptions.forEach(subscription => subscription.remove());\n\n    _state.subscriptions = [];\n    _state.accounts = [];\n    storage.removeItem(STORAGE_ACCOUNTS);\n  };\n\n  const signOut = async () => {\n    if (_state.client.isConnected()) {\n      await _state.client.disconnect().catch(err => {\n        logger.log(\"Failed to disconnect device\");\n        logger.error(err);\n      });\n    }\n\n    cleanup();\n  };\n\n  const connectLedgerDevice = async () => {\n    if (_state.client.isConnected()) {\n      return;\n    }\n\n    await _state.client.connect();\n  };\n\n  const validateAccessKey = ({\n    accountId,\n    publicKey\n  }) => {\n    logger.log(\"validateAccessKey\", {\n      accountId,\n      publicKey\n    });\n    return provider.viewAccessKey({\n      accountId,\n      publicKey\n    }).then(accessKey => {\n      logger.log(\"validateAccessKey:accessKey\", {\n        accessKey\n      });\n\n      if (accessKey.permission !== \"FullAccess\") {\n        throw new Error(\"Public key requires 'FullAccess' permission\");\n      }\n\n      return accessKey;\n    }, err => {\n      if (err instanceof near_api_js_lib_utils_errors__WEBPACK_IMPORTED_MODULE_1__.TypedError && err.type === \"AccessKeyDoesNotExist\") {\n        return null;\n      }\n\n      throw err;\n    });\n  };\n\n  const transformTransactions = transactions => {\n    const {\n      contract\n    } = store.getState();\n\n    if (!contract) {\n      throw new Error(\"Wallet not signed in\");\n    }\n\n    const account = (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_3__.getActiveAccount)(store.getState());\n\n    if (!account) {\n      throw new Error(\"No active account\");\n    }\n\n    return transactions.map(transaction => {\n      return {\n        signerId: transaction.signerId || account.accountId,\n        receiverId: transaction.receiverId || contract.contractId,\n        actions: transaction.actions\n      };\n    });\n  };\n\n  return {\n    async signIn({\n      accounts\n    }) {\n      const existingAccounts = getAccounts();\n\n      if (existingAccounts.length) {\n        return existingAccounts;\n      }\n\n      const ledgerAccounts = [];\n\n      for (let i = 0; i < accounts.length; i++) {\n        const {\n          derivationPath,\n          accountId,\n          publicKey\n        } = accounts[i];\n        const accessKey = await validateAccessKey({\n          accountId,\n          publicKey\n        });\n\n        if (!accessKey) {\n          throw new Error(`Public key is not registered with the account '${accountId}'.`);\n        }\n\n        ledgerAccounts.push({\n          accountId,\n          derivationPath,\n          publicKey\n        });\n      }\n\n      await storage.setItem(STORAGE_ACCOUNTS, ledgerAccounts);\n      _state.accounts = ledgerAccounts;\n      return getAccounts();\n    },\n\n    signOut,\n\n    async getAccounts() {\n      return getAccounts();\n    },\n\n    async verifyOwner({\n      message\n    }) {\n      logger.log(\"Ledger:verifyOwner\", {\n        message\n      });\n      throw new Error(`Method not supported by ${metadata.name}`);\n    },\n\n    async signAndSendTransaction({\n      signerId,\n      receiverId,\n      actions\n    }) {\n      logger.log(\"signAndSendTransaction\", {\n        signerId,\n        receiverId,\n        actions\n      });\n\n      if (!_state.accounts.length) {\n        throw new Error(\"Wallet not signed in\");\n      } // Note: Connection must be triggered by user interaction.\n\n\n      await connectLedgerDevice();\n      const signedTransactions = await (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_2__.signTransactions)(transformTransactions([{\n        signerId,\n        receiverId,\n        actions\n      }]), signer, options.network);\n      return provider.sendTransaction(signedTransactions[0]);\n    },\n\n    async signAndSendTransactions({\n      transactions\n    }) {\n      logger.log(\"signAndSendTransactions\", {\n        transactions\n      });\n\n      if (!_state.accounts.length) {\n        throw new Error(\"Wallet not signed in\");\n      } // Note: Connection must be triggered by user interaction.\n\n\n      await connectLedgerDevice();\n      const signedTransactions = await (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_2__.signTransactions)(transformTransactions(transactions), signer, options.network);\n      const results = [];\n\n      for (let i = 0; i < signedTransactions.length; i++) {\n        results.push(await provider.sendTransaction(signedTransactions[i]));\n      }\n\n      return results;\n    },\n\n    async getPublicKey(derivationPath) {\n      await connectLedgerDevice();\n      return await _state.client.getPublicKey({\n        derivationPath\n      });\n    }\n\n  };\n};\n\nfunction setupLedger({\n  iconUrl = \"./assets/ledger-icon.png\",\n  deprecated = false\n} = {}) {\n  return async () => {\n    const mobile = (0,is_mobile__WEBPACK_IMPORTED_MODULE_0__.isMobile)();\n    const supported = (0,_ledger_client__WEBPACK_IMPORTED_MODULE_4__.isLedgerSupported)();\n\n    if (mobile) {\n      return null;\n    }\n\n    return {\n      id: \"ledger\",\n      type: \"hardware\",\n      metadata: {\n        name: \"Ledger\",\n        description: null,\n        iconUrl,\n        deprecated,\n        available: supported\n      },\n      init: Ledger\n    };\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvbGVkZ2VyL3NyYy9saWIvbGVkZ2VyLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBVUE7QUFFQTtBQUVBO0FBd0JPLE1BQU1PLGdCQUFnQixHQUFHLFVBQXpCOztBQUVQLE1BQU1DLGdCQUFnQixHQUFHLE1BQ3ZCQyxPQUR1QixJQUVFO0VBQ3pCLE1BQU1DLFFBQVEsR0FBRyxNQUFNRCxPQUFPLENBQUNFLE9BQVIsQ0FDckJKLGdCQURxQixDQUF2QjtFQUlBLE9BQU87SUFDTEssTUFBTSxFQUFFLElBQUlQLHdEQUFKLEVBREg7SUFFTFEsYUFBYSxFQUFFLEVBRlY7SUFHTEgsUUFBUSxFQUFFQSxRQUFRLElBQUk7RUFIakIsQ0FBUDtBQUtELENBWkQ7O0FBY0EsTUFBTUksTUFBOEMsR0FBRyxPQUFPO0VBQzVEQyxPQUQ0RDtFQUU1REMsS0FGNEQ7RUFHNURDLFFBSDREO0VBSTVEQyxNQUo0RDtFQUs1RFQsT0FMNEQ7RUFNNURVO0FBTjRELENBQVAsS0FPakQ7RUFDSixNQUFNQyxNQUFNLEdBQUcsTUFBTVosZ0JBQWdCLENBQUNDLE9BQUQsQ0FBckM7O0VBRUEsTUFBTVksTUFBYyxHQUFHO0lBQ3JCQyxTQUFTLEVBQUUsTUFBTTtNQUNmLE1BQU0sSUFBSUMsS0FBSixDQUFVLGlCQUFWLENBQU47SUFDRCxDQUhvQjtJQUlyQkMsWUFBWSxFQUFFLE1BQU9DLFNBQVAsSUFBcUI7TUFDakMsTUFBTUMsT0FBTyxHQUFHTixNQUFNLENBQUNWLFFBQVAsQ0FBZ0JpQixJQUFoQixDQUFzQkMsQ0FBRCxJQUFPQSxDQUFDLENBQUNILFNBQUYsS0FBZ0JBLFNBQTVDLENBQWhCOztNQUVBLElBQUksQ0FBQ0MsT0FBTCxFQUFjO1FBQ1osTUFBTSxJQUFJSCxLQUFKLENBQVUsdUNBQVYsQ0FBTjtNQUNEOztNQUVELE9BQU9qQiw2REFBQSxDQUFxQm9CLE9BQU8sQ0FBQ0ssU0FBN0IsQ0FBUDtJQUNELENBWm9CO0lBYXJCQyxXQUFXLEVBQUUsT0FBT0MsT0FBUCxFQUFnQlIsU0FBaEIsS0FBOEI7TUFDekMsTUFBTUMsT0FBTyxHQUFHTixNQUFNLENBQUNWLFFBQVAsQ0FBZ0JpQixJQUFoQixDQUFzQkMsQ0FBRCxJQUFPQSxDQUFDLENBQUNILFNBQUYsS0FBZ0JBLFNBQTVDLENBQWhCOztNQUVBLElBQUksQ0FBQ0MsT0FBTCxFQUFjO1FBQ1osTUFBTSxJQUFJSCxLQUFKLENBQVUsb0NBQVYsQ0FBTjtNQUNEOztNQUVELE1BQU1XLFNBQVMsR0FBRyxNQUFNZCxNQUFNLENBQUNSLE1BQVAsQ0FBY3VCLElBQWQsQ0FBbUI7UUFDekNDLElBQUksRUFBRUgsT0FEbUM7UUFFekNJLGNBQWMsRUFBRVgsT0FBTyxDQUFDVztNQUZpQixDQUFuQixDQUF4QjtNQUtBLE9BQU87UUFDTEgsU0FESztRQUVMSCxTQUFTLEVBQUV6Qiw2REFBQSxDQUFxQm9CLE9BQU8sQ0FBQ0ssU0FBN0I7TUFGTixDQUFQO0lBSUQ7RUE3Qm9CLENBQXZCOztFQWdDQSxNQUFNTyxXQUFXLEdBQUcsTUFBc0I7SUFDeEMsT0FBT2xCLE1BQU0sQ0FBQ1YsUUFBUCxDQUFnQjZCLEdBQWhCLENBQXFCQyxDQUFELEtBQVE7TUFDakNmLFNBQVMsRUFBRWUsQ0FBQyxDQUFDZjtJQURvQixDQUFSLENBQXBCLENBQVA7RUFHRCxDQUpEOztFQU1BLE1BQU1nQixPQUFPLEdBQUcsTUFBTTtJQUNwQnJCLE1BQU0sQ0FBQ1AsYUFBUCxDQUFxQjZCLE9BQXJCLENBQThCQyxZQUFELElBQWtCQSxZQUFZLENBQUNDLE1BQWIsRUFBL0M7O0lBRUF4QixNQUFNLENBQUNQLGFBQVAsR0FBdUIsRUFBdkI7SUFDQU8sTUFBTSxDQUFDVixRQUFQLEdBQWtCLEVBQWxCO0lBRUFELE9BQU8sQ0FBQ29DLFVBQVIsQ0FBbUJ0QyxnQkFBbkI7RUFDRCxDQVBEOztFQVNBLE1BQU11QyxPQUFPLEdBQUcsWUFBWTtJQUMxQixJQUFJMUIsTUFBTSxDQUFDUixNQUFQLENBQWNtQyxXQUFkLEVBQUosRUFBaUM7TUFDL0IsTUFBTTNCLE1BQU0sQ0FBQ1IsTUFBUCxDQUFjb0MsVUFBZCxHQUEyQkMsS0FBM0IsQ0FBa0NDLEdBQUQsSUFBUztRQUM5Q2hDLE1BQU0sQ0FBQ2lDLEdBQVAsQ0FBVyw2QkFBWDtRQUNBakMsTUFBTSxDQUFDa0MsS0FBUCxDQUFhRixHQUFiO01BQ0QsQ0FISyxDQUFOO0lBSUQ7O0lBRURULE9BQU87RUFDUixDQVREOztFQVdBLE1BQU1ZLG1CQUFtQixHQUFHLFlBQVk7SUFDdEMsSUFBSWpDLE1BQU0sQ0FBQ1IsTUFBUCxDQUFjbUMsV0FBZCxFQUFKLEVBQWlDO01BQy9CO0lBQ0Q7O0lBRUQsTUFBTTNCLE1BQU0sQ0FBQ1IsTUFBUCxDQUFjMEMsT0FBZCxFQUFOO0VBQ0QsQ0FORDs7RUFRQSxNQUFNQyxpQkFBaUIsR0FBRyxDQUFDO0lBQ3pCOUIsU0FEeUI7SUFFekJNO0VBRnlCLENBQUQsS0FHSztJQUM3QmIsTUFBTSxDQUFDaUMsR0FBUCxDQUFXLG1CQUFYLEVBQWdDO01BQUUxQixTQUFGO01BQWFNO0lBQWIsQ0FBaEM7SUFFQSxPQUFPZCxRQUFRLENBQUN1QyxhQUFULENBQXVCO01BQUUvQixTQUFGO01BQWFNO0lBQWIsQ0FBdkIsRUFBaUQwQixJQUFqRCxDQUNKQyxTQUFELElBQWU7TUFDYnhDLE1BQU0sQ0FBQ2lDLEdBQVAsQ0FBVyw2QkFBWCxFQUEwQztRQUFFTztNQUFGLENBQTFDOztNQUVBLElBQUlBLFNBQVMsQ0FBQ0MsVUFBVixLQUF5QixZQUE3QixFQUEyQztRQUN6QyxNQUFNLElBQUlwQyxLQUFKLENBQVUsNkNBQVYsQ0FBTjtNQUNEOztNQUVELE9BQU9tQyxTQUFQO0lBQ0QsQ0FUSSxFQVVKUixHQUFELElBQVM7TUFDUCxJQUFJQSxHQUFHLFlBQVlqRCxvRUFBZixJQUE2QmlELEdBQUcsQ0FBQ1UsSUFBSixLQUFhLHVCQUE5QyxFQUF1RTtRQUNyRSxPQUFPLElBQVA7TUFDRDs7TUFFRCxNQUFNVixHQUFOO0lBQ0QsQ0FoQkksQ0FBUDtFQWtCRCxDQXhCRDs7RUEwQkEsTUFBTVcscUJBQXFCLEdBQ3pCQyxZQUQ0QixJQUVMO0lBQ3ZCLE1BQU07TUFBRUM7SUFBRixJQUFlL0MsS0FBSyxDQUFDZ0QsUUFBTixFQUFyQjs7SUFFQSxJQUFJLENBQUNELFFBQUwsRUFBZTtNQUNiLE1BQU0sSUFBSXhDLEtBQUosQ0FBVSxzQkFBVixDQUFOO0lBQ0Q7O0lBRUQsTUFBTUcsT0FBTyxHQUFHdkIsNEVBQWdCLENBQUNhLEtBQUssQ0FBQ2dELFFBQU4sRUFBRCxDQUFoQzs7SUFFQSxJQUFJLENBQUN0QyxPQUFMLEVBQWM7TUFDWixNQUFNLElBQUlILEtBQUosQ0FBVSxtQkFBVixDQUFOO0lBQ0Q7O0lBRUQsT0FBT3VDLFlBQVksQ0FBQ3ZCLEdBQWIsQ0FBa0IwQixXQUFELElBQWlCO01BQ3ZDLE9BQU87UUFDTEMsUUFBUSxFQUFFRCxXQUFXLENBQUNDLFFBQVosSUFBd0J4QyxPQUFPLENBQUNELFNBRHJDO1FBRUwwQyxVQUFVLEVBQUVGLFdBQVcsQ0FBQ0UsVUFBWixJQUEwQkosUUFBUSxDQUFDSyxVQUYxQztRQUdMQyxPQUFPLEVBQUVKLFdBQVcsQ0FBQ0k7TUFIaEIsQ0FBUDtJQUtELENBTk0sQ0FBUDtFQU9ELENBdEJEOztFQXdCQSxPQUFPO0lBQ0wsTUFBTUMsTUFBTixDQUFhO01BQUU1RDtJQUFGLENBQWIsRUFBMkI7TUFDekIsTUFBTTZELGdCQUFnQixHQUFHakMsV0FBVyxFQUFwQzs7TUFFQSxJQUFJaUMsZ0JBQWdCLENBQUNDLE1BQXJCLEVBQTZCO1FBQzNCLE9BQU9ELGdCQUFQO01BQ0Q7O01BRUQsTUFBTUUsY0FBb0MsR0FBRyxFQUE3Qzs7TUFFQSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdoRSxRQUFRLENBQUM4RCxNQUE3QixFQUFxQ0UsQ0FBQyxFQUF0QyxFQUEwQztRQUN4QyxNQUFNO1VBQUVyQyxjQUFGO1VBQWtCWixTQUFsQjtVQUE2Qk07UUFBN0IsSUFBMkNyQixRQUFRLENBQUNnRSxDQUFELENBQXpEO1FBRUEsTUFBTWhCLFNBQVMsR0FBRyxNQUFNSCxpQkFBaUIsQ0FBQztVQUFFOUIsU0FBRjtVQUFhTTtRQUFiLENBQUQsQ0FBekM7O1FBRUEsSUFBSSxDQUFDMkIsU0FBTCxFQUFnQjtVQUNkLE1BQU0sSUFBSW5DLEtBQUosQ0FDSCxrREFBaURFLFNBQVUsSUFEeEQsQ0FBTjtRQUdEOztRQUVEZ0QsY0FBYyxDQUFDRSxJQUFmLENBQW9CO1VBQ2xCbEQsU0FEa0I7VUFFbEJZLGNBRmtCO1VBR2xCTjtRQUhrQixDQUFwQjtNQUtEOztNQUVELE1BQU10QixPQUFPLENBQUNtRSxPQUFSLENBQWdCckUsZ0JBQWhCLEVBQWtDa0UsY0FBbEMsQ0FBTjtNQUNBckQsTUFBTSxDQUFDVixRQUFQLEdBQWtCK0QsY0FBbEI7TUFFQSxPQUFPbkMsV0FBVyxFQUFsQjtJQUNELENBaENJOztJQWtDTFEsT0FsQ0s7O0lBb0NMLE1BQU1SLFdBQU4sR0FBb0I7TUFDbEIsT0FBT0EsV0FBVyxFQUFsQjtJQUNELENBdENJOztJQXdDTCxNQUFNdUMsV0FBTixDQUFrQjtNQUFFNUM7SUFBRixDQUFsQixFQUErQjtNQUM3QmYsTUFBTSxDQUFDaUMsR0FBUCxDQUFXLG9CQUFYLEVBQWlDO1FBQUVsQjtNQUFGLENBQWpDO01BRUEsTUFBTSxJQUFJVixLQUFKLENBQVcsMkJBQTBCSixRQUFRLENBQUMyRCxJQUFLLEVBQW5ELENBQU47SUFDRCxDQTVDSTs7SUE4Q0wsTUFBTUMsc0JBQU4sQ0FBNkI7TUFBRWIsUUFBRjtNQUFZQyxVQUFaO01BQXdCRTtJQUF4QixDQUE3QixFQUFnRTtNQUM5RG5ELE1BQU0sQ0FBQ2lDLEdBQVAsQ0FBVyx3QkFBWCxFQUFxQztRQUFFZSxRQUFGO1FBQVlDLFVBQVo7UUFBd0JFO01BQXhCLENBQXJDOztNQUVBLElBQUksQ0FBQ2pELE1BQU0sQ0FBQ1YsUUFBUCxDQUFnQjhELE1BQXJCLEVBQTZCO1FBQzNCLE1BQU0sSUFBSWpELEtBQUosQ0FBVSxzQkFBVixDQUFOO01BQ0QsQ0FMNkQsQ0FPOUQ7OztNQUNBLE1BQU04QixtQkFBbUIsRUFBekI7TUFFQSxNQUFNMkIsa0JBQWtCLEdBQUcsTUFBTTlFLG9GQUFnQixDQUMvQzJELHFCQUFxQixDQUFDLENBQUM7UUFBRUssUUFBRjtRQUFZQyxVQUFaO1FBQXdCRTtNQUF4QixDQUFELENBQUQsQ0FEMEIsRUFFL0NoRCxNQUYrQyxFQUcvQ04sT0FBTyxDQUFDa0UsT0FIdUMsQ0FBakQ7TUFNQSxPQUFPaEUsUUFBUSxDQUFDaUUsZUFBVCxDQUF5QkYsa0JBQWtCLENBQUMsQ0FBRCxDQUEzQyxDQUFQO0lBQ0QsQ0EvREk7O0lBaUVMLE1BQU1HLHVCQUFOLENBQThCO01BQUVyQjtJQUFGLENBQTlCLEVBQWdEO01BQzlDNUMsTUFBTSxDQUFDaUMsR0FBUCxDQUFXLHlCQUFYLEVBQXNDO1FBQUVXO01BQUYsQ0FBdEM7O01BRUEsSUFBSSxDQUFDMUMsTUFBTSxDQUFDVixRQUFQLENBQWdCOEQsTUFBckIsRUFBNkI7UUFDM0IsTUFBTSxJQUFJakQsS0FBSixDQUFVLHNCQUFWLENBQU47TUFDRCxDQUw2QyxDQU85Qzs7O01BQ0EsTUFBTThCLG1CQUFtQixFQUF6QjtNQUVBLE1BQU0yQixrQkFBa0IsR0FBRyxNQUFNOUUsb0ZBQWdCLENBQy9DMkQscUJBQXFCLENBQUNDLFlBQUQsQ0FEMEIsRUFFL0N6QyxNQUYrQyxFQUcvQ04sT0FBTyxDQUFDa0UsT0FIdUMsQ0FBakQ7TUFNQSxNQUFNRyxPQUFxQyxHQUFHLEVBQTlDOztNQUVBLEtBQUssSUFBSVYsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR00sa0JBQWtCLENBQUNSLE1BQXZDLEVBQStDRSxDQUFDLEVBQWhELEVBQW9EO1FBQ2xEVSxPQUFPLENBQUNULElBQVIsQ0FBYSxNQUFNMUQsUUFBUSxDQUFDaUUsZUFBVCxDQUF5QkYsa0JBQWtCLENBQUNOLENBQUQsQ0FBM0MsQ0FBbkI7TUFDRDs7TUFFRCxPQUFPVSxPQUFQO0lBQ0QsQ0F4Rkk7O0lBeUZMLE1BQU01RCxZQUFOLENBQW1CYSxjQUFuQixFQUEyQztNQUN6QyxNQUFNZ0IsbUJBQW1CLEVBQXpCO01BRUEsT0FBTyxNQUFNakMsTUFBTSxDQUFDUixNQUFQLENBQWNZLFlBQWQsQ0FBMkI7UUFBRWE7TUFBRixDQUEzQixDQUFiO0lBQ0Q7O0VBN0ZJLENBQVA7QUErRkQsQ0E3TkQ7O0FBK05PLFNBQVNnRCxXQUFULENBQXFCO0VBQzFCQyxPQUFPLEdBQUcsMEJBRGdCO0VBRTFCQyxVQUFVLEdBQUc7QUFGYSxJQUdWLEVBSFgsRUFHb0Q7RUFDekQsT0FBTyxZQUFZO0lBQ2pCLE1BQU1DLE1BQU0sR0FBR3hGLG1EQUFRLEVBQXZCO0lBQ0EsTUFBTXlGLFNBQVMsR0FBR3JGLGlFQUFpQixFQUFuQzs7SUFFQSxJQUFJb0YsTUFBSixFQUFZO01BQ1YsT0FBTyxJQUFQO0lBQ0Q7O0lBRUQsT0FBTztNQUNMRSxFQUFFLEVBQUUsUUFEQztNQUVMOUIsSUFBSSxFQUFFLFVBRkQ7TUFHTHpDLFFBQVEsRUFBRTtRQUNSMkQsSUFBSSxFQUFFLFFBREU7UUFFUmEsV0FBVyxFQUFFLElBRkw7UUFHUkwsT0FIUTtRQUlSQyxVQUpRO1FBS1JLLFNBQVMsRUFBRUg7TUFMSCxDQUhMO01BVUxJLElBQUksRUFBRS9FO0lBVkQsQ0FBUDtFQVlELENBcEJEO0FBcUJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL3BhY2thZ2VzL2xlZGdlci9zcmMvbGliL2xlZGdlci50cz9hMmM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTW9iaWxlIH0gZnJvbSBcImlzLW1vYmlsZVwiO1xuaW1wb3J0IHsgVHlwZWRFcnJvciB9IGZyb20gXCJuZWFyLWFwaS1qcy9saWIvdXRpbHMvZXJyb3JzXCI7XG5pbXBvcnQgeyBzaWduVHJhbnNhY3Rpb25zIH0gZnJvbSBcIkBuZWFyLXdhbGxldC1zZWxlY3Rvci93YWxsZXQtdXRpbHNcIjtcbmltcG9ydCB0eXBlIHtcbiAgV2FsbGV0TW9kdWxlRmFjdG9yeSxcbiAgV2FsbGV0QmVoYXZpb3VyRmFjdG9yeSxcbiAgSnNvblN0b3JhZ2VTZXJ2aWNlLFxuICBBY2NvdW50LFxuICBIYXJkd2FyZVdhbGxldCxcbiAgVHJhbnNhY3Rpb24sXG4gIE9wdGlvbmFsLFxufSBmcm9tIFwiQG5lYXItd2FsbGV0LXNlbGVjdG9yL2NvcmVcIjtcbmltcG9ydCB7IGdldEFjdGl2ZUFjY291bnQgfSBmcm9tIFwiQG5lYXItd2FsbGV0LXNlbGVjdG9yL2NvcmVcIjtcblxuaW1wb3J0IHsgaXNMZWRnZXJTdXBwb3J0ZWQsIExlZGdlckNsaWVudCB9IGZyb20gXCIuL2xlZGdlci1jbGllbnRcIjtcbmltcG9ydCB0eXBlIHsgU3Vic2NyaXB0aW9uIH0gZnJvbSBcIi4vbGVkZ2VyLWNsaWVudFwiO1xuaW1wb3J0IHsgU2lnbmVyLCB1dGlscyB9IGZyb20gXCJuZWFyLWFwaS1qc1wiO1xuaW1wb3J0IHR5cGUgeyBGaW5hbEV4ZWN1dGlvbk91dGNvbWUgfSBmcm9tIFwibmVhci1hcGktanMvbGliL3Byb3ZpZGVyc1wiO1xuXG5pbnRlcmZhY2UgTGVkZ2VyQWNjb3VudCBleHRlbmRzIEFjY291bnQge1xuICBkZXJpdmF0aW9uUGF0aDogc3RyaW5nO1xuICBwdWJsaWNLZXk6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIFZhbGlkYXRlQWNjZXNzS2V5UGFyYW1zIHtcbiAgYWNjb3VudElkOiBzdHJpbmc7XG4gIHB1YmxpY0tleTogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgTGVkZ2VyU3RhdGUge1xuICBjbGllbnQ6IExlZGdlckNsaWVudDtcbiAgYWNjb3VudHM6IEFycmF5PExlZGdlckFjY291bnQ+O1xuICBzdWJzY3JpcHRpb25zOiBBcnJheTxTdWJzY3JpcHRpb24+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIExlZGdlclBhcmFtcyB7XG4gIGljb25Vcmw/OiBzdHJpbmc7XG4gIGRlcHJlY2F0ZWQ/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgU1RPUkFHRV9BQ0NPVU5UUyA9IFwiYWNjb3VudHNcIjtcblxuY29uc3Qgc2V0dXBMZWRnZXJTdGF0ZSA9IGFzeW5jIChcbiAgc3RvcmFnZTogSnNvblN0b3JhZ2VTZXJ2aWNlXG4pOiBQcm9taXNlPExlZGdlclN0YXRlPiA9PiB7XG4gIGNvbnN0IGFjY291bnRzID0gYXdhaXQgc3RvcmFnZS5nZXRJdGVtPEFycmF5PExlZGdlckFjY291bnQ+PihcbiAgICBTVE9SQUdFX0FDQ09VTlRTXG4gICk7XG5cbiAgcmV0dXJuIHtcbiAgICBjbGllbnQ6IG5ldyBMZWRnZXJDbGllbnQoKSxcbiAgICBzdWJzY3JpcHRpb25zOiBbXSxcbiAgICBhY2NvdW50czogYWNjb3VudHMgfHwgW10sXG4gIH07XG59O1xuXG5jb25zdCBMZWRnZXI6IFdhbGxldEJlaGF2aW91ckZhY3Rvcnk8SGFyZHdhcmVXYWxsZXQ+ID0gYXN5bmMgKHtcbiAgb3B0aW9ucyxcbiAgc3RvcmUsXG4gIHByb3ZpZGVyLFxuICBsb2dnZXIsXG4gIHN0b3JhZ2UsXG4gIG1ldGFkYXRhLFxufSkgPT4ge1xuICBjb25zdCBfc3RhdGUgPSBhd2FpdCBzZXR1cExlZGdlclN0YXRlKHN0b3JhZ2UpO1xuXG4gIGNvbnN0IHNpZ25lcjogU2lnbmVyID0ge1xuICAgIGNyZWF0ZUtleTogKCkgPT4ge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH0sXG4gICAgZ2V0UHVibGljS2V5OiBhc3luYyAoYWNjb3VudElkKSA9PiB7XG4gICAgICBjb25zdCBhY2NvdW50ID0gX3N0YXRlLmFjY291bnRzLmZpbmQoKGEpID0+IGEuYWNjb3VudElkID09PSBhY2NvdW50SWQpO1xuXG4gICAgICBpZiAoIWFjY291bnQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZpbmQgcHVibGljIGtleSBmb3IgYWNjb3VudFwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHV0aWxzLlB1YmxpY0tleS5mcm9tKGFjY291bnQucHVibGljS2V5KTtcbiAgICB9LFxuICAgIHNpZ25NZXNzYWdlOiBhc3luYyAobWVzc2FnZSwgYWNjb3VudElkKSA9PiB7XG4gICAgICBjb25zdCBhY2NvdW50ID0gX3N0YXRlLmFjY291bnRzLmZpbmQoKGEpID0+IGEuYWNjb3VudElkID09PSBhY2NvdW50SWQpO1xuXG4gICAgICBpZiAoIWFjY291bnQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZpbmQgYWNjb3VudCBmb3Igc2lnbmluZ1wiKTtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgX3N0YXRlLmNsaWVudC5zaWduKHtcbiAgICAgICAgZGF0YTogbWVzc2FnZSxcbiAgICAgICAgZGVyaXZhdGlvblBhdGg6IGFjY291bnQuZGVyaXZhdGlvblBhdGgsXG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc2lnbmF0dXJlLFxuICAgICAgICBwdWJsaWNLZXk6IHV0aWxzLlB1YmxpY0tleS5mcm9tKGFjY291bnQucHVibGljS2V5KSxcbiAgICAgIH07XG4gICAgfSxcbiAgfTtcblxuICBjb25zdCBnZXRBY2NvdW50cyA9ICgpOiBBcnJheTxBY2NvdW50PiA9PiB7XG4gICAgcmV0dXJuIF9zdGF0ZS5hY2NvdW50cy5tYXAoKHgpID0+ICh7XG4gICAgICBhY2NvdW50SWQ6IHguYWNjb3VudElkLFxuICAgIH0pKTtcbiAgfTtcblxuICBjb25zdCBjbGVhbnVwID0gKCkgPT4ge1xuICAgIF9zdGF0ZS5zdWJzY3JpcHRpb25zLmZvckVhY2goKHN1YnNjcmlwdGlvbikgPT4gc3Vic2NyaXB0aW9uLnJlbW92ZSgpKTtcblxuICAgIF9zdGF0ZS5zdWJzY3JpcHRpb25zID0gW107XG4gICAgX3N0YXRlLmFjY291bnRzID0gW107XG5cbiAgICBzdG9yYWdlLnJlbW92ZUl0ZW0oU1RPUkFHRV9BQ0NPVU5UUyk7XG4gIH07XG5cbiAgY29uc3Qgc2lnbk91dCA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoX3N0YXRlLmNsaWVudC5pc0Nvbm5lY3RlZCgpKSB7XG4gICAgICBhd2FpdCBfc3RhdGUuY2xpZW50LmRpc2Nvbm5lY3QoKS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGxvZ2dlci5sb2coXCJGYWlsZWQgdG8gZGlzY29ubmVjdCBkZXZpY2VcIik7XG4gICAgICAgIGxvZ2dlci5lcnJvcihlcnIpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY2xlYW51cCgpO1xuICB9O1xuXG4gIGNvbnN0IGNvbm5lY3RMZWRnZXJEZXZpY2UgPSBhc3luYyAoKSA9PiB7XG4gICAgaWYgKF9zdGF0ZS5jbGllbnQuaXNDb25uZWN0ZWQoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGF3YWl0IF9zdGF0ZS5jbGllbnQuY29ubmVjdCgpO1xuICB9O1xuXG4gIGNvbnN0IHZhbGlkYXRlQWNjZXNzS2V5ID0gKHtcbiAgICBhY2NvdW50SWQsXG4gICAgcHVibGljS2V5LFxuICB9OiBWYWxpZGF0ZUFjY2Vzc0tleVBhcmFtcykgPT4ge1xuICAgIGxvZ2dlci5sb2coXCJ2YWxpZGF0ZUFjY2Vzc0tleVwiLCB7IGFjY291bnRJZCwgcHVibGljS2V5IH0pO1xuXG4gICAgcmV0dXJuIHByb3ZpZGVyLnZpZXdBY2Nlc3NLZXkoeyBhY2NvdW50SWQsIHB1YmxpY0tleSB9KS50aGVuKFxuICAgICAgKGFjY2Vzc0tleSkgPT4ge1xuICAgICAgICBsb2dnZXIubG9nKFwidmFsaWRhdGVBY2Nlc3NLZXk6YWNjZXNzS2V5XCIsIHsgYWNjZXNzS2V5IH0pO1xuXG4gICAgICAgIGlmIChhY2Nlc3NLZXkucGVybWlzc2lvbiAhPT0gXCJGdWxsQWNjZXNzXCIpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQdWJsaWMga2V5IHJlcXVpcmVzICdGdWxsQWNjZXNzJyBwZXJtaXNzaW9uXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGFjY2Vzc0tleTtcbiAgICAgIH0sXG4gICAgICAoZXJyKSA9PiB7XG4gICAgICAgIGlmIChlcnIgaW5zdGFuY2VvZiBUeXBlZEVycm9yICYmIGVyci50eXBlID09PSBcIkFjY2Vzc0tleURvZXNOb3RFeGlzdFwiKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgICB9XG4gICAgKTtcbiAgfTtcblxuICBjb25zdCB0cmFuc2Zvcm1UcmFuc2FjdGlvbnMgPSAoXG4gICAgdHJhbnNhY3Rpb25zOiBBcnJheTxPcHRpb25hbDxUcmFuc2FjdGlvbiwgXCJzaWduZXJJZFwiIHwgXCJyZWNlaXZlcklkXCI+PlxuICApOiBBcnJheTxUcmFuc2FjdGlvbj4gPT4ge1xuICAgIGNvbnN0IHsgY29udHJhY3QgfSA9IHN0b3JlLmdldFN0YXRlKCk7XG5cbiAgICBpZiAoIWNvbnRyYWN0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJXYWxsZXQgbm90IHNpZ25lZCBpblwiKTtcbiAgICB9XG5cbiAgICBjb25zdCBhY2NvdW50ID0gZ2V0QWN0aXZlQWNjb3VudChzdG9yZS5nZXRTdGF0ZSgpKTtcblxuICAgIGlmICghYWNjb3VudCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gYWN0aXZlIGFjY291bnRcIik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYW5zYWN0aW9ucy5tYXAoKHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzaWduZXJJZDogdHJhbnNhY3Rpb24uc2lnbmVySWQgfHwgYWNjb3VudC5hY2NvdW50SWQsXG4gICAgICAgIHJlY2VpdmVySWQ6IHRyYW5zYWN0aW9uLnJlY2VpdmVySWQgfHwgY29udHJhY3QuY29udHJhY3RJZCxcbiAgICAgICAgYWN0aW9uczogdHJhbnNhY3Rpb24uYWN0aW9ucyxcbiAgICAgIH07XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBhc3luYyBzaWduSW4oeyBhY2NvdW50cyB9KSB7XG4gICAgICBjb25zdCBleGlzdGluZ0FjY291bnRzID0gZ2V0QWNjb3VudHMoKTtcblxuICAgICAgaWYgKGV4aXN0aW5nQWNjb3VudHMubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBleGlzdGluZ0FjY291bnRzO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBsZWRnZXJBY2NvdW50czogQXJyYXk8TGVkZ2VyQWNjb3VudD4gPSBbXTtcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhY2NvdW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB7IGRlcml2YXRpb25QYXRoLCBhY2NvdW50SWQsIHB1YmxpY0tleSB9ID0gYWNjb3VudHNbaV07XG5cbiAgICAgICAgY29uc3QgYWNjZXNzS2V5ID0gYXdhaXQgdmFsaWRhdGVBY2Nlc3NLZXkoeyBhY2NvdW50SWQsIHB1YmxpY0tleSB9KTtcblxuICAgICAgICBpZiAoIWFjY2Vzc0tleSkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgIGBQdWJsaWMga2V5IGlzIG5vdCByZWdpc3RlcmVkIHdpdGggdGhlIGFjY291bnQgJyR7YWNjb3VudElkfScuYFxuICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBsZWRnZXJBY2NvdW50cy5wdXNoKHtcbiAgICAgICAgICBhY2NvdW50SWQsXG4gICAgICAgICAgZGVyaXZhdGlvblBhdGgsXG4gICAgICAgICAgcHVibGljS2V5LFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgYXdhaXQgc3RvcmFnZS5zZXRJdGVtKFNUT1JBR0VfQUNDT1VOVFMsIGxlZGdlckFjY291bnRzKTtcbiAgICAgIF9zdGF0ZS5hY2NvdW50cyA9IGxlZGdlckFjY291bnRzO1xuXG4gICAgICByZXR1cm4gZ2V0QWNjb3VudHMoKTtcbiAgICB9LFxuXG4gICAgc2lnbk91dCxcblxuICAgIGFzeW5jIGdldEFjY291bnRzKCkge1xuICAgICAgcmV0dXJuIGdldEFjY291bnRzKCk7XG4gICAgfSxcblxuICAgIGFzeW5jIHZlcmlmeU93bmVyKHsgbWVzc2FnZSB9KSB7XG4gICAgICBsb2dnZXIubG9nKFwiTGVkZ2VyOnZlcmlmeU93bmVyXCIsIHsgbWVzc2FnZSB9KTtcblxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBNZXRob2Qgbm90IHN1cHBvcnRlZCBieSAke21ldGFkYXRhLm5hbWV9YCk7XG4gICAgfSxcblxuICAgIGFzeW5jIHNpZ25BbmRTZW5kVHJhbnNhY3Rpb24oeyBzaWduZXJJZCwgcmVjZWl2ZXJJZCwgYWN0aW9ucyB9KSB7XG4gICAgICBsb2dnZXIubG9nKFwic2lnbkFuZFNlbmRUcmFuc2FjdGlvblwiLCB7IHNpZ25lcklkLCByZWNlaXZlcklkLCBhY3Rpb25zIH0pO1xuXG4gICAgICBpZiAoIV9zdGF0ZS5hY2NvdW50cy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV2FsbGV0IG5vdCBzaWduZWQgaW5cIik7XG4gICAgICB9XG5cbiAgICAgIC8vIE5vdGU6IENvbm5lY3Rpb24gbXVzdCBiZSB0cmlnZ2VyZWQgYnkgdXNlciBpbnRlcmFjdGlvbi5cbiAgICAgIGF3YWl0IGNvbm5lY3RMZWRnZXJEZXZpY2UoKTtcblxuICAgICAgY29uc3Qgc2lnbmVkVHJhbnNhY3Rpb25zID0gYXdhaXQgc2lnblRyYW5zYWN0aW9ucyhcbiAgICAgICAgdHJhbnNmb3JtVHJhbnNhY3Rpb25zKFt7IHNpZ25lcklkLCByZWNlaXZlcklkLCBhY3Rpb25zIH1dKSxcbiAgICAgICAgc2lnbmVyLFxuICAgICAgICBvcHRpb25zLm5ldHdvcmtcbiAgICAgICk7XG5cbiAgICAgIHJldHVybiBwcm92aWRlci5zZW5kVHJhbnNhY3Rpb24oc2lnbmVkVHJhbnNhY3Rpb25zWzBdKTtcbiAgICB9LFxuXG4gICAgYXN5bmMgc2lnbkFuZFNlbmRUcmFuc2FjdGlvbnMoeyB0cmFuc2FjdGlvbnMgfSkge1xuICAgICAgbG9nZ2VyLmxvZyhcInNpZ25BbmRTZW5kVHJhbnNhY3Rpb25zXCIsIHsgdHJhbnNhY3Rpb25zIH0pO1xuXG4gICAgICBpZiAoIV9zdGF0ZS5hY2NvdW50cy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV2FsbGV0IG5vdCBzaWduZWQgaW5cIik7XG4gICAgICB9XG5cbiAgICAgIC8vIE5vdGU6IENvbm5lY3Rpb24gbXVzdCBiZSB0cmlnZ2VyZWQgYnkgdXNlciBpbnRlcmFjdGlvbi5cbiAgICAgIGF3YWl0IGNvbm5lY3RMZWRnZXJEZXZpY2UoKTtcblxuICAgICAgY29uc3Qgc2lnbmVkVHJhbnNhY3Rpb25zID0gYXdhaXQgc2lnblRyYW5zYWN0aW9ucyhcbiAgICAgICAgdHJhbnNmb3JtVHJhbnNhY3Rpb25zKHRyYW5zYWN0aW9ucyksXG4gICAgICAgIHNpZ25lcixcbiAgICAgICAgb3B0aW9ucy5uZXR3b3JrXG4gICAgICApO1xuXG4gICAgICBjb25zdCByZXN1bHRzOiBBcnJheTxGaW5hbEV4ZWN1dGlvbk91dGNvbWU+ID0gW107XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2lnbmVkVHJhbnNhY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHJlc3VsdHMucHVzaChhd2FpdCBwcm92aWRlci5zZW5kVHJhbnNhY3Rpb24oc2lnbmVkVHJhbnNhY3Rpb25zW2ldKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH0sXG4gICAgYXN5bmMgZ2V0UHVibGljS2V5KGRlcml2YXRpb25QYXRoOiBzdHJpbmcpIHtcbiAgICAgIGF3YWl0IGNvbm5lY3RMZWRnZXJEZXZpY2UoKTtcblxuICAgICAgcmV0dXJuIGF3YWl0IF9zdGF0ZS5jbGllbnQuZ2V0UHVibGljS2V5KHsgZGVyaXZhdGlvblBhdGggfSk7XG4gICAgfSxcbiAgfTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXR1cExlZGdlcih7XG4gIGljb25VcmwgPSBcIi4vYXNzZXRzL2xlZGdlci1pY29uLnBuZ1wiLFxuICBkZXByZWNhdGVkID0gZmFsc2UsXG59OiBMZWRnZXJQYXJhbXMgPSB7fSk6IFdhbGxldE1vZHVsZUZhY3Rvcnk8SGFyZHdhcmVXYWxsZXQ+IHtcbiAgcmV0dXJuIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBtb2JpbGUgPSBpc01vYmlsZSgpO1xuICAgIGNvbnN0IHN1cHBvcnRlZCA9IGlzTGVkZ2VyU3VwcG9ydGVkKCk7XG5cbiAgICBpZiAobW9iaWxlKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IFwibGVkZ2VyXCIsXG4gICAgICB0eXBlOiBcImhhcmR3YXJlXCIsXG4gICAgICBtZXRhZGF0YToge1xuICAgICAgICBuYW1lOiBcIkxlZGdlclwiLFxuICAgICAgICBkZXNjcmlwdGlvbjogbnVsbCxcbiAgICAgICAgaWNvblVybCxcbiAgICAgICAgZGVwcmVjYXRlZCxcbiAgICAgICAgYXZhaWxhYmxlOiBzdXBwb3J0ZWQsXG4gICAgICB9LFxuICAgICAgaW5pdDogTGVkZ2VyLFxuICAgIH07XG4gIH07XG59XG4iXSwibmFtZXMiOlsiaXNNb2JpbGUiLCJUeXBlZEVycm9yIiwic2lnblRyYW5zYWN0aW9ucyIsImdldEFjdGl2ZUFjY291bnQiLCJpc0xlZGdlclN1cHBvcnRlZCIsIkxlZGdlckNsaWVudCIsInV0aWxzIiwiU1RPUkFHRV9BQ0NPVU5UUyIsInNldHVwTGVkZ2VyU3RhdGUiLCJzdG9yYWdlIiwiYWNjb3VudHMiLCJnZXRJdGVtIiwiY2xpZW50Iiwic3Vic2NyaXB0aW9ucyIsIkxlZGdlciIsIm9wdGlvbnMiLCJzdG9yZSIsInByb3ZpZGVyIiwibG9nZ2VyIiwibWV0YWRhdGEiLCJfc3RhdGUiLCJzaWduZXIiLCJjcmVhdGVLZXkiLCJFcnJvciIsImdldFB1YmxpY0tleSIsImFjY291bnRJZCIsImFjY291bnQiLCJmaW5kIiwiYSIsIlB1YmxpY0tleSIsImZyb20iLCJwdWJsaWNLZXkiLCJzaWduTWVzc2FnZSIsIm1lc3NhZ2UiLCJzaWduYXR1cmUiLCJzaWduIiwiZGF0YSIsImRlcml2YXRpb25QYXRoIiwiZ2V0QWNjb3VudHMiLCJtYXAiLCJ4IiwiY2xlYW51cCIsImZvckVhY2giLCJzdWJzY3JpcHRpb24iLCJyZW1vdmUiLCJyZW1vdmVJdGVtIiwic2lnbk91dCIsImlzQ29ubmVjdGVkIiwiZGlzY29ubmVjdCIsImNhdGNoIiwiZXJyIiwibG9nIiwiZXJyb3IiLCJjb25uZWN0TGVkZ2VyRGV2aWNlIiwiY29ubmVjdCIsInZhbGlkYXRlQWNjZXNzS2V5Iiwidmlld0FjY2Vzc0tleSIsInRoZW4iLCJhY2Nlc3NLZXkiLCJwZXJtaXNzaW9uIiwidHlwZSIsInRyYW5zZm9ybVRyYW5zYWN0aW9ucyIsInRyYW5zYWN0aW9ucyIsImNvbnRyYWN0IiwiZ2V0U3RhdGUiLCJ0cmFuc2FjdGlvbiIsInNpZ25lcklkIiwicmVjZWl2ZXJJZCIsImNvbnRyYWN0SWQiLCJhY3Rpb25zIiwic2lnbkluIiwiZXhpc3RpbmdBY2NvdW50cyIsImxlbmd0aCIsImxlZGdlckFjY291bnRzIiwiaSIsInB1c2giLCJzZXRJdGVtIiwidmVyaWZ5T3duZXIiLCJuYW1lIiwic2lnbkFuZFNlbmRUcmFuc2FjdGlvbiIsInNpZ25lZFRyYW5zYWN0aW9ucyIsIm5ldHdvcmsiLCJzZW5kVHJhbnNhY3Rpb24iLCJzaWduQW5kU2VuZFRyYW5zYWN0aW9ucyIsInJlc3VsdHMiLCJzZXR1cExlZGdlciIsImljb25VcmwiLCJkZXByZWNhdGVkIiwibW9iaWxlIiwic3VwcG9ydGVkIiwiaWQiLCJkZXNjcmlwdGlvbiIsImF2YWlsYWJsZSIsImluaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../packages/ledger/src/lib/ledger.ts\n");

/***/ }),

/***/ "../../packages/math-wallet/src/index.ts":
/*!***********************************************!*\
  !*** ../../packages/math-wallet/src/index.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupMathWallet": () => (/* reexport safe */ _lib_math_wallet__WEBPACK_IMPORTED_MODULE_0__.setupMathWallet)
/* harmony export */ });
/* harmony import */ var _lib_math_wallet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/math-wallet */ "../../packages/math-wallet/src/lib/math-wallet.ts");


/***/ }),

/***/ "../../packages/math-wallet/src/lib/math-wallet.ts":
/*!*********************************************************!*\
  !*** ../../packages/math-wallet/src/lib/math-wallet.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupMathWallet\": () => (/* binding */ setupMathWallet)\n/* harmony export */ });\n/* harmony import */ var is_mobile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-mobile */ \"is-mobile\");\n/* harmony import */ var is_mobile__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(is_mobile__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @near-wallet-selector/core */ \"../../packages/core/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @near-wallet-selector/wallet-utils */ \"../../packages/wallet-utils/src/index.ts\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nconst isInstalled = () => {\n  return (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_1__.waitFor)(() => !!window.nearWalletApi).catch(() => false);\n};\n\nconst setupMathWalletState = () => {\n  const wallet = window.nearWalletApi;\n  return {\n    wallet\n  };\n};\n\nconst MathWallet = async ({\n  metadata,\n  options,\n  store,\n  provider,\n  logger\n}) => {\n  const _state = setupMathWalletState();\n\n  const getAccounts = () => {\n    const account = _state.wallet.signer.account;\n\n    if (!account) {\n      return [];\n    }\n\n    return [{\n      accountId: account.accountId\n    }];\n  };\n\n  const transformTransactions = transactions => {\n    const {\n      contract\n    } = store.getState();\n\n    if (!contract) {\n      throw new Error(\"Wallet not signed in\");\n    }\n\n    const account = (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_1__.getActiveAccount)(store.getState());\n\n    if (!account) {\n      throw new Error(\"No active account\");\n    }\n\n    return transactions.map(transaction => {\n      return {\n        signerId: transaction.signerId || account.accountId,\n        receiverId: transaction.receiverId || contract.contractId,\n        actions: transaction.actions\n      };\n    });\n  };\n\n  return {\n    async signIn({\n      contractId\n    }) {\n      const existingAccounts = getAccounts();\n\n      if (existingAccounts.length) {\n        return existingAccounts;\n      }\n\n      await _state.wallet.login({\n        contractId\n      });\n      return getAccounts();\n    },\n\n    async signOut() {\n      // Ignore if unsuccessful (returns false).\n      await _state.wallet.logout();\n    },\n\n    async getAccounts() {\n      return getAccounts();\n    },\n\n    async verifyOwner({\n      message\n    }) {\n      logger.log(\"MathWallet:verifyOwner\", {\n        message\n      });\n      const account = (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_1__.getActiveAccount)(store.getState());\n\n      if (!account) {\n        throw new Error(\"No active account\");\n      }\n\n      const accountId = account.accountId;\n      const pubKey = await _state.wallet.signer.getPublicKey(accountId);\n      const block = await provider.block({\n        finality: \"final\"\n      });\n      const data = {\n        accountId,\n        message,\n        blockId: block.header.hash,\n        publicKey: Buffer.from(pubKey.data).toString(\"base64\"),\n        keyType: pubKey.keyType\n      };\n      const encoded = JSON.stringify(data); // Note: Math Wallet currently hangs when calling signMessage.\n\n      throw new Error(`Method not supported by ${metadata.name}`);\n      const signed = await _state.wallet.signer.signMessage(new Uint8Array(Buffer.from(encoded)), accountId, options.network.networkId);\n      return _objectSpread(_objectSpread({}, data), {}, {\n        signature: Buffer.from(signed.signature).toString(\"base64\"),\n        keyType: signed.publicKey.keyType\n      });\n    },\n\n    async signAndSendTransaction({\n      signerId,\n      receiverId,\n      actions\n    }) {\n      logger.log(\"signAndSendTransaction\", {\n        signerId,\n        receiverId,\n        actions\n      });\n      const signedTransactions = await (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_2__.signTransactions)(transformTransactions([{\n        signerId,\n        receiverId,\n        actions\n      }]), _state.wallet.signer, options.network);\n      return provider.sendTransaction(signedTransactions[0]);\n    },\n\n    async signAndSendTransactions({\n      transactions\n    }) {\n      logger.log(\"signAndSendTransactions\", {\n        transactions\n      });\n      const signedTransactions = await (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_2__.signTransactions)(transformTransactions(transactions), _state.wallet.signer, options.network);\n      logger.log(\"signAndSendTransactions:signedTransactions\", signedTransactions);\n      const results = [];\n\n      for (let i = 0; i < signedTransactions.length; i++) {\n        results.push(await provider.sendTransaction(signedTransactions[i]));\n      }\n\n      return results;\n    }\n\n  };\n};\n\nconst setupMathWallet = ({\n  iconUrl = \"./assets/math-wallet-icon.png\",\n  deprecated = false\n} = {}) => {\n  return async () => {\n    const mobile = (0,is_mobile__WEBPACK_IMPORTED_MODULE_0__.isMobile)();\n    const installed = await isInstalled();\n\n    if (mobile) {\n      return null;\n    }\n\n    return {\n      id: \"math-wallet\",\n      type: \"injected\",\n      metadata: {\n        name: \"Math Wallet\",\n        description: null,\n        iconUrl,\n        downloadUrl: \"https://chrome.google.com/webstore/detail/math-wallet/afbcbjpbpfadlkmhmclhkeeodmamcflc\",\n        deprecated,\n        available: installed\n      },\n      init: MathWallet\n    };\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../packages/math-wallet/src/lib/math-wallet.ts\n");

/***/ }),

/***/ "../../packages/meteor-wallet/src/index.ts":
/*!*************************************************!*\
  !*** ../../packages/meteor-wallet/src/index.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupMeteorWallet": () => (/* reexport safe */ _lib_meteor_wallet__WEBPACK_IMPORTED_MODULE_0__.setupMeteorWallet)
/* harmony export */ });
/* harmony import */ var _lib_meteor_wallet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/meteor-wallet */ "../../packages/meteor-wallet/src/lib/meteor-wallet.ts");


/***/ }),

/***/ "../../packages/meteor-wallet/src/lib/meteor-wallet.ts":
/*!*************************************************************!*\
  !*** ../../packages/meteor-wallet/src/lib/meteor-wallet.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupMeteorWallet\": () => (/* binding */ setupMeteorWallet)\n/* harmony export */ });\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! near-api-js */ \"near-api-js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _meteorwallet_sdk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @meteorwallet/sdk */ \"@meteorwallet/sdk\");\n/* harmony import */ var _meteorwallet_sdk__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_meteorwallet_sdk__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @near-wallet-selector/wallet-utils */ \"../../packages/wallet-utils/src/index.ts\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nconst setupWalletState = async (params, network) => {\n  const keyStore = new near_api_js__WEBPACK_IMPORTED_MODULE_0__.keyStores.BrowserLocalStorageKeyStore(window.localStorage, \"_meteor_wallet\");\n  const near = await (0,near_api_js__WEBPACK_IMPORTED_MODULE_0__.connect)(_objectSpread(_objectSpread({\n    keyStore\n  }, network), {}, {\n    headers: {}\n  }));\n  const wallet = new _meteorwallet_sdk__WEBPACK_IMPORTED_MODULE_1__.MeteorWallet({\n    near,\n    appKeyPrefix: \"near_app\"\n  });\n  return {\n    wallet,\n    keyStore\n  };\n};\n\nconst createMeteorWalletInjected = async ({\n  metadata,\n  options,\n  logger,\n  store,\n  params\n}) => {\n  const _state = await setupWalletState(params, options.network);\n\n  const cleanup = () => {\n    _state.keyStore.clear();\n  };\n\n  const getAccounts = () => {\n    const accountId = _state.wallet.getAccountId();\n\n    if (!accountId) {\n      return [];\n    }\n\n    return [{\n      accountId\n    }];\n  };\n\n  const transformTransactions = async transactions => {\n    const account = _state.wallet.account();\n\n    const {\n      networkId,\n      signer,\n      provider\n    } = account.connection;\n    const localKey = await signer.getPublicKey(account.accountId, networkId);\n\n    for (const trx of transactions) {\n      if (trx.signerId !== account.accountId) {\n        throw new Error(`Transaction had a signerId which didn't match the currently logged in account`);\n      }\n    }\n\n    return Promise.all(transactions.map(async (transaction, index) => {\n      const actions = transaction.actions.map(action => (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_2__.createAction)(action));\n      const accessKey = await account.accessKeyForTransaction(transaction.receiverId, actions, localKey);\n\n      if (!accessKey) {\n        throw new Error(`Failed to find matching key for transaction sent to ${transaction.receiverId}`);\n      }\n\n      const block = await provider.block({\n        finality: \"final\"\n      });\n      return near_api_js__WEBPACK_IMPORTED_MODULE_0__.transactions.createTransaction(account.accountId, near_api_js__WEBPACK_IMPORTED_MODULE_0__.utils.PublicKey.from(accessKey.public_key), transaction.receiverId, accessKey.access_key.nonce + index + 1, actions, near_api_js__WEBPACK_IMPORTED_MODULE_0__.utils.serialize.base_decode(block.header.hash));\n    }));\n  };\n\n  return {\n    async signIn({\n      contractId,\n      methodNames = []\n    }) {\n      logger.log(\"MeteorWallet:signIn\", {\n        contractId,\n        methodNames\n      });\n\n      if (methodNames.length) {\n        await _state.wallet.requestSignIn({\n          methods: methodNames,\n          type: _meteorwallet_sdk__WEBPACK_IMPORTED_MODULE_1__.EMeteorWalletSignInType.SELECTED_METHODS,\n          contract_id: contractId\n        });\n      } else {\n        await _state.wallet.requestSignIn({\n          type: _meteorwallet_sdk__WEBPACK_IMPORTED_MODULE_1__.EMeteorWalletSignInType.ALL_METHODS,\n          contract_id: contractId\n        });\n      }\n\n      return getAccounts();\n    },\n\n    async signOut() {\n      if (_state.wallet.isSignedIn()) {\n        await _state.wallet.signOut();\n      }\n\n      cleanup();\n    },\n\n    async isSignedIn() {\n      if (!_state.wallet) {\n        return false;\n      }\n\n      return _state.wallet.isSignedIn();\n    },\n\n    async getAccounts() {\n      return getAccounts();\n    },\n\n    async verifyOwner({\n      message\n    }) {\n      logger.log(\"MeteorWallet:verifyOwner\", {\n        message\n      });\n      throw new Error(`Method not supported by ${metadata.name}`);\n    },\n\n    async signAndSendTransaction({\n      signerId,\n      receiverId,\n      actions\n    }) {\n      logger.log(\"MeteorWallet:signAndSendTransaction\", {\n        signerId,\n        receiverId,\n        actions\n      });\n      const {\n        contract\n      } = store.getState();\n\n      if (!_state.wallet.isSignedIn()) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      if (!receiverId && !contract) {\n        throw new Error(\"No receiver found to send the transaction to\");\n      }\n\n      const account = _state.wallet.account();\n\n      return account[\"signAndSendTransaction_direct\"]({\n        receiverId: receiverId ?? contract.contractId,\n        actions: actions.map(action => (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_2__.createAction)(action))\n      });\n    },\n\n    async signAndSendTransactions({\n      transactions\n    }) {\n      logger.log(\"MeteorWallet:signAndSendTransactions\", {\n        transactions\n      });\n\n      if (!_state.wallet.isSignedIn()) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      return _state.wallet.requestSignTransactions({\n        transactions: await transformTransactions(transactions)\n      });\n    }\n\n  };\n};\n\nfunction setupMeteorWallet({\n  iconUrl = \"./assets/meteor-icon.png\",\n  deprecated = false\n} = {}) {\n  return async () => {\n    return {\n      id: \"meteor-wallet\",\n      type: \"injected\",\n      metadata: {\n        available: true,\n        name: \"Meteor Wallet\",\n        description: null,\n        iconUrl,\n        deprecated,\n        downloadUrl: \"https://wallet.meteorwallet.app\"\n      },\n      init: options => {\n        return createMeteorWalletInjected(_objectSpread(_objectSpread({}, options), {}, {\n          params: {\n            iconUrl\n          }\n        }));\n      }\n    };\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../packages/meteor-wallet/src/lib/meteor-wallet.ts\n");

/***/ }),

/***/ "../../packages/my-near-wallet/src/index.ts":
/*!**************************************************!*\
  !*** ../../packages/my-near-wallet/src/index.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupMyNearWallet": () => (/* reexport safe */ _lib_my_near_wallet__WEBPACK_IMPORTED_MODULE_0__.setupMyNearWallet)
/* harmony export */ });
/* harmony import */ var _lib_my_near_wallet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/my-near-wallet */ "../../packages/my-near-wallet/src/lib/my-near-wallet.ts");


/***/ }),

/***/ "../../packages/my-near-wallet/src/lib/my-near-wallet.ts":
/*!***************************************************************!*\
  !*** ../../packages/my-near-wallet/src/lib/my-near-wallet.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupMyNearWallet\": () => (/* binding */ setupMyNearWallet)\n/* harmony export */ });\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! near-api-js */ \"near-api-js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @near-wallet-selector/wallet-utils */ \"../../packages/wallet-utils/src/index.ts\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nconst resolveWalletUrl = (network, walletUrl) => {\n  if (walletUrl) {\n    return walletUrl;\n  }\n\n  switch (network.networkId) {\n    case \"mainnet\":\n      return \"https://app.mynearwallet.com\";\n\n    case \"testnet\":\n      return \"https://testnet.mynearwallet.com\";\n\n    default:\n      throw new Error(\"Invalid wallet url\");\n  }\n};\n\nconst setupWalletState = async (params, network) => {\n  const keyStore = new near_api_js__WEBPACK_IMPORTED_MODULE_0__.keyStores.BrowserLocalStorageKeyStore();\n  const near = await (0,near_api_js__WEBPACK_IMPORTED_MODULE_0__.connect)(_objectSpread(_objectSpread({\n    keyStore,\n    walletUrl: params.walletUrl\n  }, network), {}, {\n    headers: {}\n  }));\n  const wallet = new near_api_js__WEBPACK_IMPORTED_MODULE_0__.WalletConnection(near, \"near_app\"); // Cleanup up any pending keys (cancelled logins).\n\n  if (!wallet.isSignedIn()) {\n    await keyStore.clear();\n  }\n\n  return {\n    wallet,\n    keyStore\n  };\n};\n\nconst MyNearWallet = async ({\n  metadata,\n  options,\n  store,\n  params,\n  logger\n}) => {\n  const _state = await setupWalletState(params, options.network);\n\n  const cleanup = () => {\n    _state.keyStore.clear();\n  };\n\n  const getAccounts = () => {\n    const accountId = _state.wallet.getAccountId();\n\n    if (!accountId) {\n      return [];\n    }\n\n    return [{\n      accountId\n    }];\n  };\n\n  const transformTransactions = async transactions => {\n    const account = _state.wallet.account();\n\n    const {\n      networkId,\n      signer,\n      provider\n    } = account.connection;\n    const localKey = await signer.getPublicKey(account.accountId, networkId);\n    return Promise.all(transactions.map(async (transaction, index) => {\n      const actions = transaction.actions.map(action => (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_1__.createAction)(action));\n      const accessKey = await account.accessKeyForTransaction(transaction.receiverId, actions, localKey);\n\n      if (!accessKey) {\n        throw new Error(`Failed to find matching key for transaction sent to ${transaction.receiverId}`);\n      }\n\n      const block = await provider.block({\n        finality: \"final\"\n      });\n      return near_api_js__WEBPACK_IMPORTED_MODULE_0__.transactions.createTransaction(account.accountId, near_api_js__WEBPACK_IMPORTED_MODULE_0__.utils.PublicKey.from(accessKey.public_key), transaction.receiverId, accessKey.access_key.nonce + index + 1, actions, near_api_js__WEBPACK_IMPORTED_MODULE_0__.utils.serialize.base_decode(block.header.hash));\n    }));\n  };\n\n  return {\n    async signIn({\n      contractId,\n      methodNames\n    }) {\n      const existingAccounts = getAccounts();\n\n      if (existingAccounts.length) {\n        return existingAccounts;\n      }\n\n      await _state.wallet.requestSignIn({\n        contractId,\n        methodNames\n      });\n      return getAccounts();\n    },\n\n    async signOut() {\n      if (_state.wallet.isSignedIn()) {\n        _state.wallet.signOut();\n      }\n\n      cleanup();\n    },\n\n    async getAccounts() {\n      return getAccounts();\n    },\n\n    async verifyOwner({\n      message,\n      callbackUrl,\n      meta\n    }) {\n      logger.log(\"verifyOwner\", {\n        message\n      });\n\n      const account = _state.wallet.account();\n\n      if (!account) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      const locationUrl =  false ? 0 : \"\";\n      const url = callbackUrl || locationUrl;\n\n      if (!url) {\n        throw new Error(`The callbackUrl is missing for ${metadata.name}`);\n      }\n\n      const encodedUrl = encodeURIComponent(url);\n      const extraMeta = meta ? `&meta=${meta}` : \"\";\n      window.location.replace(`${params.walletUrl}/verify-owner?message=${message}&callbackUrl=${encodedUrl}${extraMeta}`);\n      return;\n    },\n\n    async signAndSendTransaction({\n      signerId,\n      receiverId,\n      actions,\n      callbackUrl\n    }) {\n      logger.log(\"signAndSendTransaction\", {\n        signerId,\n        receiverId,\n        actions,\n        callbackUrl\n      });\n      const {\n        contract\n      } = store.getState();\n\n      if (!_state.wallet.isSignedIn() || !contract) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      const account = _state.wallet.account();\n\n      return account[\"signAndSendTransaction\"]({\n        receiverId: receiverId || contract.contractId,\n        actions: actions.map(action => (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_1__.createAction)(action)),\n        walletCallbackUrl: callbackUrl\n      });\n    },\n\n    async signAndSendTransactions({\n      transactions,\n      callbackUrl\n    }) {\n      logger.log(\"signAndSendTransactions\", {\n        transactions,\n        callbackUrl\n      });\n\n      if (!_state.wallet.isSignedIn()) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      return _state.wallet.requestSignTransactions({\n        transactions: await transformTransactions(transactions),\n        callbackUrl\n      });\n    }\n\n  };\n};\n\nfunction setupMyNearWallet({\n  walletUrl,\n  iconUrl = \"./assets/my-near-wallet-icon.png\",\n  deprecated = false\n} = {}) {\n  return async () => {\n    return {\n      id: \"my-near-wallet\",\n      type: \"browser\",\n      metadata: {\n        name: \"MyNearWallet\",\n        description: null,\n        iconUrl,\n        deprecated,\n        available: true\n      },\n      init: options => {\n        return MyNearWallet(_objectSpread(_objectSpread({}, options), {}, {\n          params: {\n            walletUrl: resolveWalletUrl(options.options.network, walletUrl)\n          }\n        }));\n      }\n    };\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../packages/my-near-wallet/src/lib/my-near-wallet.ts\n");

/***/ }),

/***/ "../../packages/near-wallet/src/index.ts":
/*!***********************************************!*\
  !*** ../../packages/near-wallet/src/index.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupNearWallet": () => (/* reexport safe */ _lib_near_wallet__WEBPACK_IMPORTED_MODULE_0__.setupNearWallet)
/* harmony export */ });
/* harmony import */ var _lib_near_wallet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/near-wallet */ "../../packages/near-wallet/src/lib/near-wallet.ts");


/***/ }),

/***/ "../../packages/near-wallet/src/lib/near-wallet.ts":
/*!*********************************************************!*\
  !*** ../../packages/near-wallet/src/lib/near-wallet.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupNearWallet\": () => (/* binding */ setupNearWallet)\n/* harmony export */ });\n/* harmony import */ var _near_wallet_selector_my_near_wallet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @near-wallet-selector/my-near-wallet */ \"../../packages/my-near-wallet/src/index.ts\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nconst resolveWalletUrl = (network, walletUrl) => {\n  if (walletUrl) {\n    return walletUrl;\n  }\n\n  switch (network.networkId) {\n    case \"mainnet\":\n      return \"https://wallet.near.org\";\n\n    case \"testnet\":\n      return \"https://wallet.testnet.near.org\";\n\n    default:\n      throw new Error(\"Invalid wallet url\");\n  }\n};\n\nfunction setupNearWallet({\n  walletUrl,\n  iconUrl = \"./assets/near-wallet-icon.png\",\n  deprecated = false\n} = {}) {\n  return async options => {\n    const wallet = await (0,_near_wallet_selector_my_near_wallet__WEBPACK_IMPORTED_MODULE_0__.setupMyNearWallet)({\n      walletUrl: resolveWalletUrl(options.options.network, walletUrl),\n      iconUrl\n    })(options);\n\n    if (!wallet) {\n      return null;\n    }\n\n    return _objectSpread(_objectSpread({}, wallet), {}, {\n      id: \"near-wallet\",\n      metadata: _objectSpread(_objectSpread({}, wallet.metadata), {}, {\n        name: \"NEAR Wallet\",\n        description: null,\n        iconUrl,\n        deprecated,\n        available: true\n      })\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvbmVhci13YWxsZXQvc3JjL2xpYi9uZWFyLXdhbGxldC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUtBOztBQU9BLE1BQU1DLGdCQUFnQixHQUFHLENBQUNDLE9BQUQsRUFBbUJDLFNBQW5CLEtBQTBDO0VBQ2pFLElBQUlBLFNBQUosRUFBZTtJQUNiLE9BQU9BLFNBQVA7RUFDRDs7RUFFRCxRQUFRRCxPQUFPLENBQUNFLFNBQWhCO0lBQ0UsS0FBSyxTQUFMO01BQ0UsT0FBTyx5QkFBUDs7SUFDRixLQUFLLFNBQUw7TUFDRSxPQUFPLGlDQUFQOztJQUNGO01BQ0UsTUFBTSxJQUFJQyxLQUFKLENBQVUsb0JBQVYsQ0FBTjtFQU5KO0FBUUQsQ0FiRDs7QUFlTyxTQUFTQyxlQUFULENBQXlCO0VBQzlCSCxTQUQ4QjtFQUU5QkksT0FBTyxHQUFHLCtCQUZvQjtFQUc5QkMsVUFBVSxHQUFHO0FBSGlCLElBSVYsRUFKZixFQUl1RDtFQUM1RCxPQUFPLE1BQU9DLE9BQVAsSUFBbUI7SUFDeEIsTUFBTUMsTUFBTSxHQUFHLE1BQU1WLHVGQUFpQixDQUFDO01BQ3JDRyxTQUFTLEVBQUVGLGdCQUFnQixDQUFDUSxPQUFPLENBQUNBLE9BQVIsQ0FBZ0JQLE9BQWpCLEVBQTBCQyxTQUExQixDQURVO01BRXJDSTtJQUZxQyxDQUFELENBQWpCLENBR2xCRSxPQUhrQixDQUFyQjs7SUFLQSxJQUFJLENBQUNDLE1BQUwsRUFBYTtNQUNYLE9BQU8sSUFBUDtJQUNEOztJQUVELHVDQUNLQSxNQURMO01BRUVDLEVBQUUsRUFBRSxhQUZOO01BR0VDLFFBQVEsa0NBQ0hGLE1BQU0sQ0FBQ0UsUUFESjtRQUVOQyxJQUFJLEVBQUUsYUFGQTtRQUdOQyxXQUFXLEVBQUUsSUFIUDtRQUlOUCxPQUpNO1FBS05DLFVBTE07UUFNTk8sU0FBUyxFQUFFO01BTkw7SUFIVjtFQVlELENBdEJEO0FBdUJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL3BhY2thZ2VzL25lYXItd2FsbGV0L3NyYy9saWIvbmVhci13YWxsZXQudHM/ODdiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBXYWxsZXRNb2R1bGVGYWN0b3J5LFxuICBCcm93c2VyV2FsbGV0LFxuICBOZXR3b3JrLFxufSBmcm9tIFwiQG5lYXItd2FsbGV0LXNlbGVjdG9yL2NvcmVcIjtcbmltcG9ydCB7XG4gIHNldHVwTXlOZWFyV2FsbGV0LFxuICBNeU5lYXJXYWxsZXRQYXJhbXMsXG59IGZyb20gXCJAbmVhci13YWxsZXQtc2VsZWN0b3IvbXktbmVhci13YWxsZXRcIjtcblxuZXhwb3J0IHR5cGUgTmVhcldhbGxldFBhcmFtcyA9IE15TmVhcldhbGxldFBhcmFtcztcblxuY29uc3QgcmVzb2x2ZVdhbGxldFVybCA9IChuZXR3b3JrOiBOZXR3b3JrLCB3YWxsZXRVcmw/OiBzdHJpbmcpID0+IHtcbiAgaWYgKHdhbGxldFVybCkge1xuICAgIHJldHVybiB3YWxsZXRVcmw7XG4gIH1cblxuICBzd2l0Y2ggKG5ldHdvcmsubmV0d29ya0lkKSB7XG4gICAgY2FzZSBcIm1haW5uZXRcIjpcbiAgICAgIHJldHVybiBcImh0dHBzOi8vd2FsbGV0Lm5lYXIub3JnXCI7XG4gICAgY2FzZSBcInRlc3RuZXRcIjpcbiAgICAgIHJldHVybiBcImh0dHBzOi8vd2FsbGV0LnRlc3RuZXQubmVhci5vcmdcIjtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB3YWxsZXQgdXJsXCIpO1xuICB9XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gc2V0dXBOZWFyV2FsbGV0KHtcbiAgd2FsbGV0VXJsLFxuICBpY29uVXJsID0gXCIuL2Fzc2V0cy9uZWFyLXdhbGxldC1pY29uLnBuZ1wiLFxuICBkZXByZWNhdGVkID0gZmFsc2UsXG59OiBOZWFyV2FsbGV0UGFyYW1zID0ge30pOiBXYWxsZXRNb2R1bGVGYWN0b3J5PEJyb3dzZXJXYWxsZXQ+IHtcbiAgcmV0dXJuIGFzeW5jIChvcHRpb25zKSA9PiB7XG4gICAgY29uc3Qgd2FsbGV0ID0gYXdhaXQgc2V0dXBNeU5lYXJXYWxsZXQoe1xuICAgICAgd2FsbGV0VXJsOiByZXNvbHZlV2FsbGV0VXJsKG9wdGlvbnMub3B0aW9ucy5uZXR3b3JrLCB3YWxsZXRVcmwpLFxuICAgICAgaWNvblVybCxcbiAgICB9KShvcHRpb25zKTtcblxuICAgIGlmICghd2FsbGV0KSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgLi4ud2FsbGV0LFxuICAgICAgaWQ6IFwibmVhci13YWxsZXRcIixcbiAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgIC4uLndhbGxldC5tZXRhZGF0YSxcbiAgICAgICAgbmFtZTogXCJORUFSIFdhbGxldFwiLFxuICAgICAgICBkZXNjcmlwdGlvbjogbnVsbCxcbiAgICAgICAgaWNvblVybCxcbiAgICAgICAgZGVwcmVjYXRlZCxcbiAgICAgICAgYXZhaWxhYmxlOiB0cnVlLFxuICAgICAgfSxcbiAgICB9O1xuICB9O1xufVxuIl0sIm5hbWVzIjpbInNldHVwTXlOZWFyV2FsbGV0IiwicmVzb2x2ZVdhbGxldFVybCIsIm5ldHdvcmsiLCJ3YWxsZXRVcmwiLCJuZXR3b3JrSWQiLCJFcnJvciIsInNldHVwTmVhcldhbGxldCIsImljb25VcmwiLCJkZXByZWNhdGVkIiwib3B0aW9ucyIsIndhbGxldCIsImlkIiwibWV0YWRhdGEiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJhdmFpbGFibGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../packages/near-wallet/src/lib/near-wallet.ts\n");

/***/ }),

/***/ "../../packages/nearfi/src/index.ts":
/*!******************************************!*\
  !*** ../../packages/nearfi/src/index.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupNearFi": () => (/* reexport safe */ _lib_nearfi__WEBPACK_IMPORTED_MODULE_0__.setupNearFi)
/* harmony export */ });
/* harmony import */ var _lib_nearfi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/nearfi */ "../../packages/nearfi/src/lib/nearfi.ts");


/***/ }),

/***/ "../../packages/nearfi/src/lib/nearfi.ts":
/*!***********************************************!*\
  !*** ../../packages/nearfi/src/lib/nearfi.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupNearFi\": () => (/* binding */ setupNearFi)\n/* harmony export */ });\n/* harmony import */ var is_mobile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-mobile */ \"is-mobile\");\n/* harmony import */ var is_mobile__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(is_mobile__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @near-wallet-selector/core */ \"../../packages/core/src/index.ts\");\n\n\n\nconst isInstalled = () => {\n  return (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_1__.waitFor)(() => !!window.nearFiWallet?.isNearFi).catch(() => false);\n};\n\nconst setupNearFiState = () => {\n  const wallet = window.nearFiWallet;\n  return {\n    wallet\n  };\n};\n\nconst NearFi = async ({\n  options,\n  metadata,\n  store,\n  emitter,\n  logger\n}) => {\n  const _state = setupNearFiState();\n\n  const signOut = async () => {\n    if (!_state.wallet.isSignedIn()) {\n      return;\n    }\n\n    const res = await _state.wallet.signOut();\n\n    if (res === true) {\n      return;\n    }\n\n    const error = new Error(typeof res.error === \"string\" ? res.error : res.error.type); // Prevent signing out by throwing.\n\n    if (error.message === \"User reject\") {\n      throw error;\n    } // Continue signing out but log the issue.\n\n\n    logger.log(\"Failed to sign out\");\n    logger.error(error);\n  };\n\n  const setupEvents = () => {\n    _state.wallet.on(\"accountChanged\", async newAccountId => {\n      logger.log(\"onAccountChange\", newAccountId);\n      emitter.emit(\"signedOut\", null);\n    });\n\n    _state.wallet.on(\"rpcChanged\", async rpc => {\n      logger.log(\"onNetworkChange\", rpc);\n\n      if (options.network.networkId !== rpc.networkId) {\n        await signOut();\n        emitter.emit(\"signedOut\", null);\n        emitter.emit(\"networkChanged\", {\n          networkId: rpc.networkId\n        });\n      }\n    });\n  };\n\n  const getAccounts = async () => {\n    let accountId = _state.wallet.getAccountId();\n\n    if (!accountId) {\n      await _state.wallet.resolveSignInState();\n      accountId = _state.wallet.getAccountId();\n\n      if (!accountId) {\n        return [];\n      }\n    }\n\n    return [{\n      accountId\n    }];\n  };\n\n  const isValidActions = actions => {\n    return actions.every(x => x.type === \"FunctionCall\");\n  };\n\n  const transformActions = actions => {\n    const validActions = isValidActions(actions);\n\n    if (!validActions) {\n      throw new Error(`Only 'FunctionCall' actions types are supported by ${metadata.name}`);\n    }\n\n    return actions.map(x => x.params);\n  };\n\n  const transformTransactions = transactions => {\n    return transactions.map(transaction => {\n      return {\n        receiverId: transaction.receiverId,\n        actions: transformActions(transaction.actions)\n      };\n    });\n  };\n\n  if (_state.wallet && _state.wallet.isSignedIn()) {\n    setupEvents();\n  }\n\n  return {\n    async signIn({\n      contractId,\n      methodNames\n    }) {\n      const existingAccounts = await getAccounts();\n\n      if (existingAccounts.length) {\n        return existingAccounts;\n      }\n\n      const {\n        accessKey,\n        error\n      } = await _state.wallet.requestSignIn({\n        contractId,\n        methodNames\n      });\n\n      if (!accessKey || error) {\n        await signOut();\n        throw new Error((typeof error === \"string\" ? error : error.type) || \"Failed to sign in\");\n      }\n\n      setupEvents();\n      return await getAccounts();\n    },\n\n    signOut,\n\n    async getAccounts() {\n      return await getAccounts();\n    },\n\n    async verifyOwner({\n      message\n    }) {\n      logger.log(\"NearFi:verifyOwner\", {\n        message\n      });\n      throw new Error(`Method not supported by ${metadata.name}`);\n    },\n\n    async signAndSendTransaction({\n      signerId,\n      receiverId,\n      actions\n    }) {\n      logger.log(\"signAndSendTransaction\", {\n        signerId,\n        receiverId,\n        actions\n      });\n      const {\n        contract\n      } = store.getState();\n\n      if (!_state.wallet.isSignedIn() || !contract) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      return _state.wallet.signAndSendTransaction({\n        receiverId: receiverId || contract.contractId,\n        actions: transformActions(actions)\n      }).then(res => {\n        if (res.error) {\n          throw new Error(res.error);\n        } // Shouldn't happen but avoids inconsistent responses.\n\n\n        if (!res.response?.length) {\n          throw new Error(\"Invalid response\");\n        }\n\n        return res.response[0];\n      });\n    },\n\n    async signAndSendTransactions({\n      transactions\n    }) {\n      logger.log(\"signAndSendTransactions\", {\n        transactions\n      });\n\n      if (!_state.wallet.isSignedIn()) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      return _state.wallet.requestSignTransactions({\n        transactions: transformTransactions(transactions)\n      }).then(res => {\n        if (res.error) {\n          throw new Error(res.error);\n        } // Shouldn't happen but avoids inconsistent responses.\n\n\n        if (!res.response?.length) {\n          throw new Error(\"Invalid response\");\n        }\n\n        return res.response;\n      });\n    }\n\n  };\n};\n\nfunction setupNearFi({\n  iconUrl = \"./assets/nearfi-icon.png\"\n} = {}) {\n  return async () => {\n    const mobile = (0,is_mobile__WEBPACK_IMPORTED_MODULE_0__.isMobile)();\n    const installed = await isInstalled();\n\n    if (!mobile || !installed) {\n      return null;\n    } // Add extra wait to ensure NearFi's sign in status is read from the\n    // browser extension background env.\n\n\n    await (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_1__.waitFor)(() => !!window.nearFiWallet?.isSignedIn(), {\n      timeout: 300\n    }).catch(() => false);\n    return {\n      id: \"nearfi\",\n      type: \"injected\",\n      metadata: {\n        name: \"NearFi\",\n        description: \"Your NEAR DeFi experience On The Go\",\n        iconUrl,\n        downloadUrl: \"https://nearfi.finance\",\n        deprecated: false,\n        available: installed\n      },\n      init: NearFi\n    };\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../packages/nearfi/src/lib/nearfi.ts\n");

/***/ }),

/***/ "../../packages/nightly-connect/src/index.ts":
/*!***************************************************!*\
  !*** ../../packages/nightly-connect/src/index.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupNightlyConnect": () => (/* reexport safe */ _lib_nightly_connect__WEBPACK_IMPORTED_MODULE_0__.setupNightlyConnect)
/* harmony export */ });
/* harmony import */ var _lib_nightly_connect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/nightly-connect */ "../../packages/nightly-connect/src/lib/nightly-connect.ts");


/***/ }),

/***/ "../../packages/nightly-connect/src/lib/nightly-connect.ts":
/*!*****************************************************************!*\
  !*** ../../packages/nightly-connect/src/lib/nightly-connect.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupNightlyConnect\": () => (/* binding */ setupNightlyConnect)\n/* harmony export */ });\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! near-api-js */ \"near-api-js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _nightlylabs_connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @nightlylabs/connect */ \"@nightlylabs/connect\");\n/* harmony import */ var _nightlylabs_connect__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nightlylabs_connect__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @near-wallet-selector/core */ \"../../packages/core/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @near-wallet-selector/wallet-utils */ \"../../packages/wallet-utils/src/index.ts\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nconst setupNightlyConnectState = () => {\n  return {\n    client: null,\n    modal: new _nightlylabs_connect__WEBPACK_IMPORTED_MODULE_1__.NightlyConnectModal(),\n    accounts: []\n  };\n};\n\nconst NightlyConnect = async ({\n  metadata,\n  store,\n  params,\n  logger,\n  options,\n  provider,\n  emitter\n}) => {\n  const _state = setupNightlyConnectState();\n\n  const getAccounts = () => {\n    return _state.accounts;\n  };\n\n  const signer = {\n    createKey: () => {\n      throw new Error(\"Not implemented\");\n    },\n    getPublicKey: async accountId => {\n      const accounts = getAccounts();\n      const account = accounts.find(a => a.accountId === accountId);\n\n      if (!account) {\n        throw new Error(\"Failed to find public key for account\");\n      }\n\n      return near_api_js__WEBPACK_IMPORTED_MODULE_0__.utils.PublicKey.from(account.publicKey);\n    },\n    signMessage: async (message, accountId) => {\n      const accounts = getAccounts();\n      const account = accounts.find(a => a.accountId === accountId);\n\n      if (!account) {\n        throw new Error(\"Failed to find account for signing\");\n      }\n\n      try {\n        const tx = near_api_js__WEBPACK_IMPORTED_MODULE_0__.transactions.Transaction.decode(Buffer.from(message));\n        const signedTx = await _state.client.signTransaction(tx);\n        return {\n          signature: signedTx.signature.data,\n          publicKey: tx.publicKey\n        };\n      } catch (err) {\n        logger.log(\"Failed to sign message\");\n        logger.error(err);\n        throw Error(\"Invalid message. Only transactions can be signed\");\n      }\n    }\n  };\n\n  const signOut = async () => {\n    _state.client?.ws.close();\n  };\n\n  const transformTransactions = transactions => {\n    const account = (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_2__.getActiveAccount)(store.getState());\n    const {\n      contract\n    } = store.getState();\n\n    if (!account || !contract) {\n      throw new Error(\"Wallet not signed in\");\n    }\n\n    return transactions.map(transaction => {\n      return {\n        signerId: transaction.signerId || account.accountId,\n        receiverId: transaction.receiverId || contract.contractId,\n        actions: transaction.actions\n      };\n    });\n  };\n\n  return {\n    async signIn() {\n      return new Promise((resolve, reject) => {\n        const existingAccounts = getAccounts();\n\n        if (existingAccounts.length) {\n          return resolve(existingAccounts);\n        }\n\n        try {\n          _nightlylabs_connect__WEBPACK_IMPORTED_MODULE_1__.AppNear.build(_objectSpread(_objectSpread({}, params), {}, {\n            onUserConnect: account => {\n              _state.accounts.push(account);\n\n              _state.modal.onClose = undefined;\n\n              _state.modal.closeModal();\n\n              resolve(getAccounts());\n            }\n          })).then(client => {\n            client.ws.onclose = () => {\n              _state.client = null;\n              _state.accounts = [];\n              emitter.emit(\"signedOut\", null);\n            };\n\n            _state.client = client;\n\n            _state.modal.openModal(client.sessionId, _nightlylabs_connect__WEBPACK_IMPORTED_MODULE_1__.NETWORK.NEAR);\n\n            _state.modal.onClose = () => {\n              reject(new Error(\"User cancelled pairing\"));\n            };\n          });\n        } catch (err) {\n          signOut();\n          reject(err);\n        }\n      });\n    },\n\n    signOut,\n\n    async getAccounts() {\n      return getAccounts().map(({\n        accountId\n      }) => ({\n        accountId\n      }));\n    },\n\n    async verifyOwner({\n      message\n    }) {\n      logger.log(\"NightlyConnect:verifyOwner\", {\n        message\n      });\n      throw new Error(`Method not supported by ${metadata.name}`);\n    },\n\n    async signAndSendTransaction({\n      signerId,\n      receiverId,\n      actions\n    }) {\n      logger.log(\"signAndSendTransaction\", {\n        signerId,\n        receiverId,\n        actions\n      });\n      const accounts = getAccounts();\n\n      if (!_state.client?.sessionId || !accounts.length) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      const [signedTx] = await (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_3__.signTransactions)(transformTransactions([{\n        signerId,\n        receiverId,\n        actions\n      }]), signer, options.network);\n      return provider.sendTransaction(signedTx);\n    },\n\n    async signAndSendTransactions({\n      transactions\n    }) {\n      logger.log(\"signAndSendTransactions\", {\n        transactions\n      });\n      const accounts = getAccounts();\n\n      if (!_state.client?.sessionId || !accounts.length) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      const signedTxs = await (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_3__.signTransactions)(transformTransactions(transactions), signer, options.network);\n      const results = [];\n\n      for (let i = 0; i < signedTxs.length; i++) {\n        results.push(await provider.sendTransaction(signedTxs[i]));\n      }\n\n      return results;\n    }\n\n  };\n};\n\nfunction setupNightlyConnect({\n  appMetadata,\n  timeout,\n  url,\n  iconUrl = \"./assets/nightly-connect.png\",\n  deprecated = false\n}) {\n  return async () => {\n    return {\n      id: \"nightly-connect\",\n      type: \"bridge\",\n      metadata: {\n        name: \"Nightly Connect\",\n        description: null,\n        iconUrl: iconUrl,\n        deprecated,\n        available: true\n      },\n      init: options => {\n        return NightlyConnect(_objectSpread(_objectSpread({}, options), {}, {\n          params: {\n            appMetadata,\n            timeout,\n            url\n          }\n        }));\n      }\n    };\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../packages/nightly-connect/src/lib/nightly-connect.ts\n");

/***/ }),

/***/ "../../packages/nightly/src/index.ts":
/*!*******************************************!*\
  !*** ../../packages/nightly/src/index.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupNightly": () => (/* reexport safe */ _lib_nightly__WEBPACK_IMPORTED_MODULE_0__.setupNightly)
/* harmony export */ });
/* harmony import */ var _lib_nightly__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/nightly */ "../../packages/nightly/src/lib/nightly.ts");


/***/ }),

/***/ "../../packages/nightly/src/lib/nightly.ts":
/*!*************************************************!*\
  !*** ../../packages/nightly/src/lib/nightly.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupNightly\": () => (/* binding */ setupNightly)\n/* harmony export */ });\n/* harmony import */ var _near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @near-wallet-selector/core */ \"../../packages/core/src/index.ts\");\n/* harmony import */ var _near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @near-wallet-selector/wallet-utils */ \"../../packages/wallet-utils/src/index.ts\");\n/* harmony import */ var is_mobile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! is-mobile */ \"is-mobile\");\n/* harmony import */ var is_mobile__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(is_mobile__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! near-api-js */ \"near-api-js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nconst setupNightlyState = async store => {\n  const {\n    selectedWalletId\n  } = store.getState();\n  const wallet = window.nightly.near; // Attempt to reconnect wallet if previously selected.\n\n  if (selectedWalletId === \"nightly\") {\n    await wallet.connect(undefined, true).catch(() => null);\n  }\n\n  return {\n    wallet\n  };\n};\n\nconst isInstalled = () => {\n  return (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_0__.waitFor)(() => !!window.nightly.near).catch(() => false);\n};\n\nconst Nightly = async ({\n  metadata,\n  options,\n  store,\n  logger,\n  provider\n}) => {\n  const _state = await setupNightlyState(store);\n\n  const getAccounts = () => {\n    const {\n      accountId,\n      publicKey\n    } = _state.wallet.account;\n\n    if (!accountId) {\n      return [];\n    }\n\n    return [{\n      accountId,\n      publicKey: publicKey.toString()\n    }];\n  };\n\n  const transformTransactions = transactions => {\n    const accounts = getAccounts();\n    const {\n      contract\n    } = store.getState();\n\n    if (!accounts.length || !contract) {\n      throw new Error(\"Wallet not signed in\");\n    }\n\n    return transactions.map(transaction => {\n      return {\n        signerId: transaction.signerId || accounts[0].accountId,\n        receiverId: transaction.receiverId || contract.contractId,\n        actions: transaction.actions\n      };\n    });\n  };\n\n  const signer = {\n    createKey: () => {\n      throw new Error(\"Not implemented\");\n    },\n    getPublicKey: async accountId => {\n      const accounts = getAccounts();\n      const account = accounts.find(a => a.accountId === accountId);\n\n      if (!account) {\n        throw new Error(\"Failed to find public key for account\");\n      }\n\n      return near_api_js__WEBPACK_IMPORTED_MODULE_3__.utils.PublicKey.from(account.publicKey);\n    },\n    signMessage: async (message, accountId) => {\n      const accounts = getAccounts();\n      const account = accounts.find(a => a.accountId === accountId);\n\n      if (!account) {\n        throw new Error(\"Failed to find account for signing\");\n      }\n\n      try {\n        const tx = near_api_js__WEBPACK_IMPORTED_MODULE_3__.transactions.Transaction.decode(Buffer.from(message));\n        const signedTx = await _state.wallet.signTransaction(tx);\n        return {\n          signature: signedTx.signature.data,\n          publicKey: tx.publicKey\n        };\n      } catch (err) {\n        logger.log(\"Failed to sign message\");\n        logger.error(err);\n        throw Error(\"Invalid message. Only transactions can be signed\");\n      }\n    }\n  };\n  return {\n    async signIn() {\n      const existingAccounts = getAccounts();\n\n      if (existingAccounts.length) {\n        return existingAccounts;\n      }\n\n      await _state.wallet.connect();\n      return getAccounts();\n    },\n\n    async signOut() {\n      await _state.wallet.disconnect();\n    },\n\n    async getAccounts() {\n      return getAccounts().map(({\n        accountId\n      }) => ({\n        accountId\n      }));\n    },\n\n    async verifyOwner({\n      message\n    }) {\n      logger.log(\"Nightly:verifyOwner\", {\n        message\n      });\n      throw new Error(`Method not supported by ${metadata.name}`);\n    },\n\n    async signAndSendTransaction({\n      signerId,\n      receiverId,\n      actions\n    }) {\n      logger.log(\"signAndSendTransaction\", {\n        signerId,\n        receiverId,\n        actions\n      });\n      const {\n        contract\n      } = store.getState();\n      const accounts = getAccounts();\n\n      if (!accounts.length || !contract) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      const [signedTx] = await (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_1__.signTransactions)(transformTransactions([{\n        signerId,\n        receiverId,\n        actions\n      }]), signer, options.network);\n      return provider.sendTransaction(signedTx);\n    },\n\n    async signAndSendTransactions({\n      transactions\n    }) {\n      logger.log(\"signAndSendTransactions\", {\n        transactions\n      });\n      const signedTxs = await (0,_near_wallet_selector_wallet_utils__WEBPACK_IMPORTED_MODULE_1__.signTransactions)(transformTransactions(transactions), signer, options.network);\n      const results = [];\n\n      for (let i = 0; i < signedTxs.length; i++) {\n        results.push(await provider.sendTransaction(signedTxs[i]));\n      }\n\n      return results;\n    }\n\n  };\n};\n\nfunction setupNightly({\n  iconUrl = \"./assets/nightly.png\",\n  deprecated = false\n} = {}) {\n  return async () => {\n    const mobile = (0,is_mobile__WEBPACK_IMPORTED_MODULE_2__.isMobile)();\n    const installed = await isInstalled();\n\n    if (mobile) {\n      return null;\n    }\n\n    await (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_0__.waitFor)(() => !!window.nightly?.near, {\n      timeout: 300\n    }).catch(() => false);\n    return {\n      id: \"nightly\",\n      type: \"injected\",\n      metadata: {\n        name: \"Nightly\",\n        description: null,\n        iconUrl,\n        // Will replace we open beta with stable version\n        downloadUrl: \"https://www.nightly.app\",\n        deprecated,\n        available: installed\n      },\n      init: Nightly\n    };\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../packages/nightly/src/lib/nightly.ts\n");

/***/ }),

/***/ "../../packages/sender/src/index.ts":
/*!******************************************!*\
  !*** ../../packages/sender/src/index.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupSender": () => (/* reexport safe */ _lib_sender__WEBPACK_IMPORTED_MODULE_0__.setupSender)
/* harmony export */ });
/* harmony import */ var _lib_sender__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/sender */ "../../packages/sender/src/lib/sender.ts");


/***/ }),

/***/ "../../packages/sender/src/lib/sender.ts":
/*!***********************************************!*\
  !*** ../../packages/sender/src/lib/sender.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupSender\": () => (/* binding */ setupSender)\n/* harmony export */ });\n/* harmony import */ var is_mobile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-mobile */ \"is-mobile\");\n/* harmony import */ var is_mobile__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(is_mobile__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @near-wallet-selector/core */ \"../../packages/core/src/index.ts\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nconst isInstalled = () => {\n  return (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_1__.waitFor)(() => !!window.near?.isSender).catch(() => false);\n};\n\nconst setupSenderState = () => {\n  const wallet = window.near;\n  return {\n    wallet\n  };\n};\n\nconst Sender = async ({\n  options,\n  metadata,\n  store,\n  provider,\n  emitter,\n  logger\n}) => {\n  const _state = setupSenderState();\n\n  const cleanup = () => {\n    for (const key in _state.wallet.callbacks) {\n      _state.wallet.remove(key);\n    }\n  };\n\n  const signOut = async () => {\n    if (!_state.wallet.isSignedIn()) {\n      return;\n    }\n\n    cleanup();\n    const res = await _state.wallet.signOut();\n\n    if (res === true) {\n      return;\n    }\n\n    const error = new Error(typeof res.error === \"string\" ? res.error : res.error.type); // Prevent signing out by throwing.\n\n    if (error.message === \"User reject\") {\n      throw error;\n    } // Continue signing out but log the issue.\n\n\n    logger.log(\"Failed to sign out\");\n    logger.error(error);\n  };\n\n  const setupEvents = () => {\n    _state.wallet.on(\"accountChanged\", async newAccountId => {\n      logger.log(\"onAccountChange\", newAccountId);\n      emitter.emit(\"signedOut\", null);\n    });\n\n    _state.wallet.on(\"rpcChanged\", async rpc => {\n      logger.log(\"onNetworkChange\", rpc);\n\n      if (options.network.networkId !== rpc.networkId) {\n        await signOut();\n        emitter.emit(\"signedOut\", null);\n        emitter.emit(\"networkChanged\", {\n          networkId: rpc.networkId\n        });\n      }\n    });\n  };\n\n  const getAccounts = () => {\n    const accountId = _state.wallet.getAccountId();\n\n    if (!accountId) {\n      return [];\n    }\n\n    return [{\n      accountId\n    }];\n  };\n\n  const isValidActions = actions => {\n    return actions.every(x => x.type === \"FunctionCall\");\n  };\n\n  const transformActions = actions => {\n    const validActions = isValidActions(actions);\n\n    if (!validActions) {\n      throw new Error(`Only 'FunctionCall' actions types are supported by ${metadata.name}`);\n    }\n\n    return actions.map(x => x.params);\n  };\n\n  const transformTransactions = transactions => {\n    return transactions.map(transaction => {\n      return {\n        receiverId: transaction.receiverId,\n        actions: transformActions(transaction.actions)\n      };\n    });\n  };\n\n  if (_state.wallet && _state.wallet.isSignedIn()) {\n    setupEvents();\n  }\n\n  return {\n    async signIn({\n      contractId,\n      methodNames\n    }) {\n      const existingAccounts = getAccounts();\n\n      if (existingAccounts.length) {\n        return existingAccounts;\n      }\n\n      const {\n        accessKey,\n        error\n      } = await _state.wallet.requestSignIn({\n        contractId,\n        methodNames\n      });\n\n      if (!accessKey || error) {\n        await signOut();\n        throw new Error((typeof error === \"string\" ? error : error.type) || \"Failed to sign in\");\n      }\n\n      setupEvents();\n      return getAccounts();\n    },\n\n    signOut,\n\n    async getAccounts() {\n      return getAccounts();\n    },\n\n    async verifyOwner({\n      message\n    }) {\n      logger.log(\"Sender:verifyOwner\", {\n        message\n      });\n\n      const account = _state.wallet.account();\n\n      if (!account) {\n        throw new Error(\"Wallet not signed in\");\n      } // Note: When the wallet is locked, Sender returns an empty Signer interface.\n      // Even after unlocking the wallet, the user will need to refresh to gain\n      // access to these methods.\n\n\n      if (!account.connection.signer.signMessage) {\n        throw new Error(\"Wallet is locked\");\n      }\n\n      const networkId = options.network.networkId;\n      const accountId = account.accountId;\n      const pubKey = await account.connection.signer.getPublicKey(accountId, networkId);\n      const block = await provider.block({\n        finality: \"final\"\n      });\n      const data = {\n        accountId,\n        message,\n        blockId: block.header.hash,\n        publicKey: Buffer.from(pubKey.data).toString(\"base64\"),\n        keyType: pubKey.keyType\n      };\n      const encoded = JSON.stringify(data);\n      const signed = await account.connection.signer.signMessage(new Uint8Array(Buffer.from(encoded)), accountId, networkId);\n      return _objectSpread(_objectSpread({}, data), {}, {\n        signature: Buffer.from(signed.signature).toString(\"base64\"),\n        keyType: signed.publicKey.keyType\n      });\n    },\n\n    async signAndSendTransaction({\n      signerId,\n      receiverId,\n      actions\n    }) {\n      logger.log(\"signAndSendTransaction\", {\n        signerId,\n        receiverId,\n        actions\n      });\n      const {\n        contract\n      } = store.getState();\n\n      if (!_state.wallet.isSignedIn() || !contract) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      return _state.wallet.signAndSendTransaction({\n        receiverId: receiverId || contract.contractId,\n        actions: transformActions(actions)\n      }).then(res => {\n        if (res.error) {\n          throw new Error(res.error);\n        } else if (res.response && \"error\" in res.response) {\n          throw new Error(res.response.error.message);\n        } // Shouldn't happen but avoids inconsistent responses.\n\n\n        if (!res.response?.length) {\n          throw new Error(\"Invalid response\");\n        }\n\n        return res.response[0];\n      });\n    },\n\n    async signAndSendTransactions({\n      transactions\n    }) {\n      logger.log(\"signAndSendTransactions\", {\n        transactions\n      });\n\n      if (!_state.wallet.isSignedIn()) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      return _state.wallet.requestSignTransactions({\n        transactions: transformTransactions(transactions)\n      }).then(res => {\n        if (res.error) {\n          throw new Error(res.error);\n        } else if (res.response && \"error\" in res.response) {\n          throw new Error(res.response.error.message);\n        } // Shouldn't happen but avoids inconsistent responses.\n\n\n        if (!res.response?.length) {\n          throw new Error(\"Invalid response\");\n        }\n\n        return res.response;\n      });\n    }\n\n  };\n};\n\nfunction setupSender({\n  iconUrl = \"./assets/sender-icon.png\",\n  deprecated = false\n} = {}) {\n  return async () => {\n    const mobile = (0,is_mobile__WEBPACK_IMPORTED_MODULE_0__.isMobile)();\n    const installed = await isInstalled();\n\n    if (mobile) {\n      return null;\n    } // Add extra wait to ensure Sender's sign in status is read from the\n    // browser extension background env.\n\n\n    await (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_1__.waitFor)(() => !!window.near?.isSignedIn(), {\n      timeout: 300\n    }).catch(() => false);\n    return {\n      id: \"sender\",\n      type: \"injected\",\n      metadata: {\n        name: \"Sender\",\n        description: null,\n        iconUrl,\n        downloadUrl: \"https://chrome.google.com/webstore/detail/sender-wallet/epapihdplajcdnnkdeiahlgigofloibg\",\n        deprecated,\n        available: installed\n      },\n      init: Sender\n    };\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvc2VuZGVyL3NyYy9saWIvc2VuZGVyLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQVVBOztBQWtCQSxNQUFNRSxXQUFXLEdBQUcsTUFBTTtFQUN4QixPQUFPRCxtRUFBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDRSxNQUFNLENBQUNDLElBQVAsRUFBYUMsUUFBdEIsQ0FBUCxDQUF1Q0MsS0FBdkMsQ0FBNkMsTUFBTSxLQUFuRCxDQUFQO0FBQ0QsQ0FGRDs7QUFJQSxNQUFNQyxnQkFBZ0IsR0FBRyxNQUFtQjtFQUMxQyxNQUFNQyxNQUFNLEdBQUdMLE1BQU0sQ0FBQ0MsSUFBdEI7RUFFQSxPQUFPO0lBQ0xJO0VBREssQ0FBUDtBQUdELENBTkQ7O0FBUUEsTUFBTUMsTUFBOEMsR0FBRyxPQUFPO0VBQzVEQyxPQUQ0RDtFQUU1REMsUUFGNEQ7RUFHNURDLEtBSDREO0VBSTVEQyxRQUo0RDtFQUs1REMsT0FMNEQ7RUFNNURDO0FBTjRELENBQVAsS0FPakQ7RUFDSixNQUFNQyxNQUFNLEdBQUdULGdCQUFnQixFQUEvQjs7RUFFQSxNQUFNVSxPQUFPLEdBQUcsTUFBTTtJQUNwQixLQUFLLE1BQU1DLEdBQVgsSUFBa0JGLE1BQU0sQ0FBQ1IsTUFBUCxDQUFjVyxTQUFoQyxFQUEyQztNQUN6Q0gsTUFBTSxDQUFDUixNQUFQLENBQWNZLE1BQWQsQ0FBcUJGLEdBQXJCO0lBQ0Q7RUFDRixDQUpEOztFQU1BLE1BQU1HLE9BQU8sR0FBRyxZQUFZO0lBQzFCLElBQUksQ0FBQ0wsTUFBTSxDQUFDUixNQUFQLENBQWNjLFVBQWQsRUFBTCxFQUFpQztNQUMvQjtJQUNEOztJQUVETCxPQUFPO0lBRVAsTUFBTU0sR0FBRyxHQUFHLE1BQU1QLE1BQU0sQ0FBQ1IsTUFBUCxDQUFjYSxPQUFkLEVBQWxCOztJQUVBLElBQUlFLEdBQUcsS0FBSyxJQUFaLEVBQWtCO01BQ2hCO0lBQ0Q7O0lBRUQsTUFBTUMsS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FDWixPQUFPRixHQUFHLENBQUNDLEtBQVgsS0FBcUIsUUFBckIsR0FBZ0NELEdBQUcsQ0FBQ0MsS0FBcEMsR0FBNENELEdBQUcsQ0FBQ0MsS0FBSixDQUFVRSxJQUQxQyxDQUFkLENBYjBCLENBaUIxQjs7SUFDQSxJQUFJRixLQUFLLENBQUNHLE9BQU4sS0FBa0IsYUFBdEIsRUFBcUM7TUFDbkMsTUFBTUgsS0FBTjtJQUNELENBcEJ5QixDQXNCMUI7OztJQUNBVCxNQUFNLENBQUNhLEdBQVAsQ0FBVyxvQkFBWDtJQUNBYixNQUFNLENBQUNTLEtBQVAsQ0FBYUEsS0FBYjtFQUNELENBekJEOztFQTJCQSxNQUFNSyxXQUFXLEdBQUcsTUFBTTtJQUN4QmIsTUFBTSxDQUFDUixNQUFQLENBQWNzQixFQUFkLENBQWlCLGdCQUFqQixFQUFtQyxNQUFPQyxZQUFQLElBQXdCO01BQ3pEaEIsTUFBTSxDQUFDYSxHQUFQLENBQVcsaUJBQVgsRUFBOEJHLFlBQTlCO01BQ0FqQixPQUFPLENBQUNrQixJQUFSLENBQWEsV0FBYixFQUEwQixJQUExQjtJQUNELENBSEQ7O0lBS0FoQixNQUFNLENBQUNSLE1BQVAsQ0FBY3NCLEVBQWQsQ0FBaUIsWUFBakIsRUFBK0IsTUFBT0csR0FBUCxJQUFlO01BQzVDbEIsTUFBTSxDQUFDYSxHQUFQLENBQVcsaUJBQVgsRUFBOEJLLEdBQTlCOztNQUVBLElBQUl2QixPQUFPLENBQUN3QixPQUFSLENBQWdCQyxTQUFoQixLQUE4QkYsR0FBRyxDQUFDRSxTQUF0QyxFQUFpRDtRQUMvQyxNQUFNZCxPQUFPLEVBQWI7UUFFQVAsT0FBTyxDQUFDa0IsSUFBUixDQUFhLFdBQWIsRUFBMEIsSUFBMUI7UUFDQWxCLE9BQU8sQ0FBQ2tCLElBQVIsQ0FBYSxnQkFBYixFQUErQjtVQUFFRyxTQUFTLEVBQUVGLEdBQUcsQ0FBQ0U7UUFBakIsQ0FBL0I7TUFDRDtJQUNGLENBVEQ7RUFVRCxDQWhCRDs7RUFrQkEsTUFBTUMsV0FBVyxHQUFHLE1BQU07SUFDeEIsTUFBTUMsU0FBUyxHQUFHckIsTUFBTSxDQUFDUixNQUFQLENBQWM4QixZQUFkLEVBQWxCOztJQUVBLElBQUksQ0FBQ0QsU0FBTCxFQUFnQjtNQUNkLE9BQU8sRUFBUDtJQUNEOztJQUVELE9BQU8sQ0FBQztNQUFFQTtJQUFGLENBQUQsQ0FBUDtFQUNELENBUkQ7O0VBVUEsTUFBTUUsY0FBYyxHQUNsQkMsT0FEcUIsSUFFb0I7SUFDekMsT0FBT0EsT0FBTyxDQUFDQyxLQUFSLENBQWVDLENBQUQsSUFBT0EsQ0FBQyxDQUFDaEIsSUFBRixLQUFXLGNBQWhDLENBQVA7RUFDRCxDQUpEOztFQU1BLE1BQU1pQixnQkFBZ0IsR0FBSUgsT0FBRCxJQUE0QjtJQUNuRCxNQUFNSSxZQUFZLEdBQUdMLGNBQWMsQ0FBQ0MsT0FBRCxDQUFuQzs7SUFFQSxJQUFJLENBQUNJLFlBQUwsRUFBbUI7TUFDakIsTUFBTSxJQUFJbkIsS0FBSixDQUNILHNEQUFxRGQsUUFBUSxDQUFDa0MsSUFBSyxFQURoRSxDQUFOO0lBR0Q7O0lBRUQsT0FBT0wsT0FBTyxDQUFDTSxHQUFSLENBQWFKLENBQUQsSUFBT0EsQ0FBQyxDQUFDSyxNQUFyQixDQUFQO0VBQ0QsQ0FWRDs7RUFZQSxNQUFNQyxxQkFBcUIsR0FDekJDLFlBRDRCLElBRXpCO0lBQ0gsT0FBT0EsWUFBWSxDQUFDSCxHQUFiLENBQWtCSSxXQUFELElBQWlCO01BQ3ZDLE9BQU87UUFDTEMsVUFBVSxFQUFFRCxXQUFXLENBQUNDLFVBRG5CO1FBRUxYLE9BQU8sRUFBRUcsZ0JBQWdCLENBQUNPLFdBQVcsQ0FBQ1YsT0FBYjtNQUZwQixDQUFQO0lBSUQsQ0FMTSxDQUFQO0VBTUQsQ0FURDs7RUFXQSxJQUFJeEIsTUFBTSxDQUFDUixNQUFQLElBQWlCUSxNQUFNLENBQUNSLE1BQVAsQ0FBY2MsVUFBZCxFQUFyQixFQUFpRDtJQUMvQ08sV0FBVztFQUNaOztFQUVELE9BQU87SUFDTCxNQUFNdUIsTUFBTixDQUFhO01BQUVDLFVBQUY7TUFBY0M7SUFBZCxDQUFiLEVBQTBDO01BQ3hDLE1BQU1DLGdCQUFnQixHQUFHbkIsV0FBVyxFQUFwQzs7TUFFQSxJQUFJbUIsZ0JBQWdCLENBQUNDLE1BQXJCLEVBQTZCO1FBQzNCLE9BQU9ELGdCQUFQO01BQ0Q7O01BRUQsTUFBTTtRQUFFRSxTQUFGO1FBQWFqQztNQUFiLElBQXVCLE1BQU1SLE1BQU0sQ0FBQ1IsTUFBUCxDQUFja0QsYUFBZCxDQUE0QjtRQUM3REwsVUFENkQ7UUFFN0RDO01BRjZELENBQTVCLENBQW5DOztNQUtBLElBQUksQ0FBQ0csU0FBRCxJQUFjakMsS0FBbEIsRUFBeUI7UUFDdkIsTUFBTUgsT0FBTyxFQUFiO1FBRUEsTUFBTSxJQUFJSSxLQUFKLENBQ0osQ0FBQyxPQUFPRCxLQUFQLEtBQWlCLFFBQWpCLEdBQTRCQSxLQUE1QixHQUFvQ0EsS0FBSyxDQUFDRSxJQUEzQyxLQUNFLG1CQUZFLENBQU47TUFJRDs7TUFFREcsV0FBVztNQUVYLE9BQU9PLFdBQVcsRUFBbEI7SUFDRCxDQXpCSTs7SUEyQkxmLE9BM0JLOztJQTZCTCxNQUFNZSxXQUFOLEdBQW9CO01BQ2xCLE9BQU9BLFdBQVcsRUFBbEI7SUFDRCxDQS9CSTs7SUFpQ0wsTUFBTXVCLFdBQU4sQ0FBa0I7TUFBRWhDO0lBQUYsQ0FBbEIsRUFBK0I7TUFDN0JaLE1BQU0sQ0FBQ2EsR0FBUCxDQUFXLG9CQUFYLEVBQWlDO1FBQUVEO01BQUYsQ0FBakM7O01BRUEsTUFBTWlDLE9BQU8sR0FBRzVDLE1BQU0sQ0FBQ1IsTUFBUCxDQUFjb0QsT0FBZCxFQUFoQjs7TUFFQSxJQUFJLENBQUNBLE9BQUwsRUFBYztRQUNaLE1BQU0sSUFBSW5DLEtBQUosQ0FBVSxzQkFBVixDQUFOO01BQ0QsQ0FQNEIsQ0FTN0I7TUFDQTtNQUNBOzs7TUFDQSxJQUFJLENBQUNtQyxPQUFPLENBQUNDLFVBQVIsQ0FBbUJDLE1BQW5CLENBQTBCQyxXQUEvQixFQUE0QztRQUMxQyxNQUFNLElBQUl0QyxLQUFKLENBQVUsa0JBQVYsQ0FBTjtNQUNEOztNQUVELE1BQU1VLFNBQVMsR0FBR3pCLE9BQU8sQ0FBQ3dCLE9BQVIsQ0FBZ0JDLFNBQWxDO01BQ0EsTUFBTUUsU0FBUyxHQUFHdUIsT0FBTyxDQUFDdkIsU0FBMUI7TUFDQSxNQUFNMkIsTUFBTSxHQUFHLE1BQU1KLE9BQU8sQ0FBQ0MsVUFBUixDQUFtQkMsTUFBbkIsQ0FBMEJHLFlBQTFCLENBQ25CNUIsU0FEbUIsRUFFbkJGLFNBRm1CLENBQXJCO01BSUEsTUFBTStCLEtBQUssR0FBRyxNQUFNckQsUUFBUSxDQUFDcUQsS0FBVCxDQUFlO1FBQUVDLFFBQVEsRUFBRTtNQUFaLENBQWYsQ0FBcEI7TUFFQSxNQUFNQyxJQUFJLEdBQUc7UUFDWC9CLFNBRFc7UUFFWFYsT0FGVztRQUdYMEMsT0FBTyxFQUFFSCxLQUFLLENBQUNJLE1BQU4sQ0FBYUMsSUFIWDtRQUlYQyxTQUFTLEVBQUVDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZVixNQUFNLENBQUNJLElBQW5CLEVBQXlCTyxRQUF6QixDQUFrQyxRQUFsQyxDQUpBO1FBS1hDLE9BQU8sRUFBRVosTUFBTSxDQUFDWTtNQUxMLENBQWI7TUFPQSxNQUFNQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsU0FBTCxDQUFlWCxJQUFmLENBQWhCO01BRUEsTUFBTVksTUFBTSxHQUFHLE1BQU1wQixPQUFPLENBQUNDLFVBQVIsQ0FBbUJDLE1BQW5CLENBQTBCQyxXQUExQixDQUNuQixJQUFJa0IsVUFBSixDQUFlUixNQUFNLENBQUNDLElBQVAsQ0FBWUcsT0FBWixDQUFmLENBRG1CLEVBRW5CeEMsU0FGbUIsRUFHbkJGLFNBSG1CLENBQXJCO01BTUEsdUNBQ0tpQyxJQURMO1FBRUVjLFNBQVMsRUFBRVQsTUFBTSxDQUFDQyxJQUFQLENBQVlNLE1BQU0sQ0FBQ0UsU0FBbkIsRUFBOEJQLFFBQTlCLENBQXVDLFFBQXZDLENBRmI7UUFHRUMsT0FBTyxFQUFFSSxNQUFNLENBQUNSLFNBQVAsQ0FBaUJJO01BSDVCO0lBS0QsQ0E3RUk7O0lBK0VMLE1BQU1PLHNCQUFOLENBQTZCO01BQUVDLFFBQUY7TUFBWWpDLFVBQVo7TUFBd0JYO0lBQXhCLENBQTdCLEVBQWdFO01BQzlEekIsTUFBTSxDQUFDYSxHQUFQLENBQVcsd0JBQVgsRUFBcUM7UUFBRXdELFFBQUY7UUFBWWpDLFVBQVo7UUFBd0JYO01BQXhCLENBQXJDO01BRUEsTUFBTTtRQUFFNkM7TUFBRixJQUFlekUsS0FBSyxDQUFDMEUsUUFBTixFQUFyQjs7TUFFQSxJQUFJLENBQUN0RSxNQUFNLENBQUNSLE1BQVAsQ0FBY2MsVUFBZCxFQUFELElBQStCLENBQUMrRCxRQUFwQyxFQUE4QztRQUM1QyxNQUFNLElBQUk1RCxLQUFKLENBQVUsc0JBQVYsQ0FBTjtNQUNEOztNQUVELE9BQU9ULE1BQU0sQ0FBQ1IsTUFBUCxDQUNKMkUsc0JBREksQ0FDbUI7UUFDdEJoQyxVQUFVLEVBQUVBLFVBQVUsSUFBSWtDLFFBQVEsQ0FBQ2hDLFVBRGI7UUFFdEJiLE9BQU8sRUFBRUcsZ0JBQWdCLENBQUNILE9BQUQ7TUFGSCxDQURuQixFQUtKK0MsSUFMSSxDQUtFaEUsR0FBRCxJQUFTO1FBQ2IsSUFBSUEsR0FBRyxDQUFDQyxLQUFSLEVBQWU7VUFDYixNQUFNLElBQUlDLEtBQUosQ0FBVUYsR0FBRyxDQUFDQyxLQUFkLENBQU47UUFDRCxDQUZELE1BRU8sSUFBSUQsR0FBRyxDQUFDaUUsUUFBSixJQUFnQixXQUFXakUsR0FBRyxDQUFDaUUsUUFBbkMsRUFBNkM7VUFDbEQsTUFBTSxJQUFJL0QsS0FBSixDQUFVRixHQUFHLENBQUNpRSxRQUFKLENBQWFoRSxLQUFiLENBQW1CRyxPQUE3QixDQUFOO1FBQ0QsQ0FMWSxDQU9iOzs7UUFDQSxJQUFJLENBQUNKLEdBQUcsQ0FBQ2lFLFFBQUosRUFBY2hDLE1BQW5CLEVBQTJCO1VBQ3pCLE1BQU0sSUFBSS9CLEtBQUosQ0FBVSxrQkFBVixDQUFOO1FBQ0Q7O1FBRUQsT0FBT0YsR0FBRyxDQUFDaUUsUUFBSixDQUFhLENBQWIsQ0FBUDtNQUNELENBbEJJLENBQVA7SUFtQkQsQ0EzR0k7O0lBNkdMLE1BQU1DLHVCQUFOLENBQThCO01BQUV4QztJQUFGLENBQTlCLEVBQWdEO01BQzlDbEMsTUFBTSxDQUFDYSxHQUFQLENBQVcseUJBQVgsRUFBc0M7UUFBRXFCO01BQUYsQ0FBdEM7O01BRUEsSUFBSSxDQUFDakMsTUFBTSxDQUFDUixNQUFQLENBQWNjLFVBQWQsRUFBTCxFQUFpQztRQUMvQixNQUFNLElBQUlHLEtBQUosQ0FBVSxzQkFBVixDQUFOO01BQ0Q7O01BRUQsT0FBT1QsTUFBTSxDQUFDUixNQUFQLENBQ0prRix1QkFESSxDQUNvQjtRQUN2QnpDLFlBQVksRUFBRUQscUJBQXFCLENBQUNDLFlBQUQ7TUFEWixDQURwQixFQUlKc0MsSUFKSSxDQUlFaEUsR0FBRCxJQUFTO1FBQ2IsSUFBSUEsR0FBRyxDQUFDQyxLQUFSLEVBQWU7VUFDYixNQUFNLElBQUlDLEtBQUosQ0FBVUYsR0FBRyxDQUFDQyxLQUFkLENBQU47UUFDRCxDQUZELE1BRU8sSUFBSUQsR0FBRyxDQUFDaUUsUUFBSixJQUFnQixXQUFXakUsR0FBRyxDQUFDaUUsUUFBbkMsRUFBNkM7VUFDbEQsTUFBTSxJQUFJL0QsS0FBSixDQUFVRixHQUFHLENBQUNpRSxRQUFKLENBQWFoRSxLQUFiLENBQW1CRyxPQUE3QixDQUFOO1FBQ0QsQ0FMWSxDQU9iOzs7UUFDQSxJQUFJLENBQUNKLEdBQUcsQ0FBQ2lFLFFBQUosRUFBY2hDLE1BQW5CLEVBQTJCO1VBQ3pCLE1BQU0sSUFBSS9CLEtBQUosQ0FBVSxrQkFBVixDQUFOO1FBQ0Q7O1FBRUQsT0FBT0YsR0FBRyxDQUFDaUUsUUFBWDtNQUNELENBakJJLENBQVA7SUFrQkQ7O0VBdElJLENBQVA7QUF3SUQsQ0FoUEQ7O0FBa1BPLFNBQVNHLFdBQVQsQ0FBcUI7RUFDMUJDLE9BQU8sR0FBRywwQkFEZ0I7RUFFMUJDLFVBQVUsR0FBRztBQUZhLElBR1YsRUFIWCxFQUdvRDtFQUN6RCxPQUFPLFlBQVk7SUFDakIsTUFBTUMsTUFBTSxHQUFHOUYsbURBQVEsRUFBdkI7SUFDQSxNQUFNK0YsU0FBUyxHQUFHLE1BQU03RixXQUFXLEVBQW5DOztJQUVBLElBQUk0RixNQUFKLEVBQVk7TUFDVixPQUFPLElBQVA7SUFDRCxDQU5nQixDQVFqQjtJQUNBOzs7SUFDQSxNQUFNN0YsbUVBQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQ0UsTUFBTSxDQUFDQyxJQUFQLEVBQWFrQixVQUFiLEVBQVQsRUFBb0M7TUFBRTBFLE9BQU8sRUFBRTtJQUFYLENBQXBDLENBQVAsQ0FBNkQxRixLQUE3RCxDQUNKLE1BQU0sS0FERixDQUFOO0lBSUEsT0FBTztNQUNMMkYsRUFBRSxFQUFFLFFBREM7TUFFTHZFLElBQUksRUFBRSxVQUZEO01BR0xmLFFBQVEsRUFBRTtRQUNSa0MsSUFBSSxFQUFFLFFBREU7UUFFUnFELFdBQVcsRUFBRSxJQUZMO1FBR1JOLE9BSFE7UUFJUk8sV0FBVyxFQUNULDBGQUxNO1FBTVJOLFVBTlE7UUFPUk8sU0FBUyxFQUFFTDtNQVBILENBSEw7TUFZTE0sSUFBSSxFQUFFNUY7SUFaRCxDQUFQO0VBY0QsQ0E1QkQ7QUE2QkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vcGFja2FnZXMvc2VuZGVyL3NyYy9saWIvc2VuZGVyLnRzPzA4MGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNNb2JpbGUgfSBmcm9tIFwiaXMtbW9iaWxlXCI7XG5pbXBvcnQge1xuICBXYWxsZXRNb2R1bGVGYWN0b3J5LFxuICBXYWxsZXRCZWhhdmlvdXJGYWN0b3J5LFxuICBJbmplY3RlZFdhbGxldCxcbiAgQWN0aW9uLFxuICBUcmFuc2FjdGlvbixcbiAgRnVuY3Rpb25DYWxsQWN0aW9uLFxuICBPcHRpb25hbCxcbn0gZnJvbSBcIkBuZWFyLXdhbGxldC1zZWxlY3Rvci9jb3JlXCI7XG5pbXBvcnQgeyB3YWl0Rm9yIH0gZnJvbSBcIkBuZWFyLXdhbGxldC1zZWxlY3Rvci9jb3JlXCI7XG5pbXBvcnQgdHlwZSB7IEluamVjdGVkU2VuZGVyIH0gZnJvbSBcIi4vaW5qZWN0ZWQtc2VuZGVyXCI7XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7XG4gICAgbmVhcjogSW5qZWN0ZWRTZW5kZXIgfCB1bmRlZmluZWQ7XG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBTZW5kZXJQYXJhbXMge1xuICBpY29uVXJsPzogc3RyaW5nO1xuICBkZXByZWNhdGVkPzogYm9vbGVhbjtcbn1cblxuaW50ZXJmYWNlIFNlbmRlclN0YXRlIHtcbiAgd2FsbGV0OiBJbmplY3RlZFNlbmRlcjtcbn1cblxuY29uc3QgaXNJbnN0YWxsZWQgPSAoKSA9PiB7XG4gIHJldHVybiB3YWl0Rm9yKCgpID0+ICEhd2luZG93Lm5lYXI/LmlzU2VuZGVyKS5jYXRjaCgoKSA9PiBmYWxzZSk7XG59O1xuXG5jb25zdCBzZXR1cFNlbmRlclN0YXRlID0gKCk6IFNlbmRlclN0YXRlID0+IHtcbiAgY29uc3Qgd2FsbGV0ID0gd2luZG93Lm5lYXIhO1xuXG4gIHJldHVybiB7XG4gICAgd2FsbGV0LFxuICB9O1xufTtcblxuY29uc3QgU2VuZGVyOiBXYWxsZXRCZWhhdmlvdXJGYWN0b3J5PEluamVjdGVkV2FsbGV0PiA9IGFzeW5jICh7XG4gIG9wdGlvbnMsXG4gIG1ldGFkYXRhLFxuICBzdG9yZSxcbiAgcHJvdmlkZXIsXG4gIGVtaXR0ZXIsXG4gIGxvZ2dlcixcbn0pID0+IHtcbiAgY29uc3QgX3N0YXRlID0gc2V0dXBTZW5kZXJTdGF0ZSgpO1xuXG4gIGNvbnN0IGNsZWFudXAgPSAoKSA9PiB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gX3N0YXRlLndhbGxldC5jYWxsYmFja3MpIHtcbiAgICAgIF9zdGF0ZS53YWxsZXQucmVtb3ZlKGtleSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHNpZ25PdXQgPSBhc3luYyAoKSA9PiB7XG4gICAgaWYgKCFfc3RhdGUud2FsbGV0LmlzU2lnbmVkSW4oKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNsZWFudXAoKTtcblxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IF9zdGF0ZS53YWxsZXQuc2lnbk91dCgpO1xuXG4gICAgaWYgKHJlcyA9PT0gdHJ1ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgdHlwZW9mIHJlcy5lcnJvciA9PT0gXCJzdHJpbmdcIiA/IHJlcy5lcnJvciA6IHJlcy5lcnJvci50eXBlXG4gICAgKTtcblxuICAgIC8vIFByZXZlbnQgc2lnbmluZyBvdXQgYnkgdGhyb3dpbmcuXG4gICAgaWYgKGVycm9yLm1lc3NhZ2UgPT09IFwiVXNlciByZWplY3RcIikge1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuXG4gICAgLy8gQ29udGludWUgc2lnbmluZyBvdXQgYnV0IGxvZyB0aGUgaXNzdWUuXG4gICAgbG9nZ2VyLmxvZyhcIkZhaWxlZCB0byBzaWduIG91dFwiKTtcbiAgICBsb2dnZXIuZXJyb3IoZXJyb3IpO1xuICB9O1xuXG4gIGNvbnN0IHNldHVwRXZlbnRzID0gKCkgPT4ge1xuICAgIF9zdGF0ZS53YWxsZXQub24oXCJhY2NvdW50Q2hhbmdlZFwiLCBhc3luYyAobmV3QWNjb3VudElkKSA9PiB7XG4gICAgICBsb2dnZXIubG9nKFwib25BY2NvdW50Q2hhbmdlXCIsIG5ld0FjY291bnRJZCk7XG4gICAgICBlbWl0dGVyLmVtaXQoXCJzaWduZWRPdXRcIiwgbnVsbCk7XG4gICAgfSk7XG5cbiAgICBfc3RhdGUud2FsbGV0Lm9uKFwicnBjQ2hhbmdlZFwiLCBhc3luYyAocnBjKSA9PiB7XG4gICAgICBsb2dnZXIubG9nKFwib25OZXR3b3JrQ2hhbmdlXCIsIHJwYyk7XG5cbiAgICAgIGlmIChvcHRpb25zLm5ldHdvcmsubmV0d29ya0lkICE9PSBycGMubmV0d29ya0lkKSB7XG4gICAgICAgIGF3YWl0IHNpZ25PdXQoKTtcblxuICAgICAgICBlbWl0dGVyLmVtaXQoXCJzaWduZWRPdXRcIiwgbnVsbCk7XG4gICAgICAgIGVtaXR0ZXIuZW1pdChcIm5ldHdvcmtDaGFuZ2VkXCIsIHsgbmV0d29ya0lkOiBycGMubmV0d29ya0lkIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IGdldEFjY291bnRzID0gKCkgPT4ge1xuICAgIGNvbnN0IGFjY291bnRJZCA9IF9zdGF0ZS53YWxsZXQuZ2V0QWNjb3VudElkKCk7XG5cbiAgICBpZiAoIWFjY291bnRJZCkge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cblxuICAgIHJldHVybiBbeyBhY2NvdW50SWQgfV07XG4gIH07XG5cbiAgY29uc3QgaXNWYWxpZEFjdGlvbnMgPSAoXG4gICAgYWN0aW9uczogQXJyYXk8QWN0aW9uPlxuICApOiBhY3Rpb25zIGlzIEFycmF5PEZ1bmN0aW9uQ2FsbEFjdGlvbj4gPT4ge1xuICAgIHJldHVybiBhY3Rpb25zLmV2ZXJ5KCh4KSA9PiB4LnR5cGUgPT09IFwiRnVuY3Rpb25DYWxsXCIpO1xuICB9O1xuXG4gIGNvbnN0IHRyYW5zZm9ybUFjdGlvbnMgPSAoYWN0aW9uczogQXJyYXk8QWN0aW9uPikgPT4ge1xuICAgIGNvbnN0IHZhbGlkQWN0aW9ucyA9IGlzVmFsaWRBY3Rpb25zKGFjdGlvbnMpO1xuXG4gICAgaWYgKCF2YWxpZEFjdGlvbnMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYE9ubHkgJ0Z1bmN0aW9uQ2FsbCcgYWN0aW9ucyB0eXBlcyBhcmUgc3VwcG9ydGVkIGJ5ICR7bWV0YWRhdGEubmFtZX1gXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiBhY3Rpb25zLm1hcCgoeCkgPT4geC5wYXJhbXMpO1xuICB9O1xuXG4gIGNvbnN0IHRyYW5zZm9ybVRyYW5zYWN0aW9ucyA9IChcbiAgICB0cmFuc2FjdGlvbnM6IEFycmF5PE9wdGlvbmFsPFRyYW5zYWN0aW9uLCBcInNpZ25lcklkXCI+PlxuICApID0+IHtcbiAgICByZXR1cm4gdHJhbnNhY3Rpb25zLm1hcCgodHJhbnNhY3Rpb24pID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlY2VpdmVySWQ6IHRyYW5zYWN0aW9uLnJlY2VpdmVySWQsXG4gICAgICAgIGFjdGlvbnM6IHRyYW5zZm9ybUFjdGlvbnModHJhbnNhY3Rpb24uYWN0aW9ucyksXG4gICAgICB9O1xuICAgIH0pO1xuICB9O1xuXG4gIGlmIChfc3RhdGUud2FsbGV0ICYmIF9zdGF0ZS53YWxsZXQuaXNTaWduZWRJbigpKSB7XG4gICAgc2V0dXBFdmVudHMoKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgYXN5bmMgc2lnbkluKHsgY29udHJhY3RJZCwgbWV0aG9kTmFtZXMgfSkge1xuICAgICAgY29uc3QgZXhpc3RpbmdBY2NvdW50cyA9IGdldEFjY291bnRzKCk7XG5cbiAgICAgIGlmIChleGlzdGluZ0FjY291bnRzLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZXhpc3RpbmdBY2NvdW50cztcbiAgICAgIH1cblxuICAgICAgY29uc3QgeyBhY2Nlc3NLZXksIGVycm9yIH0gPSBhd2FpdCBfc3RhdGUud2FsbGV0LnJlcXVlc3RTaWduSW4oe1xuICAgICAgICBjb250cmFjdElkLFxuICAgICAgICBtZXRob2ROYW1lcyxcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIWFjY2Vzc0tleSB8fCBlcnJvcikge1xuICAgICAgICBhd2FpdCBzaWduT3V0KCk7XG5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICh0eXBlb2YgZXJyb3IgPT09IFwic3RyaW5nXCIgPyBlcnJvciA6IGVycm9yLnR5cGUpIHx8XG4gICAgICAgICAgICBcIkZhaWxlZCB0byBzaWduIGluXCJcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgc2V0dXBFdmVudHMoKTtcblxuICAgICAgcmV0dXJuIGdldEFjY291bnRzKCk7XG4gICAgfSxcblxuICAgIHNpZ25PdXQsXG5cbiAgICBhc3luYyBnZXRBY2NvdW50cygpIHtcbiAgICAgIHJldHVybiBnZXRBY2NvdW50cygpO1xuICAgIH0sXG5cbiAgICBhc3luYyB2ZXJpZnlPd25lcih7IG1lc3NhZ2UgfSkge1xuICAgICAgbG9nZ2VyLmxvZyhcIlNlbmRlcjp2ZXJpZnlPd25lclwiLCB7IG1lc3NhZ2UgfSk7XG5cbiAgICAgIGNvbnN0IGFjY291bnQgPSBfc3RhdGUud2FsbGV0LmFjY291bnQoKTtcblxuICAgICAgaWYgKCFhY2NvdW50KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIldhbGxldCBub3Qgc2lnbmVkIGluXCIpO1xuICAgICAgfVxuXG4gICAgICAvLyBOb3RlOiBXaGVuIHRoZSB3YWxsZXQgaXMgbG9ja2VkLCBTZW5kZXIgcmV0dXJucyBhbiBlbXB0eSBTaWduZXIgaW50ZXJmYWNlLlxuICAgICAgLy8gRXZlbiBhZnRlciB1bmxvY2tpbmcgdGhlIHdhbGxldCwgdGhlIHVzZXIgd2lsbCBuZWVkIHRvIHJlZnJlc2ggdG8gZ2FpblxuICAgICAgLy8gYWNjZXNzIHRvIHRoZXNlIG1ldGhvZHMuXG4gICAgICBpZiAoIWFjY291bnQuY29ubmVjdGlvbi5zaWduZXIuc2lnbk1lc3NhZ2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV2FsbGV0IGlzIGxvY2tlZFwiKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgbmV0d29ya0lkID0gb3B0aW9ucy5uZXR3b3JrLm5ldHdvcmtJZDtcbiAgICAgIGNvbnN0IGFjY291bnRJZCA9IGFjY291bnQuYWNjb3VudElkO1xuICAgICAgY29uc3QgcHViS2V5ID0gYXdhaXQgYWNjb3VudC5jb25uZWN0aW9uLnNpZ25lci5nZXRQdWJsaWNLZXkoXG4gICAgICAgIGFjY291bnRJZCxcbiAgICAgICAgbmV0d29ya0lkXG4gICAgICApO1xuICAgICAgY29uc3QgYmxvY2sgPSBhd2FpdCBwcm92aWRlci5ibG9jayh7IGZpbmFsaXR5OiBcImZpbmFsXCIgfSk7XG5cbiAgICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICAgIGFjY291bnRJZCxcbiAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgYmxvY2tJZDogYmxvY2suaGVhZGVyLmhhc2gsXG4gICAgICAgIHB1YmxpY0tleTogQnVmZmVyLmZyb20ocHViS2V5LmRhdGEpLnRvU3RyaW5nKFwiYmFzZTY0XCIpLFxuICAgICAgICBrZXlUeXBlOiBwdWJLZXkua2V5VHlwZSxcbiAgICAgIH07XG4gICAgICBjb25zdCBlbmNvZGVkID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG5cbiAgICAgIGNvbnN0IHNpZ25lZCA9IGF3YWl0IGFjY291bnQuY29ubmVjdGlvbi5zaWduZXIuc2lnbk1lc3NhZ2UoXG4gICAgICAgIG5ldyBVaW50OEFycmF5KEJ1ZmZlci5mcm9tKGVuY29kZWQpKSxcbiAgICAgICAgYWNjb3VudElkLFxuICAgICAgICBuZXR3b3JrSWRcbiAgICAgICk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmRhdGEsXG4gICAgICAgIHNpZ25hdHVyZTogQnVmZmVyLmZyb20oc2lnbmVkLnNpZ25hdHVyZSkudG9TdHJpbmcoXCJiYXNlNjRcIiksXG4gICAgICAgIGtleVR5cGU6IHNpZ25lZC5wdWJsaWNLZXkua2V5VHlwZSxcbiAgICAgIH07XG4gICAgfSxcblxuICAgIGFzeW5jIHNpZ25BbmRTZW5kVHJhbnNhY3Rpb24oeyBzaWduZXJJZCwgcmVjZWl2ZXJJZCwgYWN0aW9ucyB9KSB7XG4gICAgICBsb2dnZXIubG9nKFwic2lnbkFuZFNlbmRUcmFuc2FjdGlvblwiLCB7IHNpZ25lcklkLCByZWNlaXZlcklkLCBhY3Rpb25zIH0pO1xuXG4gICAgICBjb25zdCB7IGNvbnRyYWN0IH0gPSBzdG9yZS5nZXRTdGF0ZSgpO1xuXG4gICAgICBpZiAoIV9zdGF0ZS53YWxsZXQuaXNTaWduZWRJbigpIHx8ICFjb250cmFjdCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJXYWxsZXQgbm90IHNpZ25lZCBpblwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIF9zdGF0ZS53YWxsZXRcbiAgICAgICAgLnNpZ25BbmRTZW5kVHJhbnNhY3Rpb24oe1xuICAgICAgICAgIHJlY2VpdmVySWQ6IHJlY2VpdmVySWQgfHwgY29udHJhY3QuY29udHJhY3RJZCxcbiAgICAgICAgICBhY3Rpb25zOiB0cmFuc2Zvcm1BY3Rpb25zKGFjdGlvbnMpLFxuICAgICAgICB9KVxuICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgaWYgKHJlcy5lcnJvcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHJlcy5lcnJvcik7XG4gICAgICAgICAgfSBlbHNlIGlmIChyZXMucmVzcG9uc2UgJiYgXCJlcnJvclwiIGluIHJlcy5yZXNwb25zZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHJlcy5yZXNwb25zZS5lcnJvci5tZXNzYWdlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBTaG91bGRuJ3QgaGFwcGVuIGJ1dCBhdm9pZHMgaW5jb25zaXN0ZW50IHJlc3BvbnNlcy5cbiAgICAgICAgICBpZiAoIXJlcy5yZXNwb25zZT8ubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHJlc3BvbnNlXCIpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiByZXMucmVzcG9uc2VbMF07XG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBhc3luYyBzaWduQW5kU2VuZFRyYW5zYWN0aW9ucyh7IHRyYW5zYWN0aW9ucyB9KSB7XG4gICAgICBsb2dnZXIubG9nKFwic2lnbkFuZFNlbmRUcmFuc2FjdGlvbnNcIiwgeyB0cmFuc2FjdGlvbnMgfSk7XG5cbiAgICAgIGlmICghX3N0YXRlLndhbGxldC5pc1NpZ25lZEluKCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV2FsbGV0IG5vdCBzaWduZWQgaW5cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfc3RhdGUud2FsbGV0XG4gICAgICAgIC5yZXF1ZXN0U2lnblRyYW5zYWN0aW9ucyh7XG4gICAgICAgICAgdHJhbnNhY3Rpb25zOiB0cmFuc2Zvcm1UcmFuc2FjdGlvbnModHJhbnNhY3Rpb25zKSxcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgIGlmIChyZXMuZXJyb3IpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihyZXMuZXJyb3IpO1xuICAgICAgICAgIH0gZWxzZSBpZiAocmVzLnJlc3BvbnNlICYmIFwiZXJyb3JcIiBpbiByZXMucmVzcG9uc2UpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihyZXMucmVzcG9uc2UuZXJyb3IubWVzc2FnZSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gU2hvdWxkbid0IGhhcHBlbiBidXQgYXZvaWRzIGluY29uc2lzdGVudCByZXNwb25zZXMuXG4gICAgICAgICAgaWYgKCFyZXMucmVzcG9uc2U/Lmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCByZXNwb25zZVwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gcmVzLnJlc3BvbnNlO1xuICAgICAgICB9KTtcbiAgICB9LFxuICB9O1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNldHVwU2VuZGVyKHtcbiAgaWNvblVybCA9IFwiLi9hc3NldHMvc2VuZGVyLWljb24ucG5nXCIsXG4gIGRlcHJlY2F0ZWQgPSBmYWxzZSxcbn06IFNlbmRlclBhcmFtcyA9IHt9KTogV2FsbGV0TW9kdWxlRmFjdG9yeTxJbmplY3RlZFdhbGxldD4ge1xuICByZXR1cm4gYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IG1vYmlsZSA9IGlzTW9iaWxlKCk7XG4gICAgY29uc3QgaW5zdGFsbGVkID0gYXdhaXQgaXNJbnN0YWxsZWQoKTtcblxuICAgIGlmIChtb2JpbGUpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIC8vIEFkZCBleHRyYSB3YWl0IHRvIGVuc3VyZSBTZW5kZXIncyBzaWduIGluIHN0YXR1cyBpcyByZWFkIGZyb20gdGhlXG4gICAgLy8gYnJvd3NlciBleHRlbnNpb24gYmFja2dyb3VuZCBlbnYuXG4gICAgYXdhaXQgd2FpdEZvcigoKSA9PiAhIXdpbmRvdy5uZWFyPy5pc1NpZ25lZEluKCksIHsgdGltZW91dDogMzAwIH0pLmNhdGNoKFxuICAgICAgKCkgPT4gZmFsc2VcbiAgICApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiBcInNlbmRlclwiLFxuICAgICAgdHlwZTogXCJpbmplY3RlZFwiLFxuICAgICAgbWV0YWRhdGE6IHtcbiAgICAgICAgbmFtZTogXCJTZW5kZXJcIixcbiAgICAgICAgZGVzY3JpcHRpb246IG51bGwsXG4gICAgICAgIGljb25VcmwsXG4gICAgICAgIGRvd25sb2FkVXJsOlxuICAgICAgICAgIFwiaHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvc2VuZGVyLXdhbGxldC9lcGFwaWhkcGxhamNkbm5rZGVpYWhsZ2lnb2Zsb2liZ1wiLFxuICAgICAgICBkZXByZWNhdGVkLFxuICAgICAgICBhdmFpbGFibGU6IGluc3RhbGxlZCxcbiAgICAgIH0sXG4gICAgICBpbml0OiBTZW5kZXIsXG4gICAgfTtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJpc01vYmlsZSIsIndhaXRGb3IiLCJpc0luc3RhbGxlZCIsIndpbmRvdyIsIm5lYXIiLCJpc1NlbmRlciIsImNhdGNoIiwic2V0dXBTZW5kZXJTdGF0ZSIsIndhbGxldCIsIlNlbmRlciIsIm9wdGlvbnMiLCJtZXRhZGF0YSIsInN0b3JlIiwicHJvdmlkZXIiLCJlbWl0dGVyIiwibG9nZ2VyIiwiX3N0YXRlIiwiY2xlYW51cCIsImtleSIsImNhbGxiYWNrcyIsInJlbW92ZSIsInNpZ25PdXQiLCJpc1NpZ25lZEluIiwicmVzIiwiZXJyb3IiLCJFcnJvciIsInR5cGUiLCJtZXNzYWdlIiwibG9nIiwic2V0dXBFdmVudHMiLCJvbiIsIm5ld0FjY291bnRJZCIsImVtaXQiLCJycGMiLCJuZXR3b3JrIiwibmV0d29ya0lkIiwiZ2V0QWNjb3VudHMiLCJhY2NvdW50SWQiLCJnZXRBY2NvdW50SWQiLCJpc1ZhbGlkQWN0aW9ucyIsImFjdGlvbnMiLCJldmVyeSIsIngiLCJ0cmFuc2Zvcm1BY3Rpb25zIiwidmFsaWRBY3Rpb25zIiwibmFtZSIsIm1hcCIsInBhcmFtcyIsInRyYW5zZm9ybVRyYW5zYWN0aW9ucyIsInRyYW5zYWN0aW9ucyIsInRyYW5zYWN0aW9uIiwicmVjZWl2ZXJJZCIsInNpZ25JbiIsImNvbnRyYWN0SWQiLCJtZXRob2ROYW1lcyIsImV4aXN0aW5nQWNjb3VudHMiLCJsZW5ndGgiLCJhY2Nlc3NLZXkiLCJyZXF1ZXN0U2lnbkluIiwidmVyaWZ5T3duZXIiLCJhY2NvdW50IiwiY29ubmVjdGlvbiIsInNpZ25lciIsInNpZ25NZXNzYWdlIiwicHViS2V5IiwiZ2V0UHVibGljS2V5IiwiYmxvY2siLCJmaW5hbGl0eSIsImRhdGEiLCJibG9ja0lkIiwiaGVhZGVyIiwiaGFzaCIsInB1YmxpY0tleSIsIkJ1ZmZlciIsImZyb20iLCJ0b1N0cmluZyIsImtleVR5cGUiLCJlbmNvZGVkIiwiSlNPTiIsInN0cmluZ2lmeSIsInNpZ25lZCIsIlVpbnQ4QXJyYXkiLCJzaWduYXR1cmUiLCJzaWduQW5kU2VuZFRyYW5zYWN0aW9uIiwic2lnbmVySWQiLCJjb250cmFjdCIsImdldFN0YXRlIiwidGhlbiIsInJlc3BvbnNlIiwic2lnbkFuZFNlbmRUcmFuc2FjdGlvbnMiLCJyZXF1ZXN0U2lnblRyYW5zYWN0aW9ucyIsInNldHVwU2VuZGVyIiwiaWNvblVybCIsImRlcHJlY2F0ZWQiLCJtb2JpbGUiLCJpbnN0YWxsZWQiLCJ0aW1lb3V0IiwiaWQiLCJkZXNjcmlwdGlvbiIsImRvd25sb2FkVXJsIiwiYXZhaWxhYmxlIiwiaW5pdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../packages/sender/src/lib/sender.ts\n");

/***/ }),

/***/ "../../packages/wallet-connect/src/index.ts":
/*!**************************************************!*\
  !*** ../../packages/wallet-connect/src/index.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupWalletConnect": () => (/* reexport safe */ _lib_wallet_connect__WEBPACK_IMPORTED_MODULE_0__.setupWalletConnect)
/* harmony export */ });
/* harmony import */ var _lib_wallet_connect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/wallet-connect */ "../../packages/wallet-connect/src/lib/wallet-connect.ts");


/***/ }),

/***/ "../../packages/wallet-connect/src/lib/wallet-connect-client.ts":
/*!**********************************************************************!*\
  !*** ../../packages/wallet-connect/src/lib/wallet-connect-client.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/sign-client */ \"@walletconnect/sign-client\");\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/qrcode-modal */ \"@walletconnect/qrcode-modal\");\n/* harmony import */ var _walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_1__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nclass WalletConnectClient {\n  constructor() {\n    _defineProperty(this, \"client\", void 0);\n  }\n\n  async init(opts) {\n    this.client = await _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_0___default().init(opts);\n  }\n\n  get session() {\n    return this.client.session;\n  }\n\n  on(event, callback) {\n    this.client.on(event, callback);\n    return {\n      remove: () => this.client.off(event, callback)\n    };\n  }\n\n  once(event, callback) {\n    this.client.once(event, callback);\n  }\n\n  async connect(params) {\n    return new Promise((resolve, reject) => {\n      this.client.connect(params).then(({\n        uri,\n        approval\n      }) => {\n        if (uri) {\n          _walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_1___default().open(uri, () => {\n            reject(new Error(\"User cancelled pairing\"));\n          });\n        }\n\n        approval().then(resolve).catch(reject).finally(() => _walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_1___default().close());\n      }).catch(reject);\n    });\n  }\n\n  async request(params) {\n    return this.client.request(params);\n  }\n\n  async disconnect(params) {\n    return this.client.disconnect(params);\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WalletConnectClient);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvd2FsbGV0LWNvbm5lY3Qvc3JjL2xpYi93YWxsZXQtY29ubmVjdC1jbGllbnQudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBRUE7O0FBR0EsTUFBTUUsbUJBQU4sQ0FBMEI7RUFBQTtJQUFBO0VBQUE7O0VBR2QsTUFBSkMsSUFBSSxDQUFDQyxJQUFELEVBQWdDO0lBQ3hDLEtBQUtDLE1BQUwsR0FBYyxNQUFNTCxzRUFBQSxDQUFZSSxJQUFaLENBQXBCO0VBQ0Q7O0VBRVUsSUFBUEUsT0FBTyxHQUFHO0lBQ1osT0FBTyxLQUFLRCxNQUFMLENBQVlDLE9BQW5CO0VBQ0Q7O0VBRURDLEVBQUUsQ0FDQUMsS0FEQSxFQUVBQyxRQUZBLEVBR0E7SUFDQSxLQUFLSixNQUFMLENBQVlFLEVBQVosQ0FBZUMsS0FBZixFQUFzQkMsUUFBdEI7SUFFQSxPQUFPO01BQ0xDLE1BQU0sRUFBRSxNQUFNLEtBQUtMLE1BQUwsQ0FBWU0sR0FBWixDQUFnQkgsS0FBaEIsRUFBdUJDLFFBQXZCO0lBRFQsQ0FBUDtFQUdEOztFQUVERyxJQUFJLENBQ0ZKLEtBREUsRUFFRkMsUUFGRSxFQUdGO0lBQ0EsS0FBS0osTUFBTCxDQUFZTyxJQUFaLENBQWlCSixLQUFqQixFQUF3QkMsUUFBeEI7RUFDRDs7RUFFWSxNQUFQSSxPQUFPLENBQUNDLE1BQUQsRUFBb0M7SUFDL0MsT0FBTyxJQUFJQyxPQUFKLENBQWlDLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtNQUMzRCxLQUFLWixNQUFMLENBQ0dRLE9BREgsQ0FDV0MsTUFEWCxFQUVHSSxJQUZILENBRVEsQ0FBQztRQUFFQyxHQUFGO1FBQU9DO01BQVAsQ0FBRCxLQUF1QjtRQUMzQixJQUFJRCxHQUFKLEVBQVM7VUFDUGxCLHVFQUFBLENBQWlCa0IsR0FBakIsRUFBc0IsTUFBTTtZQUMxQkYsTUFBTSxDQUFDLElBQUlLLEtBQUosQ0FBVSx3QkFBVixDQUFELENBQU47VUFDRCxDQUZEO1FBR0Q7O1FBRURGLFFBQVEsR0FDTEYsSUFESCxDQUNRRixPQURSLEVBRUdPLEtBRkgsQ0FFU04sTUFGVCxFQUdHTyxPQUhILENBR1csTUFBTXZCLHdFQUFBLEVBSGpCO01BSUQsQ0FiSCxFQWNHc0IsS0FkSCxDQWNTTixNQWRUO0lBZUQsQ0FoQk0sQ0FBUDtFQWlCRDs7RUFFWSxNQUFQUyxPQUFPLENBQ1haLE1BRFcsRUFFUTtJQUNuQixPQUFPLEtBQUtULE1BQUwsQ0FBWXFCLE9BQVosQ0FBb0JaLE1BQXBCLENBQVA7RUFDRDs7RUFFZSxNQUFWYSxVQUFVLENBQUNiLE1BQUQsRUFBdUM7SUFDckQsT0FBTyxLQUFLVCxNQUFMLENBQVlzQixVQUFaLENBQXVCYixNQUF2QixDQUFQO0VBQ0Q7O0FBekR1Qjs7QUE0RDFCLGlFQUFlWixtQkFBZiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9wYWNrYWdlcy93YWxsZXQtY29ubmVjdC9zcmMvbGliL3dhbGxldC1jb25uZWN0LWNsaWVudC50cz9hMGRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDbGllbnQgZnJvbSBcIkB3YWxsZXRjb25uZWN0L3NpZ24tY2xpZW50XCI7XG5pbXBvcnQgdHlwZSB7IFNpZ25DbGllbnRUeXBlcywgRW5naW5lVHlwZXMgfSBmcm9tIFwiQHdhbGxldGNvbm5lY3QvdHlwZXNcIjtcbmltcG9ydCBRUkNvZGVNb2RhbCBmcm9tIFwiQHdhbGxldGNvbm5lY3QvcXJjb2RlLW1vZGFsXCI7XG5pbXBvcnQgeyBTZXNzaW9uVHlwZXMgfSBmcm9tIFwiQHdhbGxldGNvbm5lY3QvdHlwZXMvZGlzdC9janMvc2lnbi1jbGllbnQvc2Vzc2lvblwiO1xuXG5jbGFzcyBXYWxsZXRDb25uZWN0Q2xpZW50IHtcbiAgcHJpdmF0ZSBjbGllbnQ6IENsaWVudDtcblxuICBhc3luYyBpbml0KG9wdHM6IFNpZ25DbGllbnRUeXBlcy5PcHRpb25zKSB7XG4gICAgdGhpcy5jbGllbnQgPSBhd2FpdCBDbGllbnQuaW5pdChvcHRzKTtcbiAgfVxuXG4gIGdldCBzZXNzaW9uKCkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5zZXNzaW9uO1xuICB9XG5cbiAgb248RXZlbnQgZXh0ZW5kcyBTaWduQ2xpZW50VHlwZXMuRXZlbnQ+KFxuICAgIGV2ZW50OiBFdmVudCxcbiAgICBjYWxsYmFjazogKGFyZ3M6IFNpZ25DbGllbnRUeXBlcy5FdmVudEFyZ3VtZW50c1tFdmVudF0pID0+IHZvaWRcbiAgKSB7XG4gICAgdGhpcy5jbGllbnQub24oZXZlbnQsIGNhbGxiYWNrKTtcblxuICAgIHJldHVybiB7XG4gICAgICByZW1vdmU6ICgpID0+IHRoaXMuY2xpZW50Lm9mZihldmVudCwgY2FsbGJhY2spLFxuICAgIH07XG4gIH1cblxuICBvbmNlPEV2ZW50IGV4dGVuZHMgU2lnbkNsaWVudFR5cGVzLkV2ZW50PihcbiAgICBldmVudDogRXZlbnQsXG4gICAgY2FsbGJhY2s6IChhcmdzOiBTaWduQ2xpZW50VHlwZXMuRXZlbnRBcmd1bWVudHNbRXZlbnRdKSA9PiB2b2lkXG4gICkge1xuICAgIHRoaXMuY2xpZW50Lm9uY2UoZXZlbnQsIGNhbGxiYWNrKTtcbiAgfVxuXG4gIGFzeW5jIGNvbm5lY3QocGFyYW1zOiBFbmdpbmVUeXBlcy5Db25uZWN0UGFyYW1zKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlPFNlc3Npb25UeXBlcy5TdHJ1Y3Q+KChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuY2xpZW50XG4gICAgICAgIC5jb25uZWN0KHBhcmFtcylcbiAgICAgICAgLnRoZW4oKHsgdXJpLCBhcHByb3ZhbCB9KSA9PiB7XG4gICAgICAgICAgaWYgKHVyaSkge1xuICAgICAgICAgICAgUVJDb2RlTW9kYWwub3Blbih1cmksICgpID0+IHtcbiAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIlVzZXIgY2FuY2VsbGVkIHBhaXJpbmdcIikpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYXBwcm92YWwoKVxuICAgICAgICAgICAgLnRoZW4ocmVzb2x2ZSlcbiAgICAgICAgICAgIC5jYXRjaChyZWplY3QpXG4gICAgICAgICAgICAuZmluYWxseSgoKSA9PiBRUkNvZGVNb2RhbC5jbG9zZSgpKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKHJlamVjdCk7XG4gICAgfSk7XG4gIH1cblxuICBhc3luYyByZXF1ZXN0PFJlc3BvbnNlPihcbiAgICBwYXJhbXM6IEVuZ2luZVR5cGVzLlJlcXVlc3RQYXJhbXNcbiAgKTogUHJvbWlzZTxSZXNwb25zZT4ge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5yZXF1ZXN0KHBhcmFtcyk7XG4gIH1cblxuICBhc3luYyBkaXNjb25uZWN0KHBhcmFtczogRW5naW5lVHlwZXMuRGlzY29ubmVjdFBhcmFtcykge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5kaXNjb25uZWN0KHBhcmFtcyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgV2FsbGV0Q29ubmVjdENsaWVudDtcbiJdLCJuYW1lcyI6WyJDbGllbnQiLCJRUkNvZGVNb2RhbCIsIldhbGxldENvbm5lY3RDbGllbnQiLCJpbml0Iiwib3B0cyIsImNsaWVudCIsInNlc3Npb24iLCJvbiIsImV2ZW50IiwiY2FsbGJhY2siLCJyZW1vdmUiLCJvZmYiLCJvbmNlIiwiY29ubmVjdCIsInBhcmFtcyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwidGhlbiIsInVyaSIsImFwcHJvdmFsIiwib3BlbiIsIkVycm9yIiwiY2F0Y2giLCJmaW5hbGx5IiwiY2xvc2UiLCJyZXF1ZXN0IiwiZGlzY29ubmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../packages/wallet-connect/src/lib/wallet-connect-client.ts\n");

/***/ }),

/***/ "../../packages/wallet-connect/src/lib/wallet-connect.ts":
/*!***************************************************************!*\
  !*** ../../packages/wallet-connect/src/lib/wallet-connect.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupWalletConnect\": () => (/* binding */ setupWalletConnect)\n/* harmony export */ });\n/* harmony import */ var _near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @near-wallet-selector/core */ \"../../packages/core/src/index.ts\");\n/* harmony import */ var _wallet_connect_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wallet-connect-client */ \"../../packages/wallet-connect/src/lib/wallet-connect-client.ts\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nconst WC_METHODS = [\"near_signAndSendTransaction\", \"near_signAndSendTransactions\"];\nconst WC_EVENTS = [\"accountsChanged\"];\n\nconst setupWalletConnectState = async params => {\n  const client = new _wallet_connect_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  let session = null;\n  await client.init({\n    projectId: params.projectId,\n    metadata: params.metadata,\n    relayUrl: params.relayUrl\n  });\n\n  if (client.session.length) {\n    const lastKeyIndex = client.session.keys.length - 1;\n    session = client.session.get(client.session.keys[lastKeyIndex]);\n  }\n\n  return {\n    client,\n    session,\n    subscriptions: []\n  };\n};\n\nconst WalletConnect = async ({\n  metadata,\n  options,\n  store,\n  params,\n  emitter,\n  logger\n}) => {\n  const _state = await setupWalletConnectState(params);\n\n  const getChainId = () => {\n    if (params.chainId) {\n      return params.chainId;\n    }\n\n    const {\n      networkId\n    } = options.network;\n\n    if ([\"mainnet\", \"testnet\"].includes(networkId)) {\n      return `near:${networkId}`;\n    }\n\n    throw new Error(\"Invalid chain id\");\n  };\n\n  const getAccounts = () => {\n    return (_state.session?.namespaces[\"near\"].accounts || []).map(x => ({\n      accountId: x.split(\":\")[2]\n    }));\n  };\n\n  const cleanup = () => {\n    _state.subscriptions.forEach(subscription => subscription.remove());\n\n    _state.subscriptions = [];\n    _state.session = null;\n  };\n\n  const signOut = async () => {\n    if (_state.session) {\n      await _state.client.disconnect({\n        topic: _state.session.topic,\n        reason: {\n          code: 5900,\n          message: \"User disconnected\"\n        }\n      });\n    }\n\n    cleanup();\n  };\n\n  const setupEvents = () => {\n    _state.subscriptions.push(_state.client.on(\"session_update\", event => {\n      logger.log(\"Session Update\", event);\n\n      if (event.topic === _state.session?.topic) {\n        _state.session = _objectSpread(_objectSpread({}, _state.client.session.get(event.topic)), {}, {\n          namespaces: event.params.namespaces\n        });\n        emitter.emit(\"accountsChanged\", {\n          accounts: getAccounts()\n        });\n      }\n    }));\n\n    _state.subscriptions.push(_state.client.on(\"session_delete\", async event => {\n      logger.log(\"Session Deleted\", event);\n\n      if (event.topic === _state.session?.topic) {\n        cleanup();\n        emitter.emit(\"signedOut\", null);\n      }\n    }));\n  };\n\n  if (_state.session) {\n    setupEvents();\n  }\n\n  return {\n    async signIn() {\n      const existingAccounts = getAccounts();\n\n      if (existingAccounts.length) {\n        return existingAccounts;\n      }\n\n      try {\n        _state.session = await _state.client.connect({\n          requiredNamespaces: {\n            near: {\n              chains: [getChainId()],\n              methods: WC_METHODS,\n              events: WC_EVENTS\n            }\n          }\n        });\n        setupEvents();\n        return getAccounts();\n      } catch (err) {\n        await signOut();\n        throw err;\n      }\n    },\n\n    signOut,\n\n    async getAccounts() {\n      return getAccounts();\n    },\n\n    async verifyOwner({\n      message\n    }) {\n      logger.log(\"WalletConnect:verifyOwner\", {\n        message\n      });\n      throw new Error(`Method not supported by ${metadata.name}`);\n    },\n\n    async signAndSendTransaction({\n      signerId,\n      receiverId,\n      actions\n    }) {\n      logger.log(\"signAndSendTransaction\", {\n        signerId,\n        receiverId,\n        actions\n      });\n      const {\n        contract\n      } = store.getState();\n\n      if (!_state.session || !contract) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      const account = (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_0__.getActiveAccount)(store.getState());\n\n      if (!account) {\n        throw new Error(\"No active account\");\n      }\n\n      const transaction = {\n        signerId: signerId || account.accountId,\n        receiverId: receiverId || contract.contractId,\n        actions\n      };\n      return _state.client.request({\n        topic: _state.session.topic,\n        chainId: getChainId(),\n        request: {\n          method: \"near_signAndSendTransaction\",\n          params: {\n            transaction\n          }\n        }\n      });\n    },\n\n    async signAndSendTransactions({\n      transactions\n    }) {\n      logger.log(\"signAndSendTransactions\", {\n        transactions\n      });\n\n      if (!_state.session) {\n        throw new Error(\"Wallet not signed in\");\n      }\n\n      return _state.client.request({\n        topic: _state.session.topic,\n        chainId: getChainId(),\n        request: {\n          method: \"near_signAndSendTransactions\",\n          params: {\n            transactions\n          }\n        }\n      });\n    }\n\n  };\n};\n\nfunction setupWalletConnect({\n  projectId,\n  metadata,\n  chainId,\n  relayUrl = \"wss://relay.walletconnect.com\",\n  iconUrl = \"./assets/wallet-connect-icon.png\",\n  deprecated = false\n}) {\n  return async () => {\n    return {\n      id: \"wallet-connect\",\n      type: \"bridge\",\n      metadata: {\n        name: \"WalletConnect\",\n        description: null,\n        iconUrl,\n        deprecated,\n        available: true\n      },\n      init: options => {\n        return WalletConnect(_objectSpread(_objectSpread({}, options), {}, {\n          params: {\n            projectId,\n            metadata,\n            relayUrl,\n            chainId\n          }\n        }));\n      }\n    };\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../packages/wallet-connect/src/lib/wallet-connect.ts\n");

/***/ }),

/***/ "../../packages/wallet-utils/src/index.ts":
/*!************************************************!*\
  !*** ../../packages/wallet-utils/src/index.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAction": () => (/* reexport safe */ _lib_wallet_utils__WEBPACK_IMPORTED_MODULE_0__.createAction),
/* harmony export */   "signTransactions": () => (/* reexport safe */ _lib_wallet_utils__WEBPACK_IMPORTED_MODULE_0__.signTransactions)
/* harmony export */ });
/* harmony import */ var _lib_wallet_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/wallet-utils */ "../../packages/wallet-utils/src/lib/wallet-utils.ts");


/***/ }),

/***/ "../../packages/wallet-utils/src/lib/create-action.ts":
/*!************************************************************!*\
  !*** ../../packages/wallet-utils/src/lib/create-action.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAction\": () => (/* binding */ createAction)\n/* harmony export */ });\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! near-api-js */ \"near-api-js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst getAccessKey = permission => {\n  if (permission === \"FullAccess\") {\n    return near_api_js__WEBPACK_IMPORTED_MODULE_1__.transactions.fullAccessKey();\n  }\n\n  const {\n    receiverId,\n    methodNames = []\n  } = permission;\n  const allowance = permission.allowance ? new bn_js__WEBPACK_IMPORTED_MODULE_0__.BN(permission.allowance) : undefined;\n  return near_api_js__WEBPACK_IMPORTED_MODULE_1__.transactions.functionCallAccessKey(receiverId, methodNames, allowance);\n};\n\nconst createAction = action => {\n  switch (action.type) {\n    case \"CreateAccount\":\n      return near_api_js__WEBPACK_IMPORTED_MODULE_1__.transactions.createAccount();\n\n    case \"DeployContract\":\n      {\n        const {\n          code\n        } = action.params;\n        return near_api_js__WEBPACK_IMPORTED_MODULE_1__.transactions.deployContract(code);\n      }\n\n    case \"FunctionCall\":\n      {\n        const {\n          methodName,\n          args,\n          gas,\n          deposit\n        } = action.params;\n        return near_api_js__WEBPACK_IMPORTED_MODULE_1__.transactions.functionCall(methodName, args, new bn_js__WEBPACK_IMPORTED_MODULE_0__.BN(gas), new bn_js__WEBPACK_IMPORTED_MODULE_0__.BN(deposit));\n      }\n\n    case \"Transfer\":\n      {\n        const {\n          deposit\n        } = action.params;\n        return near_api_js__WEBPACK_IMPORTED_MODULE_1__.transactions.transfer(new bn_js__WEBPACK_IMPORTED_MODULE_0__.BN(deposit));\n      }\n\n    case \"Stake\":\n      {\n        const {\n          stake,\n          publicKey\n        } = action.params;\n        return near_api_js__WEBPACK_IMPORTED_MODULE_1__.transactions.stake(new bn_js__WEBPACK_IMPORTED_MODULE_0__.BN(stake), near_api_js__WEBPACK_IMPORTED_MODULE_1__.utils.PublicKey.from(publicKey));\n      }\n\n    case \"AddKey\":\n      {\n        const {\n          publicKey,\n          accessKey\n        } = action.params;\n        return near_api_js__WEBPACK_IMPORTED_MODULE_1__.transactions.addKey(near_api_js__WEBPACK_IMPORTED_MODULE_1__.utils.PublicKey.from(publicKey), // TODO: Use accessKey.nonce? near-api-js seems to think 0 is fine?\n        getAccessKey(accessKey.permission));\n      }\n\n    case \"DeleteKey\":\n      {\n        const {\n          publicKey\n        } = action.params;\n        return near_api_js__WEBPACK_IMPORTED_MODULE_1__.transactions.deleteKey(near_api_js__WEBPACK_IMPORTED_MODULE_1__.utils.PublicKey.from(publicKey));\n      }\n\n    case \"DeleteAccount\":\n      {\n        const {\n          beneficiaryId\n        } = action.params;\n        return near_api_js__WEBPACK_IMPORTED_MODULE_1__.transactions.deleteAccount(beneficiaryId);\n      }\n\n    default:\n      throw new Error(\"Invalid action type\");\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvd2FsbGV0LXV0aWxzL3NyYy9saWIvY3JlYXRlLWFjdGlvbi50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7O0FBR0EsTUFBTUcsWUFBWSxHQUFJQyxVQUFELElBQWtDO0VBQ3JELElBQUlBLFVBQVUsS0FBSyxZQUFuQixFQUFpQztJQUMvQixPQUFPRixtRUFBQSxFQUFQO0VBQ0Q7O0VBRUQsTUFBTTtJQUFFSSxVQUFGO0lBQWNDLFdBQVcsR0FBRztFQUE1QixJQUFtQ0gsVUFBekM7RUFDQSxNQUFNSSxTQUFTLEdBQUdKLFVBQVUsQ0FBQ0ksU0FBWCxHQUNkLElBQUlSLHFDQUFKLENBQU9JLFVBQVUsQ0FBQ0ksU0FBbEIsQ0FEYyxHQUVkQyxTQUZKO0VBSUEsT0FBT1AsMkVBQUEsQ0FBbUNJLFVBQW5DLEVBQStDQyxXQUEvQyxFQUE0REMsU0FBNUQsQ0FBUDtBQUNELENBWEQ7O0FBYU8sTUFBTUcsWUFBWSxHQUFJQyxNQUFELElBQW9CO0VBQzlDLFFBQVFBLE1BQU0sQ0FBQ0MsSUFBZjtJQUNFLEtBQUssZUFBTDtNQUNFLE9BQU9YLG1FQUFBLEVBQVA7O0lBQ0YsS0FBSyxnQkFBTDtNQUF1QjtRQUNyQixNQUFNO1VBQUVhO1FBQUYsSUFBV0gsTUFBTSxDQUFDSSxNQUF4QjtRQUVBLE9BQU9kLG9FQUFBLENBQTRCYSxJQUE1QixDQUFQO01BQ0Q7O0lBQ0QsS0FBSyxjQUFMO01BQXFCO1FBQ25CLE1BQU07VUFBRUcsVUFBRjtVQUFjQyxJQUFkO1VBQW9CQyxHQUFwQjtVQUF5QkM7UUFBekIsSUFBcUNULE1BQU0sQ0FBQ0ksTUFBbEQ7UUFFQSxPQUFPZCxrRUFBQSxDQUNMZ0IsVUFESyxFQUVMQyxJQUZLLEVBR0wsSUFBSW5CLHFDQUFKLENBQU9vQixHQUFQLENBSEssRUFJTCxJQUFJcEIscUNBQUosQ0FBT3FCLE9BQVAsQ0FKSyxDQUFQO01BTUQ7O0lBQ0QsS0FBSyxVQUFMO01BQWlCO1FBQ2YsTUFBTTtVQUFFQTtRQUFGLElBQWNULE1BQU0sQ0FBQ0ksTUFBM0I7UUFFQSxPQUFPZCw4REFBQSxDQUFzQixJQUFJRixxQ0FBSixDQUFPcUIsT0FBUCxDQUF0QixDQUFQO01BQ0Q7O0lBQ0QsS0FBSyxPQUFMO01BQWM7UUFDWixNQUFNO1VBQUVHLEtBQUY7VUFBU0M7UUFBVCxJQUF1QmIsTUFBTSxDQUFDSSxNQUFwQztRQUVBLE9BQU9kLDJEQUFBLENBQW1CLElBQUlGLHFDQUFKLENBQU93QixLQUFQLENBQW5CLEVBQWtDdkIsNkRBQUEsQ0FBcUJ3QixTQUFyQixDQUFsQyxDQUFQO01BQ0Q7O0lBQ0QsS0FBSyxRQUFMO01BQWU7UUFDYixNQUFNO1VBQUVBLFNBQUY7VUFBYUc7UUFBYixJQUEyQmhCLE1BQU0sQ0FBQ0ksTUFBeEM7UUFFQSxPQUFPZCw0REFBQSxDQUNMRCw2REFBQSxDQUFxQndCLFNBQXJCLENBREssRUFFTDtRQUNBdEIsWUFBWSxDQUFDeUIsU0FBUyxDQUFDeEIsVUFBWCxDQUhQLENBQVA7TUFLRDs7SUFDRCxLQUFLLFdBQUw7TUFBa0I7UUFDaEIsTUFBTTtVQUFFcUI7UUFBRixJQUFnQmIsTUFBTSxDQUFDSSxNQUE3QjtRQUVBLE9BQU9kLCtEQUFBLENBQXVCRCw2REFBQSxDQUFxQndCLFNBQXJCLENBQXZCLENBQVA7TUFDRDs7SUFDRCxLQUFLLGVBQUw7TUFBc0I7UUFDcEIsTUFBTTtVQUFFTTtRQUFGLElBQW9CbkIsTUFBTSxDQUFDSSxNQUFqQztRQUVBLE9BQU9kLG1FQUFBLENBQTJCNkIsYUFBM0IsQ0FBUDtNQUNEOztJQUNEO01BQ0UsTUFBTSxJQUFJRSxLQUFKLENBQVUscUJBQVYsQ0FBTjtFQWhESjtBQWtERCxDQW5ETSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9wYWNrYWdlcy93YWxsZXQtdXRpbHMvc3JjL2xpYi9jcmVhdGUtYWN0aW9uLnRzPzgzZTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQk4gfSBmcm9tIFwiYm4uanNcIjtcbmltcG9ydCB7IHV0aWxzLCB0cmFuc2FjdGlvbnMgfSBmcm9tIFwibmVhci1hcGktanNcIjtcbmltcG9ydCB0eXBlIHsgQWRkS2V5UGVybWlzc2lvbiwgQWN0aW9uIH0gZnJvbSBcIkBuZWFyLXdhbGxldC1zZWxlY3Rvci9jb3JlXCI7XG5cbmNvbnN0IGdldEFjY2Vzc0tleSA9IChwZXJtaXNzaW9uOiBBZGRLZXlQZXJtaXNzaW9uKSA9PiB7XG4gIGlmIChwZXJtaXNzaW9uID09PSBcIkZ1bGxBY2Nlc3NcIikge1xuICAgIHJldHVybiB0cmFuc2FjdGlvbnMuZnVsbEFjY2Vzc0tleSgpO1xuICB9XG5cbiAgY29uc3QgeyByZWNlaXZlcklkLCBtZXRob2ROYW1lcyA9IFtdIH0gPSBwZXJtaXNzaW9uO1xuICBjb25zdCBhbGxvd2FuY2UgPSBwZXJtaXNzaW9uLmFsbG93YW5jZVxuICAgID8gbmV3IEJOKHBlcm1pc3Npb24uYWxsb3dhbmNlKVxuICAgIDogdW5kZWZpbmVkO1xuXG4gIHJldHVybiB0cmFuc2FjdGlvbnMuZnVuY3Rpb25DYWxsQWNjZXNzS2V5KHJlY2VpdmVySWQsIG1ldGhvZE5hbWVzLCBhbGxvd2FuY2UpO1xufTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUFjdGlvbiA9IChhY3Rpb246IEFjdGlvbikgPT4ge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBcIkNyZWF0ZUFjY291bnRcIjpcbiAgICAgIHJldHVybiB0cmFuc2FjdGlvbnMuY3JlYXRlQWNjb3VudCgpO1xuICAgIGNhc2UgXCJEZXBsb3lDb250cmFjdFwiOiB7XG4gICAgICBjb25zdCB7IGNvZGUgfSA9IGFjdGlvbi5wYXJhbXM7XG5cbiAgICAgIHJldHVybiB0cmFuc2FjdGlvbnMuZGVwbG95Q29udHJhY3QoY29kZSk7XG4gICAgfVxuICAgIGNhc2UgXCJGdW5jdGlvbkNhbGxcIjoge1xuICAgICAgY29uc3QgeyBtZXRob2ROYW1lLCBhcmdzLCBnYXMsIGRlcG9zaXQgfSA9IGFjdGlvbi5wYXJhbXM7XG5cbiAgICAgIHJldHVybiB0cmFuc2FjdGlvbnMuZnVuY3Rpb25DYWxsKFxuICAgICAgICBtZXRob2ROYW1lLFxuICAgICAgICBhcmdzLFxuICAgICAgICBuZXcgQk4oZ2FzKSxcbiAgICAgICAgbmV3IEJOKGRlcG9zaXQpXG4gICAgICApO1xuICAgIH1cbiAgICBjYXNlIFwiVHJhbnNmZXJcIjoge1xuICAgICAgY29uc3QgeyBkZXBvc2l0IH0gPSBhY3Rpb24ucGFyYW1zO1xuXG4gICAgICByZXR1cm4gdHJhbnNhY3Rpb25zLnRyYW5zZmVyKG5ldyBCTihkZXBvc2l0KSk7XG4gICAgfVxuICAgIGNhc2UgXCJTdGFrZVwiOiB7XG4gICAgICBjb25zdCB7IHN0YWtlLCBwdWJsaWNLZXkgfSA9IGFjdGlvbi5wYXJhbXM7XG5cbiAgICAgIHJldHVybiB0cmFuc2FjdGlvbnMuc3Rha2UobmV3IEJOKHN0YWtlKSwgdXRpbHMuUHVibGljS2V5LmZyb20ocHVibGljS2V5KSk7XG4gICAgfVxuICAgIGNhc2UgXCJBZGRLZXlcIjoge1xuICAgICAgY29uc3QgeyBwdWJsaWNLZXksIGFjY2Vzc0tleSB9ID0gYWN0aW9uLnBhcmFtcztcblxuICAgICAgcmV0dXJuIHRyYW5zYWN0aW9ucy5hZGRLZXkoXG4gICAgICAgIHV0aWxzLlB1YmxpY0tleS5mcm9tKHB1YmxpY0tleSksXG4gICAgICAgIC8vIFRPRE86IFVzZSBhY2Nlc3NLZXkubm9uY2U/IG5lYXItYXBpLWpzIHNlZW1zIHRvIHRoaW5rIDAgaXMgZmluZT9cbiAgICAgICAgZ2V0QWNjZXNzS2V5KGFjY2Vzc0tleS5wZXJtaXNzaW9uKVxuICAgICAgKTtcbiAgICB9XG4gICAgY2FzZSBcIkRlbGV0ZUtleVwiOiB7XG4gICAgICBjb25zdCB7IHB1YmxpY0tleSB9ID0gYWN0aW9uLnBhcmFtcztcblxuICAgICAgcmV0dXJuIHRyYW5zYWN0aW9ucy5kZWxldGVLZXkodXRpbHMuUHVibGljS2V5LmZyb20ocHVibGljS2V5KSk7XG4gICAgfVxuICAgIGNhc2UgXCJEZWxldGVBY2NvdW50XCI6IHtcbiAgICAgIGNvbnN0IHsgYmVuZWZpY2lhcnlJZCB9ID0gYWN0aW9uLnBhcmFtcztcblxuICAgICAgcmV0dXJuIHRyYW5zYWN0aW9ucy5kZWxldGVBY2NvdW50KGJlbmVmaWNpYXJ5SWQpO1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhY3Rpb24gdHlwZVwiKTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJCTiIsInV0aWxzIiwidHJhbnNhY3Rpb25zIiwiZ2V0QWNjZXNzS2V5IiwicGVybWlzc2lvbiIsImZ1bGxBY2Nlc3NLZXkiLCJyZWNlaXZlcklkIiwibWV0aG9kTmFtZXMiLCJhbGxvd2FuY2UiLCJ1bmRlZmluZWQiLCJmdW5jdGlvbkNhbGxBY2Nlc3NLZXkiLCJjcmVhdGVBY3Rpb24iLCJhY3Rpb24iLCJ0eXBlIiwiY3JlYXRlQWNjb3VudCIsImNvZGUiLCJwYXJhbXMiLCJkZXBsb3lDb250cmFjdCIsIm1ldGhvZE5hbWUiLCJhcmdzIiwiZ2FzIiwiZGVwb3NpdCIsImZ1bmN0aW9uQ2FsbCIsInRyYW5zZmVyIiwic3Rha2UiLCJwdWJsaWNLZXkiLCJQdWJsaWNLZXkiLCJmcm9tIiwiYWNjZXNzS2V5IiwiYWRkS2V5IiwiZGVsZXRlS2V5IiwiYmVuZWZpY2lhcnlJZCIsImRlbGV0ZUFjY291bnQiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../packages/wallet-utils/src/lib/create-action.ts\n");

/***/ }),

/***/ "../../packages/wallet-utils/src/lib/sign-transactions.ts":
/*!****************************************************************!*\
  !*** ../../packages/wallet-utils/src/lib/sign-transactions.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"signTransactions\": () => (/* binding */ signTransactions)\n/* harmony export */ });\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! near-api-js */ \"near-api-js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _create_action__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-action */ \"../../packages/wallet-utils/src/lib/create-action.ts\");\n\n\nconst signTransactions = async (transactions, signer, network) => {\n  const provider = new near_api_js__WEBPACK_IMPORTED_MODULE_0__.providers.JsonRpcProvider({\n    url: network.nodeUrl\n  });\n  const signedTransactions = [];\n\n  for (let i = 0; i < transactions.length; i++) {\n    const publicKey = await signer.getPublicKey(transactions[i].signerId, network.networkId);\n    const [block, accessKey] = await Promise.all([provider.block({\n      finality: \"final\"\n    }), provider.query({\n      request_type: \"view_access_key\",\n      finality: \"final\",\n      account_id: transactions[i].signerId,\n      public_key: publicKey.toString()\n    })]);\n    const actions = transactions[i].actions.map(action => (0,_create_action__WEBPACK_IMPORTED_MODULE_1__.createAction)(action));\n    const transaction = near_api_js__WEBPACK_IMPORTED_MODULE_0__.transactions.createTransaction(transactions[i].signerId, near_api_js__WEBPACK_IMPORTED_MODULE_0__.utils.PublicKey.from(publicKey.toString()), transactions[i].receiverId, accessKey.nonce + i + 1, actions, near_api_js__WEBPACK_IMPORTED_MODULE_0__.utils.serialize.base_decode(block.header.hash));\n    const response = await near_api_js__WEBPACK_IMPORTED_MODULE_0__.transactions.signTransaction(transaction, signer, transactions[i].signerId, network.networkId);\n    signedTransactions.push(response[1]);\n  }\n\n  return signedTransactions;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvd2FsbGV0LXV0aWxzL3NyYy9saWIvc2lnbi10cmFuc2FjdGlvbnMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBUUE7QUFFTyxNQUFNSyxnQkFBZ0IsR0FBRyxPQUM5QkosWUFEOEIsRUFFOUJLLE1BRjhCLEVBRzlCQyxPQUg4QixLQUkzQjtFQUNILE1BQU1DLFFBQVEsR0FBRyxJQUFJTCxrRUFBSixDQUE4QjtJQUM3Q08sR0FBRyxFQUFFSCxPQUFPLENBQUNJO0VBRGdDLENBQTlCLENBQWpCO0VBSUEsTUFBTUMsa0JBQTZELEdBQUcsRUFBdEU7O0VBRUEsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHWixZQUFZLENBQUNhLE1BQWpDLEVBQXlDRCxDQUFDLEVBQTFDLEVBQThDO0lBQzVDLE1BQU1FLFNBQVMsR0FBRyxNQUFNVCxNQUFNLENBQUNVLFlBQVAsQ0FDdEJmLFlBQVksQ0FBQ1ksQ0FBRCxDQUFaLENBQWdCSSxRQURNLEVBRXRCVixPQUFPLENBQUNXLFNBRmMsQ0FBeEI7SUFLQSxNQUFNLENBQUNDLEtBQUQsRUFBUUMsU0FBUixJQUFxQixNQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxDQUMzQ2QsUUFBUSxDQUFDVyxLQUFULENBQWU7TUFBRUksUUFBUSxFQUFFO0lBQVosQ0FBZixDQUQyQyxFQUUzQ2YsUUFBUSxDQUFDZ0IsS0FBVCxDQUE4QjtNQUM1QkMsWUFBWSxFQUFFLGlCQURjO01BRTVCRixRQUFRLEVBQUUsT0FGa0I7TUFHNUJHLFVBQVUsRUFBRXpCLFlBQVksQ0FBQ1ksQ0FBRCxDQUFaLENBQWdCSSxRQUhBO01BSTVCVSxVQUFVLEVBQUVaLFNBQVMsQ0FBQ2EsUUFBVjtJQUpnQixDQUE5QixDQUYyQyxDQUFaLENBQWpDO0lBVUEsTUFBTUMsT0FBTyxHQUFHNUIsWUFBWSxDQUFDWSxDQUFELENBQVosQ0FBZ0JnQixPQUFoQixDQUF3QkMsR0FBeEIsQ0FBNkJDLE1BQUQsSUFDMUMzQiw0REFBWSxDQUFDMkIsTUFBRCxDQURFLENBQWhCO0lBSUEsTUFBTUMsV0FBVyxHQUFHOUIsdUVBQUEsQ0FDbEJELFlBQVksQ0FBQ1ksQ0FBRCxDQUFaLENBQWdCSSxRQURFLEVBRWxCakIsNkRBQUEsQ0FBcUJlLFNBQVMsQ0FBQ2EsUUFBVixFQUFyQixDQUZrQixFQUdsQjNCLFlBQVksQ0FBQ1ksQ0FBRCxDQUFaLENBQWdCdUIsVUFIRSxFQUlsQmhCLFNBQVMsQ0FBQ2lCLEtBQVYsR0FBa0J4QixDQUFsQixHQUFzQixDQUpKLEVBS2xCZ0IsT0FMa0IsRUFNbEI3QixvRUFBQSxDQUE0Qm1CLEtBQUssQ0FBQ3FCLE1BQU4sQ0FBYUMsSUFBekMsQ0FOa0IsQ0FBcEI7SUFTQSxNQUFNQyxRQUFRLEdBQUcsTUFBTXhDLHFFQUFBLENBQ3JCOEIsV0FEcUIsRUFFckIxQixNQUZxQixFQUdyQkwsWUFBWSxDQUFDWSxDQUFELENBQVosQ0FBZ0JJLFFBSEssRUFJckJWLE9BQU8sQ0FBQ1csU0FKYSxDQUF2QjtJQU9BTixrQkFBa0IsQ0FBQ2dDLElBQW5CLENBQXdCRixRQUFRLENBQUMsQ0FBRCxDQUFoQztFQUNEOztFQUVELE9BQU85QixrQkFBUDtBQUNELENBbkRNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL3BhY2thZ2VzL3dhbGxldC11dGlscy9zcmMvbGliL3NpZ24tdHJhbnNhY3Rpb25zLnRzPzVhN2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgdXRpbHMsXG4gIHRyYW5zYWN0aW9ucyBhcyBuZWFyVHJhbnNhY3Rpb25zLFxuICBTaWduZXIsXG4gIHByb3ZpZGVycyxcbn0gZnJvbSBcIm5lYXItYXBpLWpzXCI7XG5pbXBvcnQgdHlwZSB7IE5ldHdvcmssIFRyYW5zYWN0aW9uIH0gZnJvbSBcIkBuZWFyLXdhbGxldC1zZWxlY3Rvci9jb3JlXCI7XG5pbXBvcnQgdHlwZSB7IEFjY2Vzc0tleVZpZXcgfSBmcm9tIFwibmVhci1hcGktanMvbGliL3Byb3ZpZGVycy9wcm92aWRlclwiO1xuaW1wb3J0IHsgY3JlYXRlQWN0aW9uIH0gZnJvbSBcIi4vY3JlYXRlLWFjdGlvblwiO1xuXG5leHBvcnQgY29uc3Qgc2lnblRyYW5zYWN0aW9ucyA9IGFzeW5jIChcbiAgdHJhbnNhY3Rpb25zOiBBcnJheTxUcmFuc2FjdGlvbj4sXG4gIHNpZ25lcjogU2lnbmVyLFxuICBuZXR3b3JrOiBOZXR3b3JrXG4pID0+IHtcbiAgY29uc3QgcHJvdmlkZXIgPSBuZXcgcHJvdmlkZXJzLkpzb25ScGNQcm92aWRlcih7XG4gICAgdXJsOiBuZXR3b3JrLm5vZGVVcmwsXG4gIH0pO1xuXG4gIGNvbnN0IHNpZ25lZFRyYW5zYWN0aW9uczogQXJyYXk8bmVhclRyYW5zYWN0aW9ucy5TaWduZWRUcmFuc2FjdGlvbj4gPSBbXTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHRyYW5zYWN0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHB1YmxpY0tleSA9IGF3YWl0IHNpZ25lci5nZXRQdWJsaWNLZXkoXG4gICAgICB0cmFuc2FjdGlvbnNbaV0uc2lnbmVySWQsXG4gICAgICBuZXR3b3JrLm5ldHdvcmtJZFxuICAgICk7XG5cbiAgICBjb25zdCBbYmxvY2ssIGFjY2Vzc0tleV0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICBwcm92aWRlci5ibG9jayh7IGZpbmFsaXR5OiBcImZpbmFsXCIgfSksXG4gICAgICBwcm92aWRlci5xdWVyeTxBY2Nlc3NLZXlWaWV3Pih7XG4gICAgICAgIHJlcXVlc3RfdHlwZTogXCJ2aWV3X2FjY2Vzc19rZXlcIixcbiAgICAgICAgZmluYWxpdHk6IFwiZmluYWxcIixcbiAgICAgICAgYWNjb3VudF9pZDogdHJhbnNhY3Rpb25zW2ldLnNpZ25lcklkLFxuICAgICAgICBwdWJsaWNfa2V5OiBwdWJsaWNLZXkudG9TdHJpbmcoKSxcbiAgICAgIH0pLFxuICAgIF0pO1xuXG4gICAgY29uc3QgYWN0aW9ucyA9IHRyYW5zYWN0aW9uc1tpXS5hY3Rpb25zLm1hcCgoYWN0aW9uKSA9PlxuICAgICAgY3JlYXRlQWN0aW9uKGFjdGlvbilcbiAgICApO1xuXG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZWFyVHJhbnNhY3Rpb25zLmNyZWF0ZVRyYW5zYWN0aW9uKFxuICAgICAgdHJhbnNhY3Rpb25zW2ldLnNpZ25lcklkLFxuICAgICAgdXRpbHMuUHVibGljS2V5LmZyb20ocHVibGljS2V5LnRvU3RyaW5nKCkpLFxuICAgICAgdHJhbnNhY3Rpb25zW2ldLnJlY2VpdmVySWQsXG4gICAgICBhY2Nlc3NLZXkubm9uY2UgKyBpICsgMSxcbiAgICAgIGFjdGlvbnMsXG4gICAgICB1dGlscy5zZXJpYWxpemUuYmFzZV9kZWNvZGUoYmxvY2suaGVhZGVyLmhhc2gpXG4gICAgKTtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgbmVhclRyYW5zYWN0aW9ucy5zaWduVHJhbnNhY3Rpb24oXG4gICAgICB0cmFuc2FjdGlvbixcbiAgICAgIHNpZ25lcixcbiAgICAgIHRyYW5zYWN0aW9uc1tpXS5zaWduZXJJZCxcbiAgICAgIG5ldHdvcmsubmV0d29ya0lkXG4gICAgKTtcblxuICAgIHNpZ25lZFRyYW5zYWN0aW9ucy5wdXNoKHJlc3BvbnNlWzFdKTtcbiAgfVxuXG4gIHJldHVybiBzaWduZWRUcmFuc2FjdGlvbnM7XG59O1xuIl0sIm5hbWVzIjpbInV0aWxzIiwidHJhbnNhY3Rpb25zIiwibmVhclRyYW5zYWN0aW9ucyIsInByb3ZpZGVycyIsImNyZWF0ZUFjdGlvbiIsInNpZ25UcmFuc2FjdGlvbnMiLCJzaWduZXIiLCJuZXR3b3JrIiwicHJvdmlkZXIiLCJKc29uUnBjUHJvdmlkZXIiLCJ1cmwiLCJub2RlVXJsIiwic2lnbmVkVHJhbnNhY3Rpb25zIiwiaSIsImxlbmd0aCIsInB1YmxpY0tleSIsImdldFB1YmxpY0tleSIsInNpZ25lcklkIiwibmV0d29ya0lkIiwiYmxvY2siLCJhY2Nlc3NLZXkiLCJQcm9taXNlIiwiYWxsIiwiZmluYWxpdHkiLCJxdWVyeSIsInJlcXVlc3RfdHlwZSIsImFjY291bnRfaWQiLCJwdWJsaWNfa2V5IiwidG9TdHJpbmciLCJhY3Rpb25zIiwibWFwIiwiYWN0aW9uIiwidHJhbnNhY3Rpb24iLCJjcmVhdGVUcmFuc2FjdGlvbiIsIlB1YmxpY0tleSIsImZyb20iLCJyZWNlaXZlcklkIiwibm9uY2UiLCJzZXJpYWxpemUiLCJiYXNlX2RlY29kZSIsImhlYWRlciIsImhhc2giLCJyZXNwb25zZSIsInNpZ25UcmFuc2FjdGlvbiIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../packages/wallet-utils/src/lib/sign-transactions.ts\n");

/***/ }),

/***/ "../../packages/wallet-utils/src/lib/wallet-utils.ts":
/*!***********************************************************!*\
  !*** ../../packages/wallet-utils/src/lib/wallet-utils.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAction\": () => (/* reexport safe */ _create_action__WEBPACK_IMPORTED_MODULE_0__.createAction),\n/* harmony export */   \"signTransactions\": () => (/* reexport safe */ _sign_transactions__WEBPACK_IMPORTED_MODULE_1__.signTransactions)\n/* harmony export */ });\n/* harmony import */ var _create_action__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create-action */ \"../../packages/wallet-utils/src/lib/create-action.ts\");\n/* harmony import */ var _sign_transactions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sign-transactions */ \"../../packages/wallet-utils/src/lib/sign-transactions.ts\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvd2FsbGV0LXV0aWxzL3NyYy9saWIvd2FsbGV0LXV0aWxzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL3BhY2thZ2VzL3dhbGxldC11dGlscy9zcmMvbGliL3dhbGxldC11dGlscy50cz84OWZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUFjdGlvbiB9IGZyb20gXCIuL2NyZWF0ZS1hY3Rpb25cIjtcbmltcG9ydCB7IHNpZ25UcmFuc2FjdGlvbnMgfSBmcm9tIFwiLi9zaWduLXRyYW5zYWN0aW9uc1wiO1xuXG5leHBvcnQgeyBjcmVhdGVBY3Rpb24sIHNpZ25UcmFuc2FjdGlvbnMgfTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVBY3Rpb24iLCJzaWduVHJhbnNhY3Rpb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../packages/wallet-utils/src/lib/wallet-utils.ts\n");

/***/ }),

/***/ "@ledgerhq/hw-transport-webhid":
/*!************************************************!*\
  !*** external "@ledgerhq/hw-transport-webhid" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@ledgerhq/hw-transport-webhid");

/***/ }),

/***/ "@meteorwallet/sdk":
/*!************************************!*\
  !*** external "@meteorwallet/sdk" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@meteorwallet/sdk");

/***/ }),

/***/ "@nightlylabs/connect":
/*!***************************************!*\
  !*** external "@nightlylabs/connect" ***!
  \***************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@nightlylabs/connect");

/***/ }),

/***/ "@walletconnect/qrcode-modal":
/*!**********************************************!*\
  !*** external "@walletconnect/qrcode-modal" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@walletconnect/qrcode-modal");

/***/ }),

/***/ "@walletconnect/sign-client":
/*!*********************************************!*\
  !*** external "@walletconnect/sign-client" ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@walletconnect/sign-client");

/***/ }),

/***/ "bn.js":
/*!************************!*\
  !*** external "bn.js" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("bn.js");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "is-mobile":
/*!****************************!*\
  !*** external "is-mobile" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("is-mobile");

/***/ }),

/***/ "near-api-js":
/*!******************************!*\
  !*** external "near-api-js" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("near-api-js");

/***/ }),

/***/ "near-api-js/lib/utils/errors":
/*!***********************************************!*\
  !*** external "near-api-js/lib/utils/errors" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("near-api-js/lib/utils/errors");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom/client":
/*!***********************************!*\
  !*** external "react-dom/client" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom/client");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "rxjs":
/*!***********************!*\
  !*** external "rxjs" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("rxjs");

/***/ }),

/***/ "big.js":
/*!*************************!*\
  !*** external "big.js" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = import("big.js");;

/***/ }),

/***/ "../../dist/packages/modal-ui/index.js":
/*!*********************************************!*\
  !*** ../../dist/packages/modal-ui/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupModal\": () => (/* binding */ setupModal)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_dom_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom/client */ \"react-dom/client\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n\n\n\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar fails$f = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n\nvar fails$e = fails$f;\n\nvar functionBindNative = !fails$e(function () {\n  // eslint-disable-next-line es-x/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n\nvar NATIVE_BIND$3 = functionBindNative;\n\nvar FunctionPrototype$2 = Function.prototype;\nvar bind$5 = FunctionPrototype$2.bind;\nvar call$e = FunctionPrototype$2.call;\nvar uncurryThis$g = NATIVE_BIND$3 && bind$5.bind(call$e, call$e);\n\nvar functionUncurryThis = NATIVE_BIND$3 ? function (fn) {\n  return fn && uncurryThis$g(fn);\n} : function (fn) {\n  return fn && function () {\n    return call$e.apply(fn, arguments);\n  };\n};\n\nvar uncurryThis$f = functionUncurryThis;\n\nvar toString$4 = uncurryThis$f({}.toString);\nvar stringSlice$1 = uncurryThis$f(''.slice);\n\nvar classofRaw$1 = function (it) {\n  return stringSlice$1(toString$4(it), 8, -1);\n};\n\nvar uncurryThis$e = functionUncurryThis;\nvar fails$d = fails$f;\nvar classof$5 = classofRaw$1;\n\nvar $Object$4 = Object;\nvar split = uncurryThis$e(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar indexedObject = fails$d(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object$4('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof$5(it) == 'String' ? split(it, '') : $Object$4(it);\n} : $Object$4;\n\nvar $TypeError$d = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nvar requireObjectCoercible$2 = function (it) {\n  if (it == undefined) throw $TypeError$d(\"Can't call method on \" + it);\n  return it;\n};\n\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject$2 = indexedObject;\nvar requireObjectCoercible$1 = requireObjectCoercible$2;\n\nvar toIndexedObject$5 = function (it) {\n  return IndexedObject$2(requireObjectCoercible$1(it));\n};\n\nvar check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global$k =\n  // eslint-disable-next-line es-x/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n\nvar shared$3 = {exports: {}};\n\nvar global$j = global$k;\n\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\nvar defineProperty$6 = Object.defineProperty;\n\nvar defineGlobalProperty$3 = function (key, value) {\n  try {\n    defineProperty$6(global$j, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global$j[key] = value;\n  } return value;\n};\n\nvar global$i = global$k;\nvar defineGlobalProperty$2 = defineGlobalProperty$3;\n\nvar SHARED = '__core-js_shared__';\nvar store$3 = global$i[SHARED] || defineGlobalProperty$2(SHARED, {});\n\nvar sharedStore = store$3;\n\nvar store$2 = sharedStore;\n\n(shared$3.exports = function (key, value) {\n  return store$2[key] || (store$2[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.23.3',\n  mode: 'global',\n  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.23.3/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n\nvar requireObjectCoercible = requireObjectCoercible$2;\n\nvar $Object$3 = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nvar toObject$5 = function (argument) {\n  return $Object$3(requireObjectCoercible(argument));\n};\n\nvar uncurryThis$d = functionUncurryThis;\nvar toObject$4 = toObject$5;\n\nvar hasOwnProperty = uncurryThis$d({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es-x/no-object-hasown -- safe\nvar hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject$4(it), key);\n};\n\nvar uncurryThis$c = functionUncurryThis;\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString$3 = uncurryThis$c(1.0.toString);\n\nvar uid$2 = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$3(++id + postfix, 36);\n};\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nvar isCallable$l = function (argument) {\n  return typeof argument == 'function';\n};\n\nvar global$h = global$k;\nvar isCallable$k = isCallable$l;\n\nvar aFunction = function (argument) {\n  return isCallable$k(argument) ? argument : undefined;\n};\n\nvar getBuiltIn$8 = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global$h[namespace]) : global$h[namespace] && global$h[namespace][method];\n};\n\nvar getBuiltIn$7 = getBuiltIn$8;\n\nvar engineUserAgent = getBuiltIn$7('navigator', 'userAgent') || '';\n\nvar global$g = global$k;\nvar userAgent$5 = engineUserAgent;\n\nvar process$3 = global$g.process;\nvar Deno$1 = global$g.Deno;\nvar versions = process$3 && process$3.versions || Deno$1 && Deno$1.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent$5) {\n  match = userAgent$5.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent$5.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nvar engineV8Version = version;\n\n/* eslint-disable es-x/no-symbol -- required for testing */\n\nvar V8_VERSION$1 = engineV8Version;\nvar fails$c = fails$f;\n\n// eslint-disable-next-line es-x/no-object-getownpropertysymbols -- required for testing\nvar nativeSymbol = !!Object.getOwnPropertySymbols && !fails$c(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION$1 && V8_VERSION$1 < 41;\n});\n\n/* eslint-disable es-x/no-symbol -- required for testing */\n\nvar NATIVE_SYMBOL$2 = nativeSymbol;\n\nvar useSymbolAsUid = NATIVE_SYMBOL$2\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n\nvar global$f = global$k;\nvar shared$2 = shared$3.exports;\nvar hasOwn$a = hasOwnProperty_1;\nvar uid$1 = uid$2;\nvar NATIVE_SYMBOL$1 = nativeSymbol;\nvar USE_SYMBOL_AS_UID$1 = useSymbolAsUid;\n\nvar WellKnownSymbolsStore = shared$2('wks');\nvar Symbol$1 = global$f.Symbol;\nvar symbolFor = Symbol$1 && Symbol$1['for'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID$1 ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid$1;\n\nvar wellKnownSymbol$e = function (name) {\n  if (!hasOwn$a(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL$1 || typeof WellKnownSymbolsStore[name] == 'string')) {\n    var description = 'Symbol.' + name;\n    if (NATIVE_SYMBOL$1 && hasOwn$a(Symbol$1, name)) {\n      WellKnownSymbolsStore[name] = Symbol$1[name];\n    } else if (USE_SYMBOL_AS_UID$1 && symbolFor) {\n      WellKnownSymbolsStore[name] = symbolFor(description);\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n\nvar isCallable$j = isCallable$l;\n\nvar isObject$7 = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable$j(it);\n};\n\nvar isObject$6 = isObject$7;\n\nvar $String$3 = String;\nvar $TypeError$c = TypeError;\n\n// `Assert: Type(argument) is Object`\nvar anObject$a = function (argument) {\n  if (isObject$6(argument)) return argument;\n  throw $TypeError$c($String$3(argument) + ' is not an object');\n};\n\nvar objectDefineProperties = {};\n\nvar fails$b = fails$f;\n\n// Detect IE8's incomplete defineProperty implementation\nvar descriptors = !fails$b(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n\nvar DESCRIPTORS$b = descriptors;\nvar fails$a = fails$f;\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nvar v8PrototypeDefineBug = DESCRIPTORS$b && fails$a(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n\nvar objectDefineProperty = {};\n\nvar global$e = global$k;\nvar isObject$5 = isObject$7;\n\nvar document$3 = global$e.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS$1 = isObject$5(document$3) && isObject$5(document$3.createElement);\n\nvar documentCreateElement$2 = function (it) {\n  return EXISTS$1 ? document$3.createElement(it) : {};\n};\n\nvar DESCRIPTORS$a = descriptors;\nvar fails$9 = fails$f;\nvar createElement$1 = documentCreateElement$2;\n\n// Thanks to IE8 for its funny defineProperty\nvar ie8DomDefine = !DESCRIPTORS$a && !fails$9(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement$1('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n\nvar NATIVE_BIND$2 = functionBindNative;\n\nvar call$d = Function.prototype.call;\n\nvar functionCall = NATIVE_BIND$2 ? call$d.bind(call$d) : function () {\n  return call$d.apply(call$d, arguments);\n};\n\nvar uncurryThis$b = functionUncurryThis;\n\nvar objectIsPrototypeOf = uncurryThis$b({}.isPrototypeOf);\n\nvar getBuiltIn$6 = getBuiltIn$8;\nvar isCallable$i = isCallable$l;\nvar isPrototypeOf$3 = objectIsPrototypeOf;\nvar USE_SYMBOL_AS_UID = useSymbolAsUid;\n\nvar $Object$2 = Object;\n\nvar isSymbol$2 = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn$6('Symbol');\n  return isCallable$i($Symbol) && isPrototypeOf$3($Symbol.prototype, $Object$2(it));\n};\n\nvar $String$2 = String;\n\nvar tryToString$5 = function (argument) {\n  try {\n    return $String$2(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n\nvar isCallable$h = isCallable$l;\nvar tryToString$4 = tryToString$5;\n\nvar $TypeError$b = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nvar aCallable$9 = function (argument) {\n  if (isCallable$h(argument)) return argument;\n  throw $TypeError$b(tryToString$4(argument) + ' is not a function');\n};\n\nvar aCallable$8 = aCallable$9;\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nvar getMethod$3 = function (V, P) {\n  var func = V[P];\n  return func == null ? undefined : aCallable$8(func);\n};\n\nvar call$c = functionCall;\nvar isCallable$g = isCallable$l;\nvar isObject$4 = isObject$7;\n\nvar $TypeError$a = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nvar ordinaryToPrimitive$1 = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable$g(fn = input.toString) && !isObject$4(val = call$c(fn, input))) return val;\n  if (isCallable$g(fn = input.valueOf) && !isObject$4(val = call$c(fn, input))) return val;\n  if (pref !== 'string' && isCallable$g(fn = input.toString) && !isObject$4(val = call$c(fn, input))) return val;\n  throw $TypeError$a(\"Can't convert object to primitive value\");\n};\n\nvar call$b = functionCall;\nvar isObject$3 = isObject$7;\nvar isSymbol$1 = isSymbol$2;\nvar getMethod$2 = getMethod$3;\nvar ordinaryToPrimitive = ordinaryToPrimitive$1;\nvar wellKnownSymbol$d = wellKnownSymbol$e;\n\nvar $TypeError$9 = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol$d('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nvar toPrimitive$1 = function (input, pref) {\n  if (!isObject$3(input) || isSymbol$1(input)) return input;\n  var exoticToPrim = getMethod$2(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call$b(exoticToPrim, input, pref);\n    if (!isObject$3(result) || isSymbol$1(result)) return result;\n    throw $TypeError$9(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n\nvar toPrimitive = toPrimitive$1;\nvar isSymbol = isSymbol$2;\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nvar toPropertyKey$3 = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n\nvar DESCRIPTORS$9 = descriptors;\nvar IE8_DOM_DEFINE$1 = ie8DomDefine;\nvar V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;\nvar anObject$9 = anObject$a;\nvar toPropertyKey$2 = toPropertyKey$3;\n\nvar $TypeError$8 = TypeError;\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE$1 = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nobjectDefineProperty.f = DESCRIPTORS$9 ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty(O, P, Attributes) {\n  anObject$9(O);\n  P = toPropertyKey$2(P);\n  anObject$9(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor$1(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject$9(O);\n  P = toPropertyKey$2(P);\n  anObject$9(Attributes);\n  if (IE8_DOM_DEFINE$1) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError$8('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar ceil = Math.ceil;\nvar floor$1 = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es-x/no-math-trunc -- safe\nvar mathTrunc = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor$1 : ceil)(n);\n};\n\nvar trunc = mathTrunc;\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nvar toIntegerOrInfinity$2 = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n\nvar toIntegerOrInfinity$1 = toIntegerOrInfinity$2;\n\nvar max$1 = Math.max;\nvar min$1 = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nvar toAbsoluteIndex$2 = function (index, length) {\n  var integer = toIntegerOrInfinity$1(index);\n  return integer < 0 ? max$1(integer + length, 0) : min$1(integer, length);\n};\n\nvar toIntegerOrInfinity = toIntegerOrInfinity$2;\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nvar toLength$1 = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n\nvar toLength = toLength$1;\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nvar lengthOfArrayLike$5 = function (obj) {\n  return toLength(obj.length);\n};\n\nvar toIndexedObject$4 = toIndexedObject$5;\nvar toAbsoluteIndex$1 = toAbsoluteIndex$2;\nvar lengthOfArrayLike$4 = lengthOfArrayLike$5;\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod$1 = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject$4($this);\n    var length = lengthOfArrayLike$4(O);\n    var index = toAbsoluteIndex$1(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nvar arrayIncludes = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod$1(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod$1(false)\n};\n\nvar hiddenKeys$4 = {};\n\nvar uncurryThis$a = functionUncurryThis;\nvar hasOwn$9 = hasOwnProperty_1;\nvar toIndexedObject$3 = toIndexedObject$5;\nvar indexOf = arrayIncludes.indexOf;\nvar hiddenKeys$3 = hiddenKeys$4;\n\nvar push$1 = uncurryThis$a([].push);\n\nvar objectKeysInternal = function (object, names) {\n  var O = toIndexedObject$3(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn$9(hiddenKeys$3, key) && hasOwn$9(O, key) && push$1(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn$9(O, key = names[i++])) {\n    ~indexOf(result, key) || push$1(result, key);\n  }\n  return result;\n};\n\n// IE8- don't enum bug keys\nvar enumBugKeys$3 = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n\nvar internalObjectKeys$1 = objectKeysInternal;\nvar enumBugKeys$2 = enumBugKeys$3;\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es-x/no-object-keys -- safe\nvar objectKeys$2 = Object.keys || function keys(O) {\n  return internalObjectKeys$1(O, enumBugKeys$2);\n};\n\nvar DESCRIPTORS$8 = descriptors;\nvar V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;\nvar definePropertyModule$5 = objectDefineProperty;\nvar anObject$8 = anObject$a;\nvar toIndexedObject$2 = toIndexedObject$5;\nvar objectKeys$1 = objectKeys$2;\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es-x/no-object-defineproperties -- safe\nobjectDefineProperties.f = DESCRIPTORS$8 && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject$8(O);\n  var props = toIndexedObject$2(Properties);\n  var keys = objectKeys$1(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule$5.f(O, key = keys[index++], props[key]);\n  return O;\n};\n\nvar getBuiltIn$5 = getBuiltIn$8;\n\nvar html$2 = getBuiltIn$5('document', 'documentElement');\n\nvar shared$1 = shared$3.exports;\nvar uid = uid$2;\n\nvar keys = shared$1('keys');\n\nvar sharedKey$3 = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n\n/* global ActiveXObject -- old IE, WSH */\n\nvar anObject$7 = anObject$a;\nvar definePropertiesModule = objectDefineProperties;\nvar enumBugKeys$1 = enumBugKeys$3;\nvar hiddenKeys$2 = hiddenKeys$4;\nvar html$1 = html$2;\nvar documentCreateElement$1 = documentCreateElement$2;\nvar sharedKey$2 = sharedKey$3;\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO$1 = sharedKey$2('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement$1('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html$1.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys$1.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys$1[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys$2[IE_PROTO$1] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es-x/no-object-create -- safe\nvar objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject$7(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n\nvar wellKnownSymbol$c = wellKnownSymbol$e;\nvar create$1 = objectCreate;\nvar defineProperty$5 = objectDefineProperty.f;\n\nvar UNSCOPABLES = wellKnownSymbol$c('unscopables');\nvar ArrayPrototype$1 = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype$1[UNSCOPABLES] == undefined) {\n  defineProperty$5(ArrayPrototype$1, UNSCOPABLES, {\n    configurable: true,\n    value: create$1(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nvar addToUnscopables$1 = function (key) {\n  ArrayPrototype$1[UNSCOPABLES][key] = true;\n};\n\nvar iterators = {};\n\nvar uncurryThis$9 = functionUncurryThis;\nvar isCallable$f = isCallable$l;\nvar store$1 = sharedStore;\n\nvar functionToString = uncurryThis$9(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable$f(store$1.inspectSource)) {\n  store$1.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nvar inspectSource$4 = store$1.inspectSource;\n\nvar global$d = global$k;\nvar isCallable$e = isCallable$l;\nvar inspectSource$3 = inspectSource$4;\n\nvar WeakMap$1 = global$d.WeakMap;\n\nvar nativeWeakMap = isCallable$e(WeakMap$1) && /native code/.test(inspectSource$3(WeakMap$1));\n\nvar createPropertyDescriptor$4 = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar DESCRIPTORS$7 = descriptors;\nvar definePropertyModule$4 = objectDefineProperty;\nvar createPropertyDescriptor$3 = createPropertyDescriptor$4;\n\nvar createNonEnumerableProperty$4 = DESCRIPTORS$7 ? function (object, key, value) {\n  return definePropertyModule$4.f(object, key, createPropertyDescriptor$3(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar NATIVE_WEAK_MAP = nativeWeakMap;\nvar global$c = global$k;\nvar uncurryThis$8 = functionUncurryThis;\nvar isObject$2 = isObject$7;\nvar createNonEnumerableProperty$3 = createNonEnumerableProperty$4;\nvar hasOwn$8 = hasOwnProperty_1;\nvar shared = sharedStore;\nvar sharedKey$1 = sharedKey$3;\nvar hiddenKeys$1 = hiddenKeys$4;\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError$2 = global$c.TypeError;\nvar WeakMap = global$c.WeakMap;\nvar set$1, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set$1(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject$2(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError$2('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = uncurryThis$8(store.get);\n  var wmhas = uncurryThis$8(store.has);\n  var wmset = uncurryThis$8(store.set);\n  set$1 = function (it, metadata) {\n    if (wmhas(store, it)) throw new TypeError$2(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    wmset(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas(store, it);\n  };\n} else {\n  var STATE = sharedKey$1('state');\n  hiddenKeys$1[STATE] = true;\n  set$1 = function (it, metadata) {\n    if (hasOwn$8(it, STATE)) throw new TypeError$2(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty$3(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn$8(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn$8(it, STATE);\n  };\n}\n\nvar internalState = {\n  set: set$1,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n\nvar objectGetOwnPropertyDescriptor = {};\n\nvar objectPropertyIsEnumerable = {};\n\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor$2 && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nobjectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor$2(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n\nvar DESCRIPTORS$6 = descriptors;\nvar call$a = functionCall;\nvar propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;\nvar createPropertyDescriptor$2 = createPropertyDescriptor$4;\nvar toIndexedObject$1 = toIndexedObject$5;\nvar toPropertyKey$1 = toPropertyKey$3;\nvar hasOwn$7 = hasOwnProperty_1;\nvar IE8_DOM_DEFINE = ie8DomDefine;\n\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nobjectGetOwnPropertyDescriptor.f = DESCRIPTORS$6 ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject$1(O);\n  P = toPropertyKey$1(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn$7(O, P)) return createPropertyDescriptor$2(!call$a(propertyIsEnumerableModule$1.f, O, P), O[P]);\n};\n\nvar makeBuiltIn$2 = {exports: {}};\n\nvar DESCRIPTORS$5 = descriptors;\nvar hasOwn$6 = hasOwnProperty_1;\n\nvar FunctionPrototype$1 = Function.prototype;\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS$5 && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn$6(FunctionPrototype$1, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS$5 || (DESCRIPTORS$5 && getDescriptor(FunctionPrototype$1, 'name').configurable));\n\nvar functionName = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n\nvar fails$8 = fails$f;\nvar isCallable$d = isCallable$l;\nvar hasOwn$5 = hasOwnProperty_1;\nvar DESCRIPTORS$4 = descriptors;\nvar CONFIGURABLE_FUNCTION_NAME$1 = functionName.CONFIGURABLE;\nvar inspectSource$2 = inspectSource$4;\nvar InternalStateModule$2 = internalState;\n\nvar enforceInternalState = InternalStateModule$2.enforce;\nvar getInternalState$1 = InternalStateModule$2.get;\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\nvar defineProperty$4 = Object.defineProperty;\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS$4 && !fails$8(function () {\n  return defineProperty$4(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn$1 = makeBuiltIn$2.exports = function (value, name, options) {\n  if (String(name).slice(0, 7) === 'Symbol(') {\n    name = '[' + String(name).replace(/^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn$5(value, 'name') || (CONFIGURABLE_FUNCTION_NAME$1 && value.name !== name)) {\n    if (DESCRIPTORS$4) defineProperty$4(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn$5(options, 'arity') && value.length !== options.arity) {\n    defineProperty$4(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn$5(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS$4) defineProperty$4(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn$5(state, 'source')) {\n    state.source = TEMPLATE.join(typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn$1(function toString() {\n  return isCallable$d(this) && getInternalState$1(this).source || inspectSource$2(this);\n}, 'toString');\n\nvar isCallable$c = isCallable$l;\nvar definePropertyModule$3 = objectDefineProperty;\nvar makeBuiltIn = makeBuiltIn$2.exports;\nvar defineGlobalProperty$1 = defineGlobalProperty$3;\n\nvar defineBuiltIn$5 = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable$c(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty$1(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule$3.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n\nvar objectGetOwnPropertyNames = {};\n\nvar internalObjectKeys = objectKeysInternal;\nvar enumBugKeys = enumBugKeys$3;\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es-x/no-object-getownpropertynames -- safe\nobjectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n\nvar objectGetOwnPropertySymbols = {};\n\n// eslint-disable-next-line es-x/no-object-getownpropertysymbols -- safe\nobjectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;\n\nvar getBuiltIn$4 = getBuiltIn$8;\nvar uncurryThis$7 = functionUncurryThis;\nvar getOwnPropertyNamesModule = objectGetOwnPropertyNames;\nvar getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;\nvar anObject$6 = anObject$a;\n\nvar concat$1 = uncurryThis$7([].concat);\n\n// all object keys, includes non-enumerable and symbols\nvar ownKeys$1 = getBuiltIn$4('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject$6(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;\n  return getOwnPropertySymbols ? concat$1(keys, getOwnPropertySymbols(it)) : keys;\n};\n\nvar hasOwn$4 = hasOwnProperty_1;\nvar ownKeys = ownKeys$1;\nvar getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;\nvar definePropertyModule$2 = objectDefineProperty;\n\nvar copyConstructorProperties$2 = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule$2.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn$4(target, key) && !(exceptions && hasOwn$4(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n\nvar fails$7 = fails$f;\nvar isCallable$b = isCallable$l;\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced$2 = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable$b(detection) ? fails$7(detection)\n    : !!detection;\n};\n\nvar normalize = isForced$2.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced$2.data = {};\nvar NATIVE = isForced$2.NATIVE = 'N';\nvar POLYFILL = isForced$2.POLYFILL = 'P';\n\nvar isForced_1 = isForced$2;\n\nvar global$b = global$k;\nvar getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;\nvar createNonEnumerableProperty$2 = createNonEnumerableProperty$4;\nvar defineBuiltIn$4 = defineBuiltIn$5;\nvar defineGlobalProperty = defineGlobalProperty$3;\nvar copyConstructorProperties$1 = copyConstructorProperties$2;\nvar isForced$1 = isForced_1;\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nvar _export = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global$b;\n  } else if (STATIC) {\n    target = global$b[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = (global$b[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor$1(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced$1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties$1(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty$2(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn$4(target, key, sourceProperty, options);\n  }\n};\n\nvar fails$6 = fails$f;\n\nvar correctPrototypeGetter = !fails$6(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es-x/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n\nvar hasOwn$3 = hasOwnProperty_1;\nvar isCallable$a = isCallable$l;\nvar toObject$3 = toObject$5;\nvar sharedKey = sharedKey$3;\nvar CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object$1 = Object;\nvar ObjectPrototype = $Object$1.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es-x/no-object-getprototypeof -- safe\nvar objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER ? $Object$1.getPrototypeOf : function (O) {\n  var object = toObject$3(O);\n  if (hasOwn$3(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable$a(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object$1 ? ObjectPrototype : null;\n};\n\nvar fails$5 = fails$f;\nvar isCallable$9 = isCallable$l;\nvar getPrototypeOf$1 = objectGetPrototypeOf;\nvar defineBuiltIn$3 = defineBuiltIn$5;\nvar wellKnownSymbol$b = wellKnownSymbol$e;\n\nvar ITERATOR$5 = wellKnownSymbol$b('iterator');\nvar BUGGY_SAFARI_ITERATORS$1 = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype$2, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es-x/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf$1(getPrototypeOf$1(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$2 = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype$2 == undefined || fails$5(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype$2[ITERATOR$5].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$2 = {};\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable$9(IteratorPrototype$2[ITERATOR$5])) {\n  defineBuiltIn$3(IteratorPrototype$2, ITERATOR$5, function () {\n    return this;\n  });\n}\n\nvar iteratorsCore = {\n  IteratorPrototype: IteratorPrototype$2,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1\n};\n\nvar defineProperty$3 = objectDefineProperty.f;\nvar hasOwn$2 = hasOwnProperty_1;\nvar wellKnownSymbol$a = wellKnownSymbol$e;\n\nvar TO_STRING_TAG$3 = wellKnownSymbol$a('toStringTag');\n\nvar setToStringTag$3 = function (target, TAG, STATIC) {\n  if (target && !STATIC) target = target.prototype;\n  if (target && !hasOwn$2(target, TO_STRING_TAG$3)) {\n    defineProperty$3(target, TO_STRING_TAG$3, { configurable: true, value: TAG });\n  }\n};\n\nvar IteratorPrototype$1 = iteratorsCore.IteratorPrototype;\nvar create = objectCreate;\nvar createPropertyDescriptor$1 = createPropertyDescriptor$4;\nvar setToStringTag$2 = setToStringTag$3;\nvar Iterators$4 = iterators;\n\nvar returnThis$1 = function () { return this; };\n\nvar createIteratorConstructor$1 = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype$1, { next: createPropertyDescriptor$1(+!ENUMERABLE_NEXT, next) });\n  setToStringTag$2(IteratorConstructor, TO_STRING_TAG, false);\n  Iterators$4[TO_STRING_TAG] = returnThis$1;\n  return IteratorConstructor;\n};\n\nvar isCallable$8 = isCallable$l;\n\nvar $String$1 = String;\nvar $TypeError$7 = TypeError;\n\nvar aPossiblePrototype$1 = function (argument) {\n  if (typeof argument == 'object' || isCallable$8(argument)) return argument;\n  throw $TypeError$7(\"Can't set \" + $String$1(argument) + ' as a prototype');\n};\n\n/* eslint-disable no-proto -- safe */\n\nvar uncurryThis$6 = functionUncurryThis;\nvar anObject$5 = anObject$a;\nvar aPossiblePrototype = aPossiblePrototype$1;\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es-x/no-object-setprototypeof -- safe\nvar objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\n    setter = uncurryThis$6(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject$5(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n\nvar $$a = _export;\nvar call$9 = functionCall;\nvar FunctionName = functionName;\nvar isCallable$7 = isCallable$l;\nvar createIteratorConstructor = createIteratorConstructor$1;\nvar getPrototypeOf = objectGetPrototypeOf;\nvar setPrototypeOf$1 = objectSetPrototypeOf;\nvar setToStringTag$1 = setToStringTag$3;\nvar createNonEnumerableProperty$1 = createNonEnumerableProperty$4;\nvar defineBuiltIn$2 = defineBuiltIn$5;\nvar wellKnownSymbol$9 = wellKnownSymbol$e;\nvar Iterators$3 = iterators;\nvar IteratorsCore = iteratorsCore;\n\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR$4 = wellKnownSymbol$9('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nvar defineIterator$1 = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR$4]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf$1) {\n          setPrototypeOf$1(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (!isCallable$7(CurrentIteratorPrototype[ITERATOR$4])) {\n          defineBuiltIn$2(CurrentIteratorPrototype, ITERATOR$4, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag$1(CurrentIteratorPrototype, TO_STRING_TAG, true);\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    if (CONFIGURABLE_FUNCTION_NAME) {\n      createNonEnumerableProperty$1(IterablePrototype, 'name', VALUES);\n    } else {\n      INCORRECT_VALUES_NAME = true;\n      defaultIterator = function values() { return call$9(nativeIterator, this); };\n    }\n  }\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        defineBuiltIn$2(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $$a({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  // define iterator\n  if (IterablePrototype[ITERATOR$4] !== defaultIterator) {\n    defineBuiltIn$2(IterablePrototype, ITERATOR$4, defaultIterator, { name: DEFAULT });\n  }\n  Iterators$3[NAME] = defaultIterator;\n\n  return methods;\n};\n\nvar toIndexedObject = toIndexedObject$5;\nvar addToUnscopables = addToUnscopables$1;\nvar Iterators$2 = iterators;\nvar InternalStateModule$1 = internalState;\nvar defineProperty$2 = objectDefineProperty.f;\nvar defineIterator = defineIterator$1;\nvar DESCRIPTORS$3 = descriptors;\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState$1 = InternalStateModule$1.set;\nvar getInternalState = InternalStateModule$1.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nvar es_array_iterator = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState$1(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nvar values = Iterators$2.Arguments = Iterators$2.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n// V8 ~ Chrome 45- bug\nif (DESCRIPTORS$3 && values.name !== 'values') try {\n  defineProperty$2(values, 'name', { value: 'values' });\n} catch (error) { /* empty */ }\n\n// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nvar domIterables = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n\n// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`\nvar documentCreateElement = documentCreateElement$2;\n\nvar classList = documentCreateElement('span').classList;\nvar DOMTokenListPrototype$1 = classList && classList.constructor && classList.constructor.prototype;\n\nvar domTokenListPrototype = DOMTokenListPrototype$1 === Object.prototype ? undefined : DOMTokenListPrototype$1;\n\nvar global$a = global$k;\nvar DOMIterables = domIterables;\nvar DOMTokenListPrototype = domTokenListPrototype;\nvar ArrayIteratorMethods = es_array_iterator;\nvar createNonEnumerableProperty = createNonEnumerableProperty$4;\nvar wellKnownSymbol$8 = wellKnownSymbol$e;\n\nvar ITERATOR$3 = wellKnownSymbol$8('iterator');\nvar TO_STRING_TAG$2 = wellKnownSymbol$8('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nvar handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR$3] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR$3, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR$3] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG$2]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG$2, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  handlePrototype(global$a[COLLECTION_NAME] && global$a[COLLECTION_NAME].prototype, COLLECTION_NAME);\n}\n\nhandlePrototype(DOMTokenListPrototype, 'DOMTokenList');\n\nvar DESCRIPTORS$2 = descriptors;\nvar uncurryThis$5 = functionUncurryThis;\nvar call$8 = functionCall;\nvar fails$4 = fails$f;\nvar objectKeys = objectKeys$2;\nvar getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;\nvar propertyIsEnumerableModule = objectPropertyIsEnumerable;\nvar toObject$2 = toObject$5;\nvar IndexedObject$1 = indexedObject;\n\n// eslint-disable-next-line es-x/no-object-assign -- safe\nvar $assign = Object.assign;\n// eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\nvar defineProperty$1 = Object.defineProperty;\nvar concat = uncurryThis$5([].concat);\n\n// `Object.assign` method\n// https://tc39.es/ecma262/#sec-object.assign\nvar objectAssign = !$assign || fails$4(function () {\n  // should have correct order of operations (Edge bug)\n  if (DESCRIPTORS$2 && $assign({ b: 1 }, $assign(defineProperty$1({}, 'a', {\n    enumerable: true,\n    get: function () {\n      defineProperty$1(this, 'b', {\n        value: 3,\n        enumerable: false\n      });\n    }\n  }), { b: 2 })).b !== 1) return true;\n  // should work with symbols and should have deterministic property order (V8 bug)\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line es-x/no-symbol -- safe\n  var symbol = Symbol();\n  var alphabet = 'abcdefghijklmnopqrst';\n  A[symbol] = 7;\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`\n  var T = toObject$2(target);\n  var argumentsLength = arguments.length;\n  var index = 1;\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\n  while (argumentsLength > index) {\n    var S = IndexedObject$1(arguments[index++]);\n    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS$2 || call$8(propertyIsEnumerable, S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n\nvar $$9 = _export;\nvar assign = objectAssign;\n\n// `Object.assign` method\n// https://tc39.es/ecma262/#sec-object.assign\n// eslint-disable-next-line es-x/no-object-assign -- required for testing\n$$9({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {\n  assign: assign\n});\n\nconst WalletNetworkChanged = ({\n  selector,\n  onSwitchWallet,\n  onDismiss\n}) => {\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n    className: \"switch-network-message-wrapper\"\n  }, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n      className: \"header\"\n    }, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h2\", {\n        children: \"You Must Change Networks\"\n      })\n    })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"content\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"p\", {\n        children: [\"We've detected that you need to change your wallet's network to\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"strong\", {\n          children: ` ${selector.options.network.networkId}`\n        }), \" for this dApp.\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n        children: \"Some wallets may not support changing networks. If you can not change networks you may consider switching to another wallet.\"\n      })]\n    })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"action-buttons\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n        className: \"left-button\",\n        onClick: onDismiss\n      }, {\n        children: \"Dismiss\"\n      })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n        className: \"right-button\",\n        onClick: onSwitchWallet\n      }, {\n        children: \"Switch Wallet\"\n      }))]\n    }))]\n  }));\n};\n\nvar tryToString$3 = tryToString$5;\n\nvar $TypeError$6 = TypeError;\n\nvar deletePropertyOrThrow$1 = function (O, P) {\n  if (!delete O[P]) throw $TypeError$6('Cannot delete property ' + tryToString$3(P) + ' of ' + tryToString$3(O));\n};\n\nvar wellKnownSymbol$7 = wellKnownSymbol$e;\n\nvar TO_STRING_TAG$1 = wellKnownSymbol$7('toStringTag');\nvar test$1 = {};\n\ntest$1[TO_STRING_TAG$1] = 'z';\n\nvar toStringTagSupport = String(test$1) === '[object z]';\n\nvar TO_STRING_TAG_SUPPORT = toStringTagSupport;\nvar isCallable$6 = isCallable$l;\nvar classofRaw = classofRaw$1;\nvar wellKnownSymbol$6 = wellKnownSymbol$e;\n\nvar TO_STRING_TAG = wellKnownSymbol$6('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nvar classof$4 = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable$6(O.callee) ? 'Arguments' : result;\n};\n\nvar classof$3 = classof$4;\n\nvar $String = String;\n\nvar toString$2 = function (argument) {\n  if (classof$3(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n\nvar toPropertyKey = toPropertyKey$3;\nvar definePropertyModule$1 = objectDefineProperty;\nvar createPropertyDescriptor = createPropertyDescriptor$4;\n\nvar createProperty$1 = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule$1.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n\nvar toAbsoluteIndex = toAbsoluteIndex$2;\nvar lengthOfArrayLike$3 = lengthOfArrayLike$5;\nvar createProperty = createProperty$1;\n\nvar $Array = Array;\nvar max = Math.max;\n\nvar arraySliceSimple = function (O, start, end) {\n  var length = lengthOfArrayLike$3(O);\n  var k = toAbsoluteIndex(start, length);\n  var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n  var result = $Array(max(fin - k, 0));\n  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);\n  result.length = n;\n  return result;\n};\n\nvar arraySlice$2 = arraySliceSimple;\n\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    array,\n    mergeSort(arraySlice$2(array, 0, middle), comparefn),\n    mergeSort(arraySlice$2(array, middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (array, left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n\n  while (lindex < llength || rindex < rlength) {\n    array[lindex + rindex] = (lindex < llength && rindex < rlength)\n      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n      : lindex < llength ? left[lindex++] : right[rindex++];\n  } return array;\n};\n\nvar arraySort = mergeSort;\n\nvar fails$3 = fails$f;\n\nvar arrayMethodIsStrict$2 = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails$3(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n\nvar userAgent$4 = engineUserAgent;\n\nvar firefox = userAgent$4.match(/firefox\\/(\\d+)/i);\n\nvar engineFfVersion = !!firefox && +firefox[1];\n\nvar UA = engineUserAgent;\n\nvar engineIsIeOrEdge = /MSIE|Trident/.test(UA);\n\nvar userAgent$3 = engineUserAgent;\n\nvar webkit = userAgent$3.match(/AppleWebKit\\/(\\d+)\\./);\n\nvar engineWebkitVersion = !!webkit && +webkit[1];\n\nvar $$8 = _export;\nvar uncurryThis$4 = functionUncurryThis;\nvar aCallable$7 = aCallable$9;\nvar toObject$1 = toObject$5;\nvar lengthOfArrayLike$2 = lengthOfArrayLike$5;\nvar deletePropertyOrThrow = deletePropertyOrThrow$1;\nvar toString$1 = toString$2;\nvar fails$2 = fails$f;\nvar internalSort = arraySort;\nvar arrayMethodIsStrict$1 = arrayMethodIsStrict$2;\nvar FF = engineFfVersion;\nvar IE_OR_EDGE = engineIsIeOrEdge;\nvar V8 = engineV8Version;\nvar WEBKIT = engineWebkitVersion;\n\nvar test = [];\nvar un$Sort = uncurryThis$4(test.sort);\nvar push = uncurryThis$4(test.push);\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails$2(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails$2(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD$1 = arrayMethodIsStrict$1('sort');\n\nvar STABLE_SORT = !fails$2(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD$1 || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString$1(x) > toString$1(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$$8({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable$7(comparefn);\n\n    var array = toObject$1(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? un$Sort(array) : un$Sort(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike$2(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) push(items, array[index]);\n    }\n\n    internalSort(items, getSortCompare(comparefn));\n\n    itemsLength = items.length;\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) deletePropertyOrThrow(array, index++);\n\n    return array;\n  }\n});\n\nvar $$7 = _export;\nvar DESCRIPTORS$1 = descriptors;\nvar global$9 = global$k;\nvar uncurryThis$3 = functionUncurryThis;\nvar hasOwn$1 = hasOwnProperty_1;\nvar isCallable$5 = isCallable$l;\nvar isPrototypeOf$2 = objectIsPrototypeOf;\nvar toString = toString$2;\nvar defineProperty = objectDefineProperty.f;\nvar copyConstructorProperties = copyConstructorProperties$2;\n\nvar NativeSymbol = global$9.Symbol;\nvar SymbolPrototype = NativeSymbol && NativeSymbol.prototype;\n\nif (DESCRIPTORS$1 && isCallable$5(NativeSymbol) && (!('description' in SymbolPrototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString(arguments[0]);\n    var result = isPrototypeOf$2(SymbolPrototype, this)\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  SymbolWrapper.prototype = SymbolPrototype;\n  SymbolPrototype.constructor = SymbolWrapper;\n\n  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';\n  var symbolToString = uncurryThis$3(SymbolPrototype.toString);\n  var symbolValueOf = uncurryThis$3(SymbolPrototype.valueOf);\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  var replace = uncurryThis$3(''.replace);\n  var stringSlice = uncurryThis$3(''.slice);\n\n  defineProperty(SymbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = symbolValueOf(this);\n      var string = symbolToString(symbol);\n      if (hasOwn$1(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = NATIVE_SYMBOL ? stringSlice(string, 7, -1) : replace(string, regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $$7({ global: true, constructor: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n\nvar aCallable$6 = aCallable$9;\nvar toObject = toObject$5;\nvar IndexedObject = indexedObject;\nvar lengthOfArrayLike$1 = lengthOfArrayLike$5;\n\nvar $TypeError$5 = TypeError;\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aCallable$6(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = lengthOfArrayLike$1(O);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw $TypeError$5('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nvar arrayReduce = {\n  // `Array.prototype.reduce` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n\nvar classof$2 = classofRaw$1;\nvar global$8 = global$k;\n\nvar engineIsNode = classof$2(global$8.process) == 'process';\n\nvar $$6 = _export;\nvar $reduce = arrayReduce.left;\nvar arrayMethodIsStrict = arrayMethodIsStrict$2;\nvar CHROME_VERSION = engineV8Version;\nvar IS_NODE$3 = engineIsNode;\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduce');\n// Chrome 80-82 has a critical bug\n// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\nvar CHROME_BUG = !IS_NODE$3 && CHROME_VERSION > 79 && CHROME_VERSION < 83;\n\n// `Array.prototype.reduce` method\n// https://tc39.es/ecma262/#sec-array.prototype.reduce\n$$6({ target: 'Array', proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var length = arguments.length;\n    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);\n  }\n});\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nconst WalletOptions = ({\n  selector,\n  options,\n  onWalletNotInstalled,\n  onError,\n  onConnectHardwareWallet,\n  onConnecting,\n  onConnected\n}) => {\n  const [walletInfoVisible, setWalletInfoVisible] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n  const [modules, setModules] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    const subscription = selector.store.observable.subscribe(state => {\n      state.modules.sort((current, next) => {\n        if (current.metadata.deprecated === next.metadata.deprecated) {\n          return 0;\n        }\n\n        return current.metadata.deprecated ? 1 : -1;\n      });\n      setModules(state.modules);\n    });\n    return () => subscription.unsubscribe(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleWalletClick = module => () => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n      const {\n        deprecated,\n        available\n      } = module.metadata;\n\n      if (module.type === \"injected\" && !available) {\n        return onWalletNotInstalled(module);\n      }\n\n      if (deprecated) {\n        return onError(new Error(`${module.metadata.name} is deprecated. Please select another wallet.`));\n      }\n\n      const wallet = yield module.wallet();\n      onConnecting(wallet);\n\n      if (wallet.type === \"hardware\") {\n        return onConnectHardwareWallet();\n      }\n\n      yield wallet.signIn({\n        contractId: options.contractId,\n        methodNames: options.methodNames\n      });\n      onConnected();\n    } catch (err) {\n      const {\n        name\n      } = module.metadata;\n      const message = err instanceof Error ? err.message : \"Something went wrong\";\n      onError(new Error(`Failed to sign in with ${name}: ${message}`));\n    }\n  });\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"wallet-options-wrapper\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", Object.assign({\n        className: \"description\"\n      }, {\n        children: (options === null || options === void 0 ? void 0 : options.description) || \"Please select a wallet to sign in to this dApp:\"\n      })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ul\", Object.assign({\n        className: \"options-list\"\n      }, {\n        children: modules.reduce((result, module) => {\n          const {\n            selectedWalletId\n          } = selector.store.getState();\n          const {\n            name,\n            description,\n            iconUrl,\n            deprecated\n          } = module.metadata;\n          const selected = module.id === selectedWalletId;\n          result.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", Object.assign({\n            id: module.id,\n            className: (selected ? \"selected-wallet\" : \"\") + (deprecated ? \" deprecated-wallet\" : \"\"),\n            onClick: selected ? undefined : handleWalletClick(module)\n          }, {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n              title: description || \"\",\n              className: \"wallet-content\"\n            }, {\n              children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n                className: \"wallet-img-box\"\n              }, {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                  src: iconUrl,\n                  alt: name\n                })\n              })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                  children: name\n                })\n              }), selected && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n                className: \"selected-wallet-text\"\n              }, {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                  children: \"selected\"\n                })\n              }))]\n            }))\n          }), module.id));\n          return result;\n        }, [])\n      }))]\n    })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"info\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", Object.assign({\n        onClick: () => {\n          setWalletInfoVisible(!walletInfoVisible);\n        }\n      }, {\n        children: \"What is a Wallet?\"\n      })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n        className: `info-description ${walletInfoVisible ? \"show\" : \"hide\"}-explanation`\n      }, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n          children: \"Wallets are used to send, receive and store digital assets. There are different types of wallets. They can be an extension added to your browser, a hardware device plugged into your computer, web-based or an app on your mobile device.\"\n        })\n      }))]\n    }))]\n  });\n};\n\nconst AlertMessage = ({\n  message,\n  onBack\n}) => {\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n    className: \"alert-message-wrapper\"\n  }, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n      children: message\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n      className: \"action-buttons\"\n    }, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n        className: \"left-button\",\n        onClick: onBack\n      }, {\n        children: \"OK\"\n      }))\n    }))]\n  }));\n};\n\nconst CloseButton = ({\n  onClick\n}) => {\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n    onClick: onClick,\n    className: \"close-button\"\n  }, {\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\", Object.assign({\n      xmlns: \"http://www.w3.org/2000/svg\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      width: \"24\",\n      fill: \"#A7A7A7\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"none\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n        d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n      })]\n    }))\n  }));\n};\n\nvar getBuiltIn$3 = getBuiltIn$8;\nvar definePropertyModule = objectDefineProperty;\nvar wellKnownSymbol$5 = wellKnownSymbol$e;\nvar DESCRIPTORS = descriptors;\n\nvar SPECIES$2 = wellKnownSymbol$5('species');\n\nvar setSpecies$1 = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn$3(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES$2]) {\n    defineProperty(Constructor, SPECIES$2, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n\nvar isPrototypeOf$1 = objectIsPrototypeOf;\n\nvar $TypeError$4 = TypeError;\n\nvar anInstance$1 = function (it, Prototype) {\n  if (isPrototypeOf$1(Prototype, it)) return it;\n  throw $TypeError$4('Incorrect invocation');\n};\n\nvar uncurryThis$2 = functionUncurryThis;\nvar fails$1 = fails$f;\nvar isCallable$4 = isCallable$l;\nvar classof$1 = classof$4;\nvar getBuiltIn$2 = getBuiltIn$8;\nvar inspectSource$1 = inspectSource$4;\n\nvar noop = function () { /* empty */ };\nvar empty = [];\nvar construct = getBuiltIn$2('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = uncurryThis$2(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.exec(noop);\n\nvar isConstructorModern = function isConstructor(argument) {\n  if (!isCallable$4(argument)) return false;\n  try {\n    construct(noop, empty, argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function isConstructor(argument) {\n  if (!isCallable$4(argument)) return false;\n  switch (classof$1(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n  }\n  try {\n    // we can't check .prototype since constructors produced by .bind haven't it\n    // `Function#toString` throws on some built-it function in some legacy engines\n    // (for example, `DOMQuad` and similar in FF41-)\n    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource$1(argument));\n  } catch (error) {\n    return true;\n  }\n};\n\nisConstructorLegacy.sham = true;\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nvar isConstructor$1 = !construct || fails$1(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n\nvar isConstructor = isConstructor$1;\nvar tryToString$2 = tryToString$5;\n\nvar $TypeError$3 = TypeError;\n\n// `Assert: IsConstructor(argument) is true`\nvar aConstructor$1 = function (argument) {\n  if (isConstructor(argument)) return argument;\n  throw $TypeError$3(tryToString$2(argument) + ' is not a constructor');\n};\n\nvar anObject$4 = anObject$a;\nvar aConstructor = aConstructor$1;\nvar wellKnownSymbol$4 = wellKnownSymbol$e;\n\nvar SPECIES$1 = wellKnownSymbol$4('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nvar speciesConstructor$1 = function (O, defaultConstructor) {\n  var C = anObject$4(O).constructor;\n  var S;\n  return C === undefined || (S = anObject$4(C)[SPECIES$1]) == undefined ? defaultConstructor : aConstructor(S);\n};\n\nvar NATIVE_BIND$1 = functionBindNative;\n\nvar FunctionPrototype = Function.prototype;\nvar apply$1 = FunctionPrototype.apply;\nvar call$7 = FunctionPrototype.call;\n\n// eslint-disable-next-line es-x/no-reflect -- safe\nvar functionApply = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND$1 ? call$7.bind(apply$1) : function () {\n  return call$7.apply(apply$1, arguments);\n});\n\nvar uncurryThis$1 = functionUncurryThis;\nvar aCallable$5 = aCallable$9;\nvar NATIVE_BIND = functionBindNative;\n\nvar bind$4 = uncurryThis$1(uncurryThis$1.bind);\n\n// optional / simple context binding\nvar functionBindContext = function (fn, that) {\n  aCallable$5(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind$4(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar uncurryThis = functionUncurryThis;\n\nvar arraySlice$1 = uncurryThis([].slice);\n\nvar $TypeError$2 = TypeError;\n\nvar validateArgumentsLength$1 = function (passed, required) {\n  if (passed < required) throw $TypeError$2('Not enough arguments');\n  return passed;\n};\n\nvar userAgent$2 = engineUserAgent;\n\nvar engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$2);\n\nvar global$7 = global$k;\nvar apply = functionApply;\nvar bind$3 = functionBindContext;\nvar isCallable$3 = isCallable$l;\nvar hasOwn = hasOwnProperty_1;\nvar fails = fails$f;\nvar html = html$2;\nvar arraySlice = arraySlice$1;\nvar createElement = documentCreateElement$2;\nvar validateArgumentsLength = validateArgumentsLength$1;\nvar IS_IOS$1 = engineIsIos;\nvar IS_NODE$2 = engineIsNode;\n\nvar set = global$7.setImmediate;\nvar clear = global$7.clearImmediate;\nvar process$2 = global$7.process;\nvar Dispatch = global$7.Dispatch;\nvar Function$1 = global$7.Function;\nvar MessageChannel = global$7.MessageChannel;\nvar String$1 = global$7.String;\nvar counter = 0;\nvar queue$1 = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar location, defer, channel, port;\n\ntry {\n  // Deno throws a ReferenceError on `location` access without `--location` flag\n  location = global$7.location;\n} catch (error) { /* empty */ }\n\nvar run = function (id) {\n  if (hasOwn(queue$1, id)) {\n    var fn = queue$1[id];\n    delete queue$1[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global$7.postMessage(String$1(id), location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(handler) {\n    validateArgumentsLength(arguments.length, 1);\n    var fn = isCallable$3(handler) ? handler : Function$1(handler);\n    var args = arraySlice(arguments, 1);\n    queue$1[++counter] = function () {\n      apply(fn, undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue$1[id];\n  };\n  // Node.js 0.8-\n  if (IS_NODE$2) {\n    defer = function (id) {\n      process$2.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS$1) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind$3(port.postMessage, port);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (\n    global$7.addEventListener &&\n    isCallable$3(global$7.postMessage) &&\n    !global$7.importScripts &&\n    location && location.protocol !== 'file:' &&\n    !fails(post)\n  ) {\n    defer = post;\n    global$7.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nvar task$1 = {\n  set: set,\n  clear: clear\n};\n\nvar userAgent$1 = engineUserAgent;\nvar global$6 = global$k;\n\nvar engineIsIosPebble = /ipad|iphone|ipod/i.test(userAgent$1) && global$6.Pebble !== undefined;\n\nvar userAgent = engineUserAgent;\n\nvar engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(userAgent);\n\nvar global$5 = global$k;\nvar bind$2 = functionBindContext;\nvar getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;\nvar macrotask = task$1.set;\nvar IS_IOS = engineIsIos;\nvar IS_IOS_PEBBLE = engineIsIosPebble;\nvar IS_WEBOS_WEBKIT = engineIsWebosWebkit;\nvar IS_NODE$1 = engineIsNode;\n\nvar MutationObserver = global$5.MutationObserver || global$5.WebKitMutationObserver;\nvar document$2 = global$5.document;\nvar process$1 = global$5.process;\nvar Promise$1 = global$5.Promise;\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global$5, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify$1, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE$1 && (parent = process$1.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify$1();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898\n  if (!IS_IOS && !IS_NODE$1 && !IS_WEBOS_WEBKIT && MutationObserver && document$2) {\n    toggle = true;\n    node = document$2.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify$1 = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (!IS_IOS_PEBBLE && Promise$1 && Promise$1.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise$1.resolve(undefined);\n    // workaround of WebKit ~ iOS Safari 10.1 bug\n    promise.constructor = Promise$1;\n    then = bind$2(promise.then, promise);\n    notify$1 = function () {\n      then(flush);\n    };\n  // Node.js without promises\n  } else if (IS_NODE$1) {\n    notify$1 = function () {\n      process$1.nextTick(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessage\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    // strange IE + webpack dev server bug - use .bind(global)\n    macrotask = bind$2(macrotask, global$5);\n    notify$1 = function () {\n      macrotask(flush);\n    };\n  }\n}\n\nvar microtask$1 = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify$1();\n  } last = task;\n};\n\nvar global$4 = global$k;\n\nvar hostReportErrors$1 = function (a, b) {\n  var console = global$4.console;\n  if (console && console.error) {\n    arguments.length == 1 ? console.error(a) : console.error(a, b);\n  }\n};\n\nvar perform$3 = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n\nvar Queue$1 = function () {\n  this.head = null;\n  this.tail = null;\n};\n\nQueue$1.prototype = {\n  add: function (item) {\n    var entry = { item: item, next: null };\n    if (this.head) this.tail.next = entry;\n    else this.head = entry;\n    this.tail = entry;\n  },\n  get: function () {\n    var entry = this.head;\n    if (entry) {\n      this.head = entry.next;\n      if (this.tail === entry) this.tail = null;\n      return entry.item;\n    }\n  }\n};\n\nvar queue = Queue$1;\n\nvar global$3 = global$k;\n\nvar promiseNativeConstructor = global$3.Promise;\n\nvar engineIsBrowser = typeof window == 'object' && typeof Deno != 'object';\n\nvar global$2 = global$k;\nvar NativePromiseConstructor$3 = promiseNativeConstructor;\nvar isCallable$2 = isCallable$l;\nvar isForced = isForced_1;\nvar inspectSource = inspectSource$4;\nvar wellKnownSymbol$3 = wellKnownSymbol$e;\nvar IS_BROWSER = engineIsBrowser;\nvar V8_VERSION = engineV8Version;\n\nNativePromiseConstructor$3 && NativePromiseConstructor$3.prototype;\nvar SPECIES = wellKnownSymbol$3('species');\nvar SUBCLASSING = false;\nvar NATIVE_PROMISE_REJECTION_EVENT$1 = isCallable$2(global$2.PromiseRejectionEvent);\n\nvar FORCED_PROMISE_CONSTRUCTOR$5 = isForced('Promise', function () {\n  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor$3);\n  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$3);\n  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n  // We can't detect it synchronously, so just check versions\n  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;\n  // We can't use @@species feature detection in V8 since it causes\n  // deoptimization and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) return false;\n  // Detect correctness of subclassing with @@species support\n  var promise = new NativePromiseConstructor$3(function (resolve) { resolve(1); });\n  var FakePromise = function (exec) {\n    exec(function () { /* empty */ }, function () { /* empty */ });\n  };\n  var constructor = promise.constructor = {};\n  constructor[SPECIES] = FakePromise;\n  SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;\n  if (!SUBCLASSING) return true;\n  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n  return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_PROMISE_REJECTION_EVENT$1;\n});\n\nvar promiseConstructorDetection = {\n  CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$5,\n  REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$1,\n  SUBCLASSING: SUBCLASSING\n};\n\nvar newPromiseCapability$2 = {};\n\nvar aCallable$4 = aCallable$9;\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aCallable$4(resolve);\n  this.reject = aCallable$4(reject);\n};\n\n// `NewPromiseCapability` abstract operation\n// https://tc39.es/ecma262/#sec-newpromisecapability\nnewPromiseCapability$2.f = function (C) {\n  return new PromiseCapability(C);\n};\n\nvar $$5 = _export;\nvar IS_NODE = engineIsNode;\nvar global$1 = global$k;\nvar call$6 = functionCall;\nvar defineBuiltIn$1 = defineBuiltIn$5;\nvar setPrototypeOf = objectSetPrototypeOf;\nvar setToStringTag = setToStringTag$3;\nvar setSpecies = setSpecies$1;\nvar aCallable$3 = aCallable$9;\nvar isCallable$1 = isCallable$l;\nvar isObject$1 = isObject$7;\nvar anInstance = anInstance$1;\nvar speciesConstructor = speciesConstructor$1;\nvar task = task$1.set;\nvar microtask = microtask$1;\nvar hostReportErrors = hostReportErrors$1;\nvar perform$2 = perform$3;\nvar Queue = queue;\nvar InternalStateModule = internalState;\nvar NativePromiseConstructor$2 = promiseNativeConstructor;\nvar PromiseConstructorDetection = promiseConstructorDetection;\nvar newPromiseCapabilityModule$3 = newPromiseCapability$2;\n\nvar PROMISE = 'Promise';\nvar FORCED_PROMISE_CONSTRUCTOR$4 = PromiseConstructorDetection.CONSTRUCTOR;\nvar NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;\nvar NATIVE_PROMISE_SUBCLASSING = PromiseConstructorDetection.SUBCLASSING;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar setInternalState = InternalStateModule.set;\nvar NativePromisePrototype$1 = NativePromiseConstructor$2 && NativePromiseConstructor$2.prototype;\nvar PromiseConstructor = NativePromiseConstructor$2;\nvar PromisePrototype = NativePromisePrototype$1;\nvar TypeError$1 = global$1.TypeError;\nvar document$1 = global$1.document;\nvar process = global$1.process;\nvar newPromiseCapability$1 = newPromiseCapabilityModule$3.f;\nvar newGenericPromiseCapability = newPromiseCapability$1;\n\nvar DISPATCH_EVENT = !!(document$1 && document$1.createEvent && global$1.dispatchEvent);\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\n\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject$1(it) && isCallable$1(then = it.then) ? then : false;\n};\n\nvar callReaction = function (reaction, state) {\n  var value = state.value;\n  var ok = state.state == FULFILLED;\n  var handler = ok ? reaction.ok : reaction.fail;\n  var resolve = reaction.resolve;\n  var reject = reaction.reject;\n  var domain = reaction.domain;\n  var result, then, exited;\n  try {\n    if (handler) {\n      if (!ok) {\n        if (state.rejection === UNHANDLED) onHandleUnhandled(state);\n        state.rejection = HANDLED;\n      }\n      if (handler === true) result = value;\n      else {\n        if (domain) domain.enter();\n        result = handler(value); // can throw\n        if (domain) {\n          domain.exit();\n          exited = true;\n        }\n      }\n      if (result === reaction.promise) {\n        reject(TypeError$1('Promise-chain cycle'));\n      } else if (then = isThenable(result)) {\n        call$6(then, result, resolve, reject);\n      } else resolve(result);\n    } else reject(value);\n  } catch (error) {\n    if (domain && !exited) domain.exit();\n    reject(error);\n  }\n};\n\nvar notify = function (state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  microtask(function () {\n    var reactions = state.reactions;\n    var reaction;\n    while (reaction = reactions.get()) {\n      callReaction(reaction, state);\n    }\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document$1.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global$1.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global$1['on' + name])) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (state) {\n  call$6(task, global$1, function () {\n    var promise = state.facade;\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform$2(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (state) {\n  call$6(task, global$1, function () {\n    var promise = state.facade;\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind$1 = function (fn, state, unwrap) {\n  return function (value) {\n    fn(state, value, unwrap);\n  };\n};\n\nvar internalReject = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(state, true);\n};\n\nvar internalResolve = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (state.facade === value) throw TypeError$1(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          call$6(then, value,\n            bind$1(internalResolve, wrapper, state),\n            bind$1(internalReject, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(state, false);\n    }\n  } catch (error) {\n    internalReject({ done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED_PROMISE_CONSTRUCTOR$4) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromisePrototype);\n    aCallable$3(executor);\n    call$6(Internal, this);\n    var state = getInternalPromiseState(this);\n    try {\n      executor(bind$1(internalResolve, state), bind$1(internalReject, state));\n    } catch (error) {\n      internalReject(state, error);\n    }\n  };\n\n  PromisePrototype = PromiseConstructor.prototype;\n\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: new Queue(),\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n\n  // `Promise.prototype.then` method\n  // https://tc39.es/ecma262/#sec-promise.prototype.then\n  Internal.prototype = defineBuiltIn$1(PromisePrototype, 'then', function then(onFulfilled, onRejected) {\n    var state = getInternalPromiseState(this);\n    var reaction = newPromiseCapability$1(speciesConstructor(this, PromiseConstructor));\n    state.parent = true;\n    reaction.ok = isCallable$1(onFulfilled) ? onFulfilled : true;\n    reaction.fail = isCallable$1(onRejected) && onRejected;\n    reaction.domain = IS_NODE ? process.domain : undefined;\n    if (state.state == PENDING) state.reactions.add(reaction);\n    else microtask(function () {\n      callReaction(reaction, state);\n    });\n    return reaction.promise;\n  });\n\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalPromiseState(promise);\n    this.promise = promise;\n    this.resolve = bind$1(internalResolve, state);\n    this.reject = bind$1(internalReject, state);\n  };\n\n  newPromiseCapabilityModule$3.f = newPromiseCapability$1 = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (isCallable$1(NativePromiseConstructor$2) && NativePromisePrototype$1 !== Object.prototype) {\n    nativeThen = NativePromisePrototype$1.then;\n\n    if (!NATIVE_PROMISE_SUBCLASSING) {\n      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs\n      defineBuiltIn$1(NativePromisePrototype$1, 'then', function then(onFulfilled, onRejected) {\n        var that = this;\n        return new PromiseConstructor(function (resolve, reject) {\n          call$6(nativeThen, that, resolve, reject);\n        }).then(onFulfilled, onRejected);\n      // https://github.com/zloirock/core-js/issues/640\n      }, { unsafe: true });\n    }\n\n    // make `.constructor === Promise` work for native promise-based APIs\n    try {\n      delete NativePromisePrototype$1.constructor;\n    } catch (error) { /* empty */ }\n\n    // make `instanceof Promise` work for native promise-based APIs\n    if (setPrototypeOf) {\n      setPrototypeOf(NativePromisePrototype$1, PromisePrototype);\n    }\n  }\n}\n\n$$5({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$4 }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false);\nsetSpecies(PROMISE);\n\nvar wellKnownSymbol$2 = wellKnownSymbol$e;\nvar Iterators$1 = iterators;\n\nvar ITERATOR$2 = wellKnownSymbol$2('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nvar isArrayIteratorMethod$1 = function (it) {\n  return it !== undefined && (Iterators$1.Array === it || ArrayPrototype[ITERATOR$2] === it);\n};\n\nvar classof = classof$4;\nvar getMethod$1 = getMethod$3;\nvar Iterators = iterators;\nvar wellKnownSymbol$1 = wellKnownSymbol$e;\n\nvar ITERATOR$1 = wellKnownSymbol$1('iterator');\n\nvar getIteratorMethod$2 = function (it) {\n  if (it != undefined) return getMethod$1(it, ITERATOR$1)\n    || getMethod$1(it, '@@iterator')\n    || Iterators[classof(it)];\n};\n\nvar call$5 = functionCall;\nvar aCallable$2 = aCallable$9;\nvar anObject$3 = anObject$a;\nvar tryToString$1 = tryToString$5;\nvar getIteratorMethod$1 = getIteratorMethod$2;\n\nvar $TypeError$1 = TypeError;\n\nvar getIterator$1 = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod$1(argument) : usingIterator;\n  if (aCallable$2(iteratorMethod)) return anObject$3(call$5(iteratorMethod, argument));\n  throw $TypeError$1(tryToString$1(argument) + ' is not iterable');\n};\n\nvar call$4 = functionCall;\nvar anObject$2 = anObject$a;\nvar getMethod = getMethod$3;\n\nvar iteratorClose$1 = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject$2(iterator);\n  try {\n    innerResult = getMethod(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call$4(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject$2(innerResult);\n  return value;\n};\n\nvar bind = functionBindContext;\nvar call$3 = functionCall;\nvar anObject$1 = anObject$a;\nvar tryToString = tryToString$5;\nvar isArrayIteratorMethod = isArrayIteratorMethod$1;\nvar lengthOfArrayLike = lengthOfArrayLike$5;\nvar isPrototypeOf = objectIsPrototypeOf;\nvar getIterator = getIterator$1;\nvar getIteratorMethod = getIteratorMethod$2;\nvar iteratorClose = iteratorClose$1;\n\nvar $TypeError = TypeError;\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar ResultPrototype = Result.prototype;\n\nvar iterate$2 = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'normal', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject$1(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (!iterFn) throw $TypeError(tryToString(iterable) + ' is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && isPrototypeOf(ResultPrototype, result)) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = iterator.next;\n  while (!(step = call$3(next, iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;\n  } return new Result(false);\n};\n\nvar wellKnownSymbol = wellKnownSymbol$e;\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line es-x/no-array-from, no-throw-literal -- required for testing\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nvar checkCorrectnessOfIteration$1 = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n\nvar NativePromiseConstructor$1 = promiseNativeConstructor;\nvar checkCorrectnessOfIteration = checkCorrectnessOfIteration$1;\nvar FORCED_PROMISE_CONSTRUCTOR$3 = promiseConstructorDetection.CONSTRUCTOR;\n\nvar promiseStaticsIncorrectIteration = FORCED_PROMISE_CONSTRUCTOR$3 || !checkCorrectnessOfIteration(function (iterable) {\n  NativePromiseConstructor$1.all(iterable).then(undefined, function () { /* empty */ });\n});\n\nvar $$4 = _export;\nvar call$2 = functionCall;\nvar aCallable$1 = aCallable$9;\nvar newPromiseCapabilityModule$2 = newPromiseCapability$2;\nvar perform$1 = perform$3;\nvar iterate$1 = iterate$2;\nvar PROMISE_STATICS_INCORRECT_ITERATION$1 = promiseStaticsIncorrectIteration;\n\n// `Promise.all` method\n// https://tc39.es/ecma262/#sec-promise.all\n$$4({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$1 }, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule$2.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform$1(function () {\n      var $promiseResolve = aCallable$1(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate$1(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call$2($promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n\nvar $$3 = _export;\nvar FORCED_PROMISE_CONSTRUCTOR$2 = promiseConstructorDetection.CONSTRUCTOR;\nvar NativePromiseConstructor = promiseNativeConstructor;\nvar getBuiltIn$1 = getBuiltIn$8;\nvar isCallable = isCallable$l;\nvar defineBuiltIn = defineBuiltIn$5;\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n// `Promise.prototype.catch` method\n// https://tc39.es/ecma262/#sec-promise.prototype.catch\n$$3({ target: 'Promise', proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$2, real: true }, {\n  'catch': function (onRejected) {\n    return this.then(undefined, onRejected);\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`\nif (isCallable(NativePromiseConstructor)) {\n  var method = getBuiltIn$1('Promise').prototype['catch'];\n  if (NativePromisePrototype['catch'] !== method) {\n    defineBuiltIn(NativePromisePrototype, 'catch', method, { unsafe: true });\n  }\n}\n\nvar $$2 = _export;\nvar call$1 = functionCall;\nvar aCallable = aCallable$9;\nvar newPromiseCapabilityModule$1 = newPromiseCapability$2;\nvar perform = perform$3;\nvar iterate = iterate$2;\nvar PROMISE_STATICS_INCORRECT_ITERATION = promiseStaticsIncorrectIteration;\n\n// `Promise.race` method\n// https://tc39.es/ecma262/#sec-promise.race\n$$2({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule$1.f(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aCallable(C.resolve);\n      iterate(iterable, function (promise) {\n        call$1($promiseResolve, C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n\nvar $$1 = _export;\nvar call = functionCall;\nvar newPromiseCapabilityModule = newPromiseCapability$2;\nvar FORCED_PROMISE_CONSTRUCTOR$1 = promiseConstructorDetection.CONSTRUCTOR;\n\n// `Promise.reject` method\n// https://tc39.es/ecma262/#sec-promise.reject\n$$1({ target: 'Promise', stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$1 }, {\n  reject: function reject(r) {\n    var capability = newPromiseCapabilityModule.f(this);\n    call(capability.reject, undefined, r);\n    return capability.promise;\n  }\n});\n\nvar anObject = anObject$a;\nvar isObject = isObject$7;\nvar newPromiseCapability = newPromiseCapability$2;\n\nvar promiseResolve$1 = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\nvar $ = _export;\nvar getBuiltIn = getBuiltIn$8;\nvar FORCED_PROMISE_CONSTRUCTOR = promiseConstructorDetection.CONSTRUCTOR;\nvar promiseResolve = promiseResolve$1;\n\ngetBuiltIn('Promise');\n\n// `Promise.resolve` method\n// https://tc39.es/ecma262/#sec-promise.resolve\n$({ target: 'Promise', stat: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {\n  resolve: function resolve(x) {\n    return promiseResolve(this, x);\n  }\n});\n\nconst HardwareWalletAccountsForm = ({\n  accounts,\n  onSelectedChanged,\n  onSubmit\n}) => {\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n    className: \"choose-ledger-account-form-wrapper\"\n  }, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"p\", {\n      children: [\"We found \", accounts.length, \" accounts on your device. Select the account(s) you wish to connect.\"]\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"form\", Object.assign({\n      className: \"form\",\n      onSubmit: e => {\n        onSubmit(accounts, e);\n      }\n    }, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n          className: \"form-control\"\n        }, {\n          children: accounts.map((account, index) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n              onChange: e => {\n                onSelectedChanged(index, e.target.checked);\n              },\n              checked: account.selected,\n              type: \"checkbox\",\n              id: account.accountId,\n              name: account.accountId,\n              value: account.accountId\n            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"label\", Object.assign({\n              htmlFor: account.accountId\n            }, {\n              children: [\" \", account.accountId]\n            })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"br\", {})]\n          }, index))\n        })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n          className: \"action-buttons\"\n        }, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n            className: \"right-button\",\n            type: \"submit\",\n            disabled: !accounts.some(x => x.selected)\n          }, {\n            children: \"Continue\"\n          }))\n        }))]\n      })\n    }))]\n  }));\n};\n\nconst WalletConnecting = ({\n  wallet,\n  onBack\n}) => {\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n    className: \"connecting-wrapper\"\n  }, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"content\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n        className: \"spinner\",\n        id: wallet === null || wallet === void 0 ? void 0 : wallet.id\n      }, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n          className: \"icon\"\n        }, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n            src: wallet === null || wallet === void 0 ? void 0 : wallet.metadata.iconUrl,\n            alt: \"\"\n          })\n        }))\n      })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n        children: \"Connecting...\"\n      })]\n    })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n      className: \"action-buttons\"\n    }, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n        className: \"left-button\",\n        onClick: onBack\n      }, {\n        children: \"Back\"\n      }))\n    }))]\n  }));\n};\n\nconst DEFAULT_DERIVATION_PATH = \"44'/397'/0'/0'/1'\";\nconst DerivationPath = ({\n  selector,\n  options,\n  onBack,\n  onConnected,\n  params,\n  onError\n}) => {\n  const [route, setRoute] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"EnterDerivationPath\");\n  const [derivationPath, setDerivationPath] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(DEFAULT_DERIVATION_PATH);\n  const [accounts, setAccounts] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n  const [hardwareWallet, setHardwareWallet] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)();\n  const [customAccountId, setCustomAccountId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n  const [connecting, setConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n\n  const getAccountIds = publicKey => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield fetch(`${selector.options.network.indexerUrl}/publicKey/ed25519:${publicKey}/accounts`);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to get account id from public key\");\n    }\n\n    const accountIds = yield response.json();\n\n    if (!Array.isArray(accountIds) || !accountIds.length) {\n      return [];\n    }\n\n    return accountIds;\n  });\n\n  const resolveAccounts = wallet => __awaiter(void 0, void 0, void 0, function* () {\n    const publicKey = yield wallet.getPublicKey(derivationPath);\n\n    try {\n      const accountIds = yield getAccountIds(publicKey);\n      return accountIds.map((accountId, index) => {\n        return {\n          derivationPath,\n          publicKey,\n          accountId,\n          selected: index === 0\n        };\n      });\n    } catch (e) {\n      return null;\n    }\n  });\n\n  const handleValidateAccount = () => __awaiter(void 0, void 0, void 0, function* () {\n    const wallet = yield selector.wallet(params.walletId);\n\n    if (wallet.type !== \"hardware\") {\n      return;\n    }\n\n    setConnecting(true);\n    setHardwareWallet(wallet);\n\n    try {\n      const resolvedAccounts = yield resolveAccounts(wallet);\n\n      if (!resolvedAccounts) {\n        setRoute(\"AddCustomAccountId\");\n        return;\n      }\n\n      const noAccounts = resolvedAccounts.length === 0;\n      const multipleAccounts = resolvedAccounts.length > 1;\n\n      if (noAccounts) {\n        setRoute(\"NoAccountsFound\");\n        return;\n      }\n\n      setAccounts(resolvedAccounts);\n\n      if (!multipleAccounts) {\n        setRoute(\"OverviewAccounts\");\n      } else {\n        setRoute(\"ChooseAccount\");\n      }\n    } catch (err) {\n      setConnecting(false);\n      const message = err instanceof Error ? err.message : \"Something went wrong\";\n      onError(message);\n    } finally {\n      setConnecting(false);\n    }\n  });\n\n  const handleAddCustomAccountId = () => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n      setConnecting(true);\n      const publicKey = yield hardwareWallet.getPublicKey(derivationPath);\n      setAccounts([{\n        derivationPath: derivationPath,\n        publicKey,\n        accountId: customAccountId,\n        selected: true\n      }]);\n      setRoute(\"OverviewAccounts\");\n    } catch (err) {\n      setConnecting(false);\n      const message = err instanceof Error ? err.message : \"Something went wrong\";\n      onError(message);\n    } finally {\n      setConnecting(false);\n    }\n  });\n\n  const handleSignIn = () => {\n    const mapAccounts = accounts.map(account => {\n      return {\n        derivationPath: account.derivationPath,\n        publicKey: account.publicKey,\n        accountId: account.accountId\n      };\n    });\n    return hardwareWallet.signIn({\n      contractId: options.contractId,\n      methodNames: options.methodNames,\n      accounts: mapAccounts\n    }).then(() => onConnected()).catch(err => {\n      onError(`Error: ${err.message}`);\n    });\n  };\n\n  const handleEnterClick = e => __awaiter(void 0, void 0, void 0, function* () {\n    if (e.key === \"Enter\") {\n      yield handleValidateAccount();\n    }\n  });\n\n  if (connecting) {\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n      className: \"derivation-path-wrapper\"\n    }, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WalletConnecting, {\n        wallet: hardwareWallet,\n        onBack: () => {\n          setConnecting(false);\n        }\n      })\n    }));\n  }\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n    className: \"derivation-path-wrapper\"\n  }, {\n    children: [route === \"EnterDerivationPath\" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"enter-derivation-path\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n          children: \"Make sure your device is plugged in, then enter a derivation path to connect:\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n          type: \"text\",\n          placeholder: \"Derivation Path\",\n          value: derivationPath,\n          onChange: e => {\n            setDerivationPath(e.target.value);\n          },\n          onKeyPress: handleEnterClick\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n        className: \"action-buttons\"\n      }, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n          className: \"left-button\",\n          onClick: onBack\n        }, {\n          children: \"Back\"\n        })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n          className: \"right-button\",\n          onClick: handleValidateAccount\n        }, {\n          children: \"Continue\"\n        }))]\n      }))]\n    })), route === \"NoAccountsFound\" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"no-accounts-found-wrapper\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"p\", {\n        children: [\"Can't found any account associated with this Ledger. Please create a new NEAR account on\", \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", Object.assign({\n          href: `https://${selector.options.network.networkId === \"testnet\" ? \"testnet\" : \"app\"}.mynearwallet.com/create`,\n          target: \"_blank\"\n        }, {\n          children: \"MyNearWallet\"\n        })), \" \", \"or connect an another Ledger.\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n        className: \"action-buttons\"\n      }, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n          className: \"left-button\",\n          onClick: () => {\n            setRoute(\"EnterDerivationPath\");\n          }\n        }, {\n          children: \"Back\"\n        }))\n      }))]\n    })), route === \"ChooseAccount\" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(HardwareWalletAccountsForm, {\n      accounts: accounts,\n      onSelectedChanged: (index, selected) => {\n        setAccounts(prevAccounts => {\n          const updateAccounts = prevAccounts.map((account, idx) => {\n            const selectedValue = index === idx ? selected : account.selected;\n            return Object.assign(Object.assign({}, account), {\n              selected: selectedValue\n            });\n          });\n          return [...updateAccounts];\n        });\n      },\n      onSubmit: (acc, e) => {\n        e.preventDefault();\n        setAccounts(prevAccounts => {\n          const selectedAccounts = prevAccounts.filter(account => account.selected);\n          return [...selectedAccounts];\n        });\n        setRoute(\"OverviewAccounts\");\n      }\n    }), route === \"AddCustomAccountId\" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"enter-custom-account\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n        children: \"Failed to automatically find account id. Provide it manually:\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n        className: \"input-wrapper\"\n      }, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n          type: \"text\",\n          placeholder: \"Account ID\",\n          value: customAccountId,\n          onChange: e => {\n            setCustomAccountId(e.target.value);\n          }\n        })\n      })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n        className: \"action-buttons\"\n      }, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n          className: \"right-button\",\n          onClick: handleAddCustomAccountId\n        }, {\n          children: \"Continue\"\n        }))\n      }))]\n    })), route === \"OverviewAccounts\" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"overview-wrapper\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n        className: \"overview-header\"\n      }, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h4\", {\n          children: \"Accounts\"\n        })\n      })), accounts.map((account, index) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n          className: \"account\"\n        }, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n            children: account.accountId\n          })\n        }))\n      }, account.accountId)), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n        className: \"action-buttons\"\n      }, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n          className: \"right-button\",\n          onClick: handleSignIn,\n          disabled: accounts.length === 0\n        }, {\n          children: \"Connect\"\n        }))\n      }))]\n    }))]\n  }));\n};\n\nconst WalletNotInstalled = ({\n  module,\n  onBack\n}) => {\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n    className: \"wallet-not-installed-wrapper\"\n  }, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"wallet-data\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({\n        className: `wallet-icon-box ${module.id}`\n      }, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n          src: module.metadata.iconUrl,\n          alt: module.metadata.name\n        })\n      })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n        children: module.metadata.name\n      })]\n    })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"p\", {\n      children: [`You'll need to install ${module.metadata.name} to continue. After installing`, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", Object.assign({\n        className: \"refresh-link\",\n        onClick: () => window.location.reload()\n      }, {\n        children: \"\\u00A0refresh the page.\"\n      }))]\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"action-buttons\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n        className: \"left-button\",\n        onClick: onBack\n      }, {\n        children: \"Back\"\n      })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({\n        className: \"right-button\",\n        onClick: () => {\n          if (module.type !== \"injected\") {\n            return;\n          }\n\n          window.open(module.metadata.downloadUrl, \"_blank\");\n        }\n      }, {\n        children: `Open ${module.metadata.name}`\n      }))]\n    }))]\n  }));\n};\n\nconst getThemeClass = theme => {\n  switch (theme) {\n    case \"dark\":\n      return \"dark-theme\";\n\n    case \"light\":\n      return \"light-theme\";\n\n    default:\n      return \"\";\n  }\n};\n\nconst Modal = ({\n  selector,\n  options,\n  visible,\n  hide\n}) => {\n  var _a, _b;\n\n  const [route, setRoute] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n    name: \"WalletOptions\"\n  });\n  const [alertMessage, setAlertMessage] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    setRoute({\n      name: \"WalletOptions\"\n    });\n  }, [visible]);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    const subscription = selector.on(\"networkChanged\", ({\n      networkId\n    }) => {\n      // Switched back to the correct network.\n      if (networkId === selector.options.network.networkId) {\n        return handleDismissClick();\n      }\n\n      setRoute({\n        name: \"WalletNetworkChanged\"\n      });\n    });\n    return () => subscription.remove(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleDismissClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {\n    setAlertMessage(null);\n    setRoute({\n      name: \"WalletOptions\"\n    });\n    hide();\n  }, [hide]);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    const close = e => {\n      if (e.key === \"Escape\") {\n        handleDismissClick();\n      }\n    };\n\n    window.addEventListener(\"keydown\", close);\n    return () => window.removeEventListener(\"keydown\", close);\n  }, [handleDismissClick]);\n\n  if (!visible) {\n    return null;\n  }\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n    className: `nws-modal-wrapper ${getThemeClass(options === null || options === void 0 ? void 0 : options.theme)} ${visible ? \"open\" : \"\"}`\n  }, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n      className: \"modal-overlay\",\n      onClick: handleDismissClick\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n      className: \"modal\"\n    }, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n        className: \"modal-header\"\n      }, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h2\", {\n          children: \"Connect Wallet\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CloseButton, {\n          onClick: handleDismissClick\n        })]\n      })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({\n        className: \"modal-body\"\n      }, {\n        children: [route.name === \"AlertMessage\" && alertMessage && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AlertMessage, {\n          message: alertMessage,\n          onBack: () => {\n            setAlertMessage(null);\n            setRoute({\n              name: \"WalletOptions\"\n            });\n          }\n        }), route.name === \"WalletOptions\" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WalletOptions, {\n          selector: selector,\n          options: options,\n          onWalletNotInstalled: module => {\n            setRoute({\n              name: \"WalletNotInstalled\",\n              params: {\n                module: module\n              }\n            });\n          },\n          onConnectHardwareWallet: () => {\n            setRoute({\n              name: \"DerivationPath\",\n              params: {\n                walletId: selector.store.getState().selectedWalletId || \"ledger\"\n              }\n            });\n          },\n          onConnecting: wallet => {\n            setRoute({\n              name: \"WalletConnecting\",\n              params: {\n                wallet: wallet\n              }\n            });\n          },\n          onConnected: handleDismissClick,\n          onError: err => {\n            setAlertMessage(err.message);\n            setRoute({\n              name: \"AlertMessage\"\n            });\n          }\n        }), route.name === \"DerivationPath\" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DerivationPath, {\n          selector: selector,\n          options: options,\n          onConnected: handleDismissClick,\n          params: route.params,\n          onBack: () => setRoute({\n            name: \"WalletOptions\"\n          }),\n          onError: message => {\n            setAlertMessage(message);\n            setRoute({\n              name: \"AlertMessage\"\n            });\n          }\n        }), route.name === \"WalletNetworkChanged\" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WalletNetworkChanged, {\n          selector: selector,\n          onSwitchWallet: () => setRoute({\n            name: \"WalletOptions\"\n          }),\n          onDismiss: handleDismissClick\n        }), route.name === \"WalletNotInstalled\" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WalletNotInstalled, {\n          module: (_a = route.params) === null || _a === void 0 ? void 0 : _a.module,\n          onBack: () => {\n            setRoute({\n              name: \"WalletOptions\"\n            });\n          }\n        }), route.name === \"WalletConnecting\" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WalletConnecting, {\n          wallet: (_b = route.params) === null || _b === void 0 ? void 0 : _b.wallet,\n          onBack: () => {\n            setRoute({\n              name: \"WalletOptions\"\n            });\n          }\n        })]\n      }))]\n    }))]\n  }));\n};\n\nconst MODAL_ELEMENT_ID = \"near-wallet-selector-modal\";\nlet modalInstance = null;\nconst setupModal = (selector, options) => {\n  const el = document.createElement(\"div\");\n  el.id = MODAL_ELEMENT_ID;\n  document.body.appendChild(el);\n  const container = document.getElementById(MODAL_ELEMENT_ID);\n  const root = (0,react_dom_client__WEBPACK_IMPORTED_MODULE_1__.createRoot)(container);\n\n  const render = (visible = false) => {\n    root.render((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Modal, {\n      selector: selector,\n      options: options,\n      visible: visible,\n      hide: () => render(false)\n    }));\n  };\n\n  render();\n\n  if (!modalInstance) {\n    modalInstance = {\n      show: () => {\n        render(true);\n      },\n      hide: () => {\n        render(false);\n      }\n    };\n  }\n\n  return modalInstance;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../dist/packages/modal-ui/index.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.tsx"));
module.exports = __webpack_exports__;

})();